{
  "listapisresponse": {
    "count": 398,
    "api": [
      {
        "name": "listNetworkACLs",
        "description": "Lists all network ACL items",
        "isasync": false,
        "related": "updateNetworkACLItem,createNetworkACL",
        "params": [
          {
            "name": "protocol",
            "description": "list network ACL Items by Protocol",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "aclid",
            "description": "list network ACL Items by ACL Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworkACLLists,createNetworkACLList"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Lists network ACL Item with the specified ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject,suspendProject"
          },
          {
            "name": "action",
            "description": "list network ACL Items by Action",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "list network ACL Items by network Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,createNetwork,updateNetwork"
          },
          {
            "name": "traffictype",
            "description": "list network ACL Items by traffic type - Ingress or Egress",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "number",
            "description": "Number of the ACL Item",
            "type": "integer"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the ACL",
            "type": "string"
          },
          {
            "name": "action",
            "description": "Action of ACL Item. Allow/Deny",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the network ACLs",
            "type": "list",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "startport",
            "description": "the starting port of ACL's port range",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "the ID of the ACL this item belongs to",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the ACL",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the ACL Item",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "endport",
            "description": "the ending port of ACL's port range",
            "type": "string"
          }
        ]
      },
      {
        "name": "reconnectHost",
        "description": "Reconnects a host.",
        "isasync": true,
        "related": "cancelHostMaintenance,listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost",
        "params": [
          {
            "name": "id",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "cancelHostMaintenance,reconnectHost,listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost"
          }
        ],
        "response": [
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          }
        ]
      },
      {
        "name": "createCondition",
        "description": "Creates a condition",
        "isasync": true,
        "related": "listConditions",
        "params": [
          {
            "name": "counterid",
            "description": "ID of the Counter.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createCounter,listCounters"
          },
          {
            "name": "account",
            "description": "the account of the condition. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "threshold",
            "description": "Threshold value.",
            "type": "long",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "the domain ID of the account.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "relationaloperator",
            "description": "Relational Operator to be used with threshold.",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain id of the Condition owner",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner of the Condition.",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the Condition",
            "type": "string"
          },
          {
            "name": "relationaloperator",
            "description": "Relational Operator to be used with threshold.",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the Condition.",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of counter",
            "type": "string"
          },
          {
            "name": "threshold",
            "description": "Threshold Value for the counter.",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the Condition",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner.",
            "type": "string"
          },
          {
            "name": "counter",
            "description": "Details of the Counter.",
            "type": "list"
          }
        ]
      },
      {
        "name": "copyTemplate",
        "description": "Copies a template from one zone to another.",
        "isasync": true,
        "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,createTemplate,listIsos",
        "params": [
          {
            "name": "id",
            "description": "Template ID.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,registerTemplate,updateTemplate,copyTemplate,registerIso,updateIso,listTemplates,copyIso,createTemplate,listIsos"
          },
          {
            "name": "destzoneid",
            "description": "ID of the zone the template is being copied to.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "sourcezoneid",
            "description": "ID of the zone the template is currently hosted on.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          }
        ]
      },
      {
        "name": "listRouters",
        "description": "List routers.",
        "isasync": false,
        "related": "destroyRouter,startRouter,stopRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,startInternalLoadBalancerVM,stopInternalLoadBalancerVM",
        "params": [
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "List networks by VPC",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the router",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "forvpc",
            "description": "if true is passed for this parameter, list only VPC routers",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the router",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "hostid",
            "description": "the host ID of the router",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "cancelHostMaintenance,listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject,suspendProject"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the disk router",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,listLoadBalancerRuleInstances,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,addNicToVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "networkid",
            "description": "list by network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,createNetwork,updateNetwork"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              }
            ]
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          }
        ]
      },
      {
        "name": "addNicToVirtualMachine",
        "description": "Adds VM to specified network by creating a NIC",
        "isasync": true,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,listLoadBalancerRuleInstances,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "networkid",
            "description": "Network ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listNetworks,createNetwork,updateNetwork"
          },
          {
            "name": "ipaddress",
            "description": "IP Address for the new network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "Virtual Machine ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,listLoadBalancerRuleInstances,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,addNicToVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "extractVolume",
        "description": "Extracts volume",
        "isasync": true,
        "related": "extractIso,extractTemplate",
        "params": [
          {
            "name": "url",
            "description": "the url to which the volume would be extracted",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "mode",
            "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "the ID of the volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,migrateVolume,listVolumes,createVolume,updateVolume"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone where the volume is located",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "accountid",
            "description": "the account id to which the extracted object belongs",
            "type": "string"
          },
          {
            "name": "resultstring",
            "description": "",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the time and date the object was created",
            "type": "date"
          },
          {
          },
          {
            "name": "url",
            "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the extracted object",
            "type": "string"
          },
          {
            "name": "extractMode",
            "description": "the mode of extraction - upload or download",
            "type": "string"
          },
          {
            "name": "extractId",
            "description": "the upload id of extracted object",
            "type": "string"
          },
          {
            "name": "uploadpercentage",
            "description": "the percentage of the entity uploaded to the specified location",
            "type": "integer"
          },
          {
            "name": "zonename",
            "description": "zone name the object was extracted from",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the extraction",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone ID the object was extracted from",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the extracted object",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of extracted object",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "type of the storage",
            "type": "string"
          }
        ]
      },
      {
        "name": "listNetworkServiceProviders",
        "description": "Lists network serviceproviders for a given physical network.",
        "since": "3.0.0",
        "isasync": false,
        "related": "addNetworkServiceProvider,updateNetworkServiceProvider,listTrafficTypes",
        "params": [
          {
            "name": "name",
            "description": "list providers by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list providers by state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork"
          }
        ],
        "response": [
          {
            "name": "destinationphysicalnetworkid",
            "description": "the destination physical network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "uuid of the network provider",
            "type": "string"
          },
          {
            "name": "canenableindividualservice",
            "description": "true if individual services can be enabled/disabled",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "state of the network provider",
            "type": "string"
          },
          {
            "name": "servicelist",
            "description": "services for this provider",
            "type": "list"
          },
          {
            "name": "name",
            "description": "the provider name",
            "type": "string"
          }
        ]
      },
      {
        "name": "addAccountToProject",
        "description": "Adds acoount to a project",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "email",
            "description": "email to which invitation to the project is going to be sent",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "name of the account to be added to the project",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "id of the project to add the account to",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject,suspendProject"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteEgressFirewallRule",
        "description": "Deletes an ggress firewall rule",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the firewall rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listInternalLoadBalancerElements",
        "description": "Lists all available Internal Load Balancer elements.",
        "since": "4.2.0",
        "isasync": false,
        "related": "configureInternalLoadBalancerElement,createInternalLoadBalancerElement",
        "params": [
          {
            "name": "enabled",
            "description": "list internal load balancer elements by enabled state",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list internal load balancer elements by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listInternalLoadBalancerElements,configureInternalLoadBalancerElement,createInternalLoadBalancerElement"
          },
          {
            "name": "nspid",
            "description": "list internal load balancer elements by network service provider id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "addNetworkServiceProvider,updateNetworkServiceProvider,listTrafficTypes"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "enabled",
            "description": "Enabled/Disabled the element",
            "type": "boolean"
          },
          {
            "name": "nspid",
            "description": "the physical network service provider id of the element",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the internal load balancer element",
            "type": "string"
          }
        ]
      },
      {
        "name": "listNetworkOfferings",
        "description": "Lists all available network offerings.",
        "isasync": false,
        "related": "updateNetworkOffering,createNetworkOffering",
        "params": [
          {
            "name": "guestiptype",
            "description": "list network offerings by guest type: Shared or Isolated",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "the ID of the network. Pass this in if you want to see the available network offering that a network can be changed to.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,createNetwork,updateNetwork"
          },
          {
            "name": "sourcenatsupported",
            "description": "true if need to list only netwok offerings where source nat is supported, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "istagged",
            "description": "true if offering has tags specified",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "forvpc",
            "description": "the network offering can be used only for network creation inside the VPC",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "specifyvlan",
            "description": "the tags for the network offering.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "list netowrk offerings available for network creation in specific zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "supportedservices",
            "description": "list network offerings supporting certain services",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "availability",
            "description": "the availability of network offering. Default value is Required",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "list network offerings by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list network offerings by state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list network offerings by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworkOfferings,updateNetworkOffering,createNetworkOffering"
          },
          {
            "name": "displaytext",
            "description": "list network offerings by display text",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isdefault",
            "description": "true if need to list only default network offerings. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "traffictype",
            "description": "list by traffic type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "list network offerings by tags",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "specifyipranges",
            "description": "true if need to list only network offerings which support specifying ip ranges",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  }
                ]
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "isdefault",
            "description": "true if network offering is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "maxconnections",
            "description": "maximum number of concurrents connections to be handled by lb",
            "type": "integer"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with network offering",
            "type": "map"
          },
          {
            "name": "ispersistent",
            "description": "true if network offering supports persistent networks, false otherwise",
            "type": "boolean"
          },
          {
            "name": "specifyipranges",
            "description": "true if network offering supports specifying ip ranges, false otherwise",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the tags for the network offering",
            "type": "string"
          },
          {
            "name": "egressdefaultpolicy",
            "description": "true if network offering supports persistent networks, false otherwise",
            "type": "boolean"
          },
          {
            "name": "forvpc",
            "description": "true if network offering can be used by VPC networks only",
            "type": "boolean"
          },
          {
            "name": "specifyvlan",
            "description": "true if network offering supports vlans, false otherwise",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date this network offering was created",
            "type": "date"
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
            "type": "string"
          },
          {
            "name": "guestiptype",
            "description": "guest type of the network offering, can be Shared or Isolated",
            "type": "string"
          },
          {
            "name": "availability",
            "description": "availability of the network offering",
            "type": "string"
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed.",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the id of the network offering",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the network offering",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the network offering.",
            "type": "string"
          },
          {
            "name": "conservemode",
            "description": "true if network offering is ip conserve mode enabled",
            "type": "boolean"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering used by virtual router provider",
            "type": "string"
          }
        ]
      },
      {
        "name": "addCluster",
        "description": "Adds a new cluster",
        "isasync": false,
        "related": "updateCluster,listClusters",
        "params": [
          {
            "name": "clustertype",
            "description": "type of the cluster: CloudManaged, ExternalManaged",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "password",
            "description": "the password for the host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "guestvswitchtype",
            "description": "Type of virtual switch used for guest traffic in the cluster. Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "Allocation state of this cluster for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vsmpassword",
            "description": "the password for the VSM associated with this cluster",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hypervisor",
            "description": "hypervisor type of the cluster: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "username",
            "description": "the username for the cluster",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the Pod ID for the host",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "clustername",
            "description": "the cluster name",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "url",
            "description": "the URL",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vsmusername",
            "description": "the username for the VSM associated with this cluster",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vsmipaddress",
            "description": "the ipaddress of the VSM associated with this cluster",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "publicvswitchname",
            "description": "Name of virtual switch used for public traffic in the cluster.  This would override zone wide traffic label setting.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "guestvswitchname",
            "description": "Name of virtual switch used for guest traffic in the cluster. This would override zone wide traffic label setting.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "publicvswitchtype",
            "description": "Type of virtual switch used for public traffic in the cluster. Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the cluster",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "hypervisortype",
            "description": "the hypervisor type of the cluster",
            "type": "string"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Cluster",
            "type": "list",
            "response": [
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              }
            ]
          },
          {
            "name": "podid",
            "description": "the Pod ID of the cluster",
            "type": "string"
          },
          {
            "name": "clustertype",
            "description": "the type of the cluster",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the cluster",
            "type": "string"
          },
          {
            "name": "cpuovercommitratio",
            "description": "The cpu overcommit ratio of the cluster",
            "type": "string"
          },
          {
            "name": "managedstate",
            "description": "whether this cluster is managed by cloudstack",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the cluster",
            "type": "string"
          },
          {
            "name": "memoryovercommitratio",
            "description": "The memory overcommit ratio of the cluster",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the cluster name",
            "type": "string"
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the cluster",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the cluster",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the cluster ID",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateConfiguration",
        "description": "Updates a configuration.",
        "isasync": false,
        "related": "listConfigurations",
        "params": [
          {
            "name": "zoneid",
            "description": "the ID of the Zone to update the parameter value for corresponding zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "name",
            "description": "the name of the configuration",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "value",
            "description": "the value of the configuration",
            "type": "string",
            "length": 4095,
            "required": false
          },
          {
            "name": "accountid",
            "description": "the ID of the Account to update the parameter value for corresponding account",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "disableAccount,createAccount,listAccounts,enableAccount,lockAccount,updateAccount,markDefaultZoneForAccount"
          },
          {
            "name": "clusterid",
            "description": "the ID of the Cluster to update the parameter value for corresponding cluster",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster,listClusters"
          },
          {
            "name": "storageid",
            "description": "the ID of the Storage pool to update the parameter value for corresponding storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "enableStorageMaintenance,listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,updateStoragePool,createStoragePool"
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the configuration",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the configuration",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the value of the configuration",
            "type": "long"
          },
          {
            "name": "category",
            "description": "the category of the configuration",
            "type": "string"
          },
          {
            "name": "value",
            "description": "the value of the configuration",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
            "type": "string"
          }
        ]
      },
      {
        "name": "listHypervisors",
        "description": "List hypervisors",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "zoneid",
            "description": "the zone id for listing hypervisors.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "Hypervisor name",
            "type": "string"
          }
        ]
      },
      {
        "name": "createVpnConnection",
        "description": "Create site to site vpn connection",
        "isasync": true,
        "related": "listVpnConnections,resetVpnConnection",
        "params": [
          {
            "name": "s2scustomergatewayid",
            "description": "id of the customer gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateVpnCustomerGateway,listVpnCustomerGateways,createVpnCustomerGateway"
          },
          {
            "name": "s2svpngatewayid",
            "description": "id of the vpn gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVpnGateway,listVpnGateways"
          }
        ],
        "response": [
          {
            "name": "publicip",
            "description": "the public IP address",
            "type": "string"
          },
          {
            "name": "s2scustomergatewayid",
            "description": "the customer gateway ID",
            "type": "string"
          },
          {
            "name": "ikepolicy",
            "description": "IKE policy of the customer gateway",
            "type": "string"
          },
          {
            "name": "state",
            "description": "State of vpn connection",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec Preshared-Key of the customer gateway",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "esppolicy",
            "description": "ESP policy of the customer gateway",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "dpd",
            "description": "if DPD is enabled for customer gateway",
            "type": "boolean"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string"
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of ESP SA of customer gateway",
            "type": "long"
          },
          {
            "name": "s2svpngatewayid",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of IKE SA of customer gateway",
            "type": "long"
          }
        ]
      },
      {
        "name": "listVolumes",
        "description": "Lists all volumes.",
        "isasync": false,
        "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,migrateVolume,createVolume,updateVolume",
        "params": [
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "the type of disk volume",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the pod id the disk volume belongs to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the ID of the availability zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "hostid",
            "description": "list volumes on specified host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "cancelHostMaintenance,listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost"
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,listLoadBalancerRuleInstances,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject,suspendProject"
          },
          {
            "name": "id",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,migrateVolume,listVolumes,createVolume,updateVolume"
          },
          {
            "name": "name",
            "description": "the name of the disk volume",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "suspendProject",
        "description": "Suspends a project",
        "since": "3.0.0",
        "isasync": true,
        "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject",
        "params": [
          {
            "name": "id",
            "description": "id of the project to be suspended",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject,suspendProject"
          }
        ],
        "response": [
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this project",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this project",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "list",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              }
            ]
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the project can own",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this project",
            "type": "long"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this project",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this project",
            "type": "long"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this project",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the project can own",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this project",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this project",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this project",
            "type": "long"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this project",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the project",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this project can acquire",
            "type": "string"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by project",
            "type": "long"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this project",
            "type": "long"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this project to acquire",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the project",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by project",
            "type": "long"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this project",
            "type": "long"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this project",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the project can own",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the project can own",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this project",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this project",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by project",
            "type": "long"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this project",
            "type": "integer"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the project",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by project",
            "type": "long"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this project",
            "type": "integer"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this project to acquire",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this project",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the project",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteLoadBalancer",
        "description": "Deletes a load balancer",
        "since": "4.2.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the Load Balancer",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "authorizeSecurityGroupIngress",
        "description": "Authorizes a particular ingress rule for this security group",
        "isasync": true,
        "related": "authorizeSecurityGroupEgress",
        "params": [
          {
            "name": "domainid",
            "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list associated",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "endport",
            "description": "end port for this ingress rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "an optional account for the security group. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "startport",
            "description": "start port for this ingress rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "usersecuritygrouplist",
            "description": "user to security group mapping",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "securitygroupid",
            "description": "The ID of the security group. Mutually exclusive with securityGroupName parameter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createSecurityGroup,listSecurityGroups"
          },
          {
            "name": "projectid",
            "description": "an optional project of the security group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "protocol",
            "description": "TCP is default. UDP is the other supported protocol",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "securitygroupname",
            "description": "The name of the security group. Mutually exclusive with securityGroupName parameter",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ruleid",
            "description": "the id of the security group rule",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "the code for the ICMP message response",
            "type": "integer"
          },
          {
            "name": "cidr",
            "description": "the CIDR notation for the base IP address of the security group rule",
            "type": "string"
          },
          {
            "name": "securitygroupname",
            "description": "security group name",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the security group rule",
            "type": "string"
          },
          {
            "name": "account",
            "description": "account owning the security group rule",
            "type": "string"
          },
          {
            "name": "endport",
            "description": "the ending IP of the security group rule ",
            "type": "integer"
          },
          {
            "name": "icmptype",
            "description": "the type of the ICMP message response",
            "type": "integer"
          },
          {
            "name": "startport",
            "description": "the starting IP of the security group rule",
            "type": "integer"
          }
        ]
      },
      {
        "name": "listLoadBalancers",
        "description": "Lists Load Balancers",
        "since": "4.2.0",
        "isasync": false,
        "related": "createLoadBalancer",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "scheme",
            "description": "the scheme of the Load Balancer. Supported value is Internal in the current release",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "sourceipaddressnetworkid",
            "description": "the network id of the source ip address",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,createNetwork,updateNetwork"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "sourceipaddress",
            "description": "the source ip address of the Load Balancer",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "name",
            "description": "the name of the Load Balancer",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "the network id of the Load Balancer",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,createNetwork,updateNetwork"
          },
          {
            "name": "id",
            "description": "the ID of the Load Balancer",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain ID of the Load Balancer",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the Load Balancer",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the Load Balancer",
            "type": "list",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "domain",
            "description": "the domain of the Load Balancer",
            "type": "string"
          },
          {
            "name": "loadbalancerrule",
            "description": "the list of rules associated with the Load Balancer",
            "type": "list",
            "response": [
              {
                "name": "sourceport",
                "description": "source port of the load balancer rule",
                "type": "integer"
              },
              {
                "name": "state",
                "description": "the state of the load balancer rule",
                "type": "string"
              },
              {
                "name": "instanceport",
                "description": "instance port of the load balancer rule",
                "type": "integer"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the Load Balancer",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "Load Balancer network id",
            "type": "string"
          },
          {
            "name": "sourceipaddressnetworkid",
            "description": "Load Balancer source ip network id",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the Load Balancer ID",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the Load Balancer",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the Load Balancer",
            "type": "string"
          },
          {
            "name": "sourceipaddress",
            "description": "Load Balancer source ip",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the Load Balancer",
            "type": "string"
          },
          {
            "name": "algorithm",
            "description": "the load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string"
          },
          {
            "name": "loadbalancerinstance",
            "description": "the list of instances associated with the Load Balancer",
            "type": "list",
            "response": [
              {
                "name": "id",
                "description": "the instance ID",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the instance",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the instance",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the state of the instance",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "listTrafficTypeImplementors",
        "description": "Lists implementors of implementor of a network traffic type or implementors of all network traffic types",
        "since": "3.0.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "traffictype",
            "description": "Optional. The network traffic type, if specified, return its implementor. Otherwise, return all traffic types with their implementor",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "traffictypeimplementor",
            "description": "implementor of network traffic type",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "network traffic type",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteDomain",
        "description": "Deletes a specified domain",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "ID of domain to delete",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "cleanup",
            "description": "true if all domain resources (child domains, accounts) have to be cleaned up, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "addTrafficMonitor",
        "description": "Adds Traffic Monitor Host for Direct Network Usage",
        "isasync": false,
        "related": "listTrafficMonitors",
        "params": [
          {
            "name": "includezones",
            "description": "Traffic going into the listed zones will be metered",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "url",
            "description": "URL of the traffic monitor Host",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "Zone in which to add the external firewall appliance.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "excludezones",
            "description": "Traffic going into the listed zones will not be metered",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the zone ID of the external firewall",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the external firewall",
            "type": "string"
          },
          {
            "name": "timeout",
            "description": "the timeout (in seconds) for requests to the external firewall",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the management IP address of the external firewall",
            "type": "string"
          },
          {
            "name": "numretries",
            "description": "the number of times to retry requests to the external firewall",
            "type": "string"
          }
        ]
      },
      {
        "name": "createPortableIpRange",
        "description": "adds a range of portable public IP's to a region",
        "since": "4.2.0",
        "isasync": true,
        "related": "listPortableIpRanges",
        "params": [
          {
            "name": "endip",
            "description": "the ending IP address in the portable IP range",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "regionid",
            "description": "Id of the Region",
            "type": "integer",
            "length": 255,
            "required": true,
            "related": "updateRegion,listRegions,addRegion"
          },
          {
            "name": "gateway",
            "description": "the gateway for the portable IP range",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "startip",
            "description": "the beginning IP address in the portable IP range",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "netmask",
            "description": "the netmask of the portable IP range",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "vlan",
            "description": "VLAN id, if not specified defaulted to untagged",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "startip",
            "description": "the start ip of the portable IP range",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "portable IP range ID",
            "type": "string"
          },
          {
            "name": "portableipaddress",
            "description": "List of portable IP and association with zone/network/vpc details that are part of GSLB rule",
            "type": "list",
            "response": [
              {
                "name": "networkid",
                "description": "the ID of the Network where ip belongs to",
                "type": "string"
              },
              {
                "name": "state",
                "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the ID of the zone the public IP address belongs to",
                "type": "string"
              },
              {
                "name": "allocated",
                "description": "date the portal IP address was acquired",
                "type": "date"
              },
              {
                "name": "domainid",
                "description": "the domain ID the portable IP address is associated with",
                "type": "string"
              },
              {
                "name": "regionid",
                "description": "Region Id in which global load balancer is created",
                "type": "integer"
              },
              {
                "name": "accountid",
                "description": "the account ID the portable IP address is associated with",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "public IP address",
                "type": "string"
              },
              {
                "name": "vpcid",
                "description": "VPC the ip belongs to",
                "type": "string"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network this belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "regionid",
            "description": "Region Id in which portable ip range is provisioned",
            "type": "integer"
          },
          {
            "name": "endip",
            "description": "the end ip of the portable IP range",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the VLAN IP range",
            "type": "string"
          }
        ]
      },
      {
        "name": "createTemplate",
        "description": "Creates a template of a virtual machine. The virtual machine must be in a STOPPED state. A template created from this command is automatically designated as a private template visible to the account that created it.",
        "isasync": true,
        "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos",
        "params": [
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the template",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "passwordenabled",
            "description": "true if the template supports the password reset feature; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "templatetag",
            "description": "the tag for this template.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "Optional, VM ID. If this presents, it is going to create a baremetal template for VM this ID refers to. This is only for VM whose hypervisor type is BareMetal",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,listLoadBalancerRuleInstances,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "requireshvm",
            "description": "true if the template requres HVM, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "bits",
            "description": "32 or 64 bit",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "snapshotid",
            "description": "the ID of the snapshot the template is being created from. Either this parameter, or volumeId has to be passed in",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listSnapshots,createSnapshot"
          },
          {
            "name": "displaytext",
            "description": "the display text of the template. This is usually used for display purposes.",
            "type": "string",
            "length": 4096,
            "required": true
          },
          {
            "name": "details",
            "description": "Template details in key/value pairs.",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "url",
            "description": "Optional, only for baremetal hypervisor. The directory name where template stored on CIFS server",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "volumeid",
            "description": "the ID of the disk volume the template is being created from. Either this parameter, or snapshotId has to be passed in",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,migrateVolume,createVolume,updateVolume"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS Type that best represents the OS of this template.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listOsTypes"
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          }
        ]
      },
      {
        "name": "listLoadBalancerRuleInstances",
        "description": "List all virtual machine instances that are assigned to a load balancer rule.",
        "isasync": false,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "applied",
            "description": "true if listing all virtual machines currently applied to the load balancer rule; default is true",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          }
        ],
        "response": [
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          }
        ]
      },
      {
        "name": "migrateVolume",
        "description": "Migrate volume",
        "since": "3.0.0",
        "isasync": true,
        "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,createVolume,updateVolume",
        "params": [
          {
            "name": "livemigrate",
            "description": "if the volume should be live migrated when it is attached to a running vm",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "volumeid",
            "description": "the ID of the volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,migrateVolume,createVolume,updateVolume"
          },
          {
            "name": "storageid",
            "description": "destination storage pool ID to migrate the volume to",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "enableStorageMaintenance,listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,updateStoragePool,createStoragePool"
          }
        ],
        "response": [
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              }
            ]
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteLBHealthCheckPolicy",
        "description": "Deletes a load balancer HealthCheck policy.",
        "since": "4.2.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the load balancer HealthCheck policy",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createLBHealthCheckPolicy,listLBHealthCheckPolicies"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updatePhysicalNetwork",
        "description": "Updates a physical network",
        "since": "3.0.0",
        "isasync": true,
        "related": "createPhysicalNetwork,listPhysicalNetworks",
        "params": [
          {
            "name": "id",
            "description": "physical network id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork"
          },
          {
            "name": "vlan",
            "description": "the VLAN for the physical network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "Enabled/Disabled",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "Tag the physical network",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "networkspeed",
            "description": "the speed for the physical network[1G/10G]",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "name of the physical network",
            "type": "string"
          },
          {
            "name": "broadcastdomainrange",
            "description": "Broadcast domain range of the physical network",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "comma separated tag",
            "type": "string"
          },
          {
            "name": "isolationmethods",
            "description": "isolation methods",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan of the physical network",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the physical network owner",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the physical network",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the uuid of the physical network",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the physical network",
            "type": "string"
          },
          {
            "name": "networkspeed",
            "description": "the speed of the physical network",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteStaticRoute",
        "description": "Deletes a static route",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the static route",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listStaticRoutes,createStaticRoute"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listTrafficMonitors",
        "description": "List traffic monitor Hosts.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "zoneid",
            "description": "zone Id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the zone ID of the external firewall",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the management IP address of the external firewall",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the external firewall",
            "type": "string"
          },
          {
            "name": "numretries",
            "description": "the number of times to retry requests to the external firewall",
            "type": "string"
          },
          {
            "name": "timeout",
            "description": "the timeout (in seconds) for requests to the external firewall",
            "type": "string"
          }
        ]
      },
      {
        "name": "registerSSHKeyPair",
        "description": "Register a public key in a keypair under a certain name",
        "isasync": false,
        "related": "listSSHKeyPairs,createSSHKeyPair",
        "params": [
          {
            "name": "projectid",
            "description": "an optional project for the ssh key",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "account",
            "description": "an optional account for the ssh key. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "name",
            "description": "Name of the keypair",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "publickey",
            "description": "Public key material of the keypair",
            "type": "string",
            "length": 5120,
            "required": true
          }
        ],
        "response": [
          {
            "name": "fingerprint",
            "description": "Fingerprint of the public key",
            "type": "string"
          },
          {
            "name": "privatekey",
            "description": "Private key",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the keypair",
            "type": "string"
          }
        ]
      },
      {
        "name": "listAutoScaleVmGroups",
        "description": "Lists autoscale vm groups.",
        "isasync": false,
        "related": "createAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup,disableAutoScaleVmGroup",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "lbruleid",
            "description": "the ID of the loadbalancer",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          },
          {
            "name": "zoneid",
            "description": "the availability zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "policyid",
            "description": "the ID of the policy",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAutoScalePolicies,updateAutoScalePolicy,createAutoScalePolicy"
          },
          {
            "name": "vmprofileid",
            "description": "the ID of the profile",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createAutoScaleVmProfile,listAutoScaleVmProfiles,updateAutoScaleVmProfile"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the autoscale vm group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup,listAutoScaleVmGroups,disableAutoScaleVmGroup"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "int"
          },
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "int"
          },
          {
            "name": "scaleuppolicies",
            "description": "list of scaleup autoscale policies",
            "type": "list"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the current state of the AutoScale Vm Group",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm group ID",
            "type": "string"
          },
          {
            "name": "scaledownpolicies",
            "description": "list of scaledown autoscale policies",
            "type": "list"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "lbruleid",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "int"
          },
          {
            "name": "vmprofileid",
            "description": "the autoscale profile that contains information about the vms in the vm group.",
            "type": "string"
          }
        ]
      },
      {
        "name": "getVMPassword",
        "description": "Returns an encrypted password for the VM",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "encryptedpassword",
            "description": "The encrypted password of the VM",
            "type": "string"
          }
        ]
      },
      {
        "name": "addSecondaryStorage",
        "description": "Adds secondary storage.",
        "isasync": false,
        "related": "listImageStores,addImageStore,createSecondaryStagingStore,addS3,listS3s,listSecondaryStagingStores",
        "params": [
          {
            "name": "url",
            "description": "the URL for the secondary storage",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the secondary storage",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          },
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "listInstanceGroups",
        "description": "Lists vm groups",
        "isasync": false,
        "related": "updateInstanceGroup,createInstanceGroup",
        "params": [
          {
            "name": "id",
            "description": "list instance groups by ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateInstanceGroup,createInstanceGroup,listInstanceGroups"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "list instance groups by name",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name of the instance group",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the instance group",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the instance group",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the group",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the instance group",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the group",
            "type": "string"
          },
          {
            "name": "created",
            "description": "time and date the instance group was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          }
        ]
      },
      {
        "name": "createNetwork",
        "description": "Creates a network",
        "isasync": false,
        "related": "listNetworks,updateNetwork",
        "params": [
          {
            "name": "isolatedpvlan",
            "description": "the isolated private vlan for this network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkofferingid",
            "description": "the network offering id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetworkOffering,createNetworkOffering"
          },
          {
            "name": "aclid",
            "description": "Network ACL Id associated for the network",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworkACLLists,createNetworkACLList"
          },
          {
            "name": "name",
            "description": "the name of the network",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "subdomainaccess",
            "description": "Defines whether to allow subdomains to use networks dedicated to their parent domain(s). Should be used with aclType=Domain, defaulted to allow.subdomain.network.access global config if not specified",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID the network belongs to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPhysicalNetwork,listPhysicalNetworks"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the network",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "endipv6",
            "description": "the ending IPv6 address in the IPv6 network range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "an optional project for the ssh key",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "gateway",
            "description": "the gateway of the network. Required for Shared networks and Isolated networks when it belongs to VPC",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "acltype",
            "description": "Access control type; supported values are account and domain. In 3.0 all shared networks should have aclType=Domain, and all Isolated networks - Account. Account means that only the account owner can use the network, domain - all accouns in the domain can use the network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "the VPC network belongs to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "startip",
            "description": "the beginning IP address in the network IP range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "account who will own the network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "displaynetwork",
            "description": "an optional field, whether to the display the network to the end user or not.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "netmask",
            "description": "the netmask of the network. Required for Shared networks and Isolated networks when it belongs to VPC",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "endip",
            "description": "the ending IP address in the network IP range. If not specified, will be defaulted to startIP",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "startipv6",
            "description": "the beginning IPv6 address in the IPv6 network range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the network",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "networkdomain",
            "description": "network domain",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "domain ID of the account owning a network",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of the IPv6 network. Required for Shared networks and Isolated networks when it belongs to VPC",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ip6cidr",
            "description": "the CIDR of IPv6 network, must be at least /64",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ispersistent",
            "description": "list networks that are persistent",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the id of the network",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "ACL Id associated with the VPC network",
            "type": "string"
          },
          {
            "name": "networkofferingid",
            "description": "network offering id the network is created from",
            "type": "string"
          },
          {
            "name": "restartrequired",
            "description": "true network requires restart",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with network",
            "type": "list",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "reservediprange",
            "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the network owner",
            "type": "string"
          },
          {
            "name": "networkofferingname",
            "description": "name of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the network's netmask",
            "type": "string"
          },
          {
            "name": "acltype",
            "description": "acl type - access type to the network",
            "type": "string"
          },
          {
            "name": "displaynetwork",
            "description": "an optional field, whether to the display the network to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the network belongs to",
            "type": "string"
          },
          {
            "name": "broadcastdomaintype",
            "description": "Broadcast domain type of the network",
            "type": "string"
          },
          {
            "name": "networkofferingdisplaytext",
            "description": "display text of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "broadcasturi",
            "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "The vlan of the network. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "networkcidr",
            "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the network",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the type of the network",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the network's gateway",
            "type": "string"
          },
          {
            "name": "networkofferingavailability",
            "description": "availability of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network id",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the network belongs to",
            "type": "string"
          },
          {
            "name": "subdomainaccess",
            "description": "true if users from subdomains can access the domain level network",
            "type": "boolean"
          },
          {
            "name": "isdefault",
            "description": "true if network is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the network",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of services",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the domain id of the network owner",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "canusefordeploy",
            "description": "list networks available for vm deployment",
            "type": "boolean"
          },
          {
            "name": "issystem",
            "description": "true if network is system, false otherwise",
            "type": "boolean"
          },
          {
            "name": "specifyipranges",
            "description": "true if network supports specifying ip ranges, false otherwise",
            "type": "boolean"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the network",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the network",
            "type": "string"
          },
          {
            "name": "related",
            "description": "related to what other network configuration",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the traffic type of the network",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner of the network",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the network",
            "type": "string"
          }
        ]
      },
      {
        "name": "listProjects",
        "description": "Lists projects and provides detailed information for listed projects",
        "since": "3.0.0",
        "isasync": false,
        "related": "activateProject,updateProject,listProjectAccounts,createProject",
        "params": [
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list projects by project ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,listProjects,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "tags",
            "description": "List projects by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "name",
            "description": "list projects by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list projects by state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "list projects by display text",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this project",
            "type": "long"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the project can own",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by project",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "list",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              }
            ]
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this project",
            "type": "integer"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this project to acquire",
            "type": "string"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by project",
            "type": "long"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the project can own",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this project",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this project",
            "type": "integer"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by project",
            "type": "long"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this project",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this project to acquire",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this project",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the project",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the project",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this project",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this project",
            "type": "long"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this project",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the project can own",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this project",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this project",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this project",
            "type": "long"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this project can acquire",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the project",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this project",
            "type": "long"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by project",
            "type": "long"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this project",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the project can own",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this project",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the project",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this project",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this project",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this project",
            "type": "string"
          }
        ]
      },
      {
        "name": "enableAccount",
        "description": "Enables an account",
        "isasync": false,
        "related": "disableAccount,createAccount,listAccounts,lockAccount,updateAccount,markDefaultZoneForAccount",
        "params": [
          {
            "name": "account",
            "description": "Enables specified account.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "Enables specified account in this domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "id",
            "description": "Account id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "disableAccount,createAccount,listAccounts,enableAccount,lockAccount,updateAccount,markDefaultZoneForAccount"
          }
        ],
        "response": [
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          },
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          },
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              },
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              }
            ]
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          }
        ]
      },
      {
        "name": "destroySystemVm",
        "description": "Destroyes a system virtual machine.",
        "isasync": true,
        "related": "changeServiceForSystemVm,startSystemVm,migrateSystemVm,stopSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm",
        "params": [
          {
            "name": "id",
            "description": "The ID of the system virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "changeServiceForSystemVm,startSystemVm,migrateSystemVm,stopSystemVm,destroySystemVm,listSystemVms,rebootSystemVm,scaleSystemVm"
          }
        ],
        "response": [
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          }
        ]
      },
      {
        "name": "listPublicIpAddresses",
        "description": "Lists all public ip addresses",
        "isasync": false,
        "related": "associateIpAddress,restartNetwork",
        "params": [
          {
            "name": "zoneid",
            "description": "lists all public IP addresses by Zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "isstaticnat",
            "description": "list only static nat ip addresses",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "lists all public IP addresses by physical network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPhysicalNetwork,listPhysicalNetworks"
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "forloadbalancing",
            "description": "list only ips used for load balancing",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "issourcenat",
            "description": "list only source nat ip addresses",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "List ips belonging to the VPC",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "associatednetworkid",
            "description": "lists all public IP addresses associated to the network specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,updateNetwork"
          },
          {
            "name": "vlanid",
            "description": "lists all public IP addresses by VLAN ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVlanIpRanges,dedicatePublicIpRange,createVlanIpRange"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "lists ip address by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "associateIpAddress,listPublicIpAddresses,restartNetwork"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the IP address",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddress",
            "description": "lists the specified IP address",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocatedonly",
            "description": "limits search results to allocated public IP addresses",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "vlanname",
            "description": "the VLAN associated with the IP address",
            "type": "string"
          },
          {
            "name": "vlanid",
            "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "allocated",
            "description": "date the public IP address was acquired",
            "type": "date"
          },
          {
            "name": "associatednetworkname",
            "description": "the name of the Network associated with the IP address",
            "type": "string"
          },
          {
            "name": "vmipaddress",
            "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the ID of the Network where ip belongs to",
            "type": "string"
          },
          {
            "name": "isstaticnat",
            "description": "true if this ip is for static nat, false otherwise",
            "type": "boolean"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the IP address",
            "type": "boolean"
          },
          {
            "name": "virtualmachineid",
            "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "public IP address",
            "type": "string"
          },
          {
            "name": "issystem",
            "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
            "type": "boolean"
          },
          {
            "name": "isportable",
            "description": "is public IP portable across the zones",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with ip address",
            "type": "list",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "associatednetworkid",
            "description": "the ID of the Network associated with the IP address",
            "type": "string"
          },
          {
            "name": "state",
            "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "purpose",
            "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the public IP address belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "public IP address id",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone the public IP address belongs to",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the ip belongs to",
            "type": "string"
          },
          {
            "name": "issourcenat",
            "description": "true if the IP address is a source nat address, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "enableStorageMaintenance",
        "description": "Puts storage pool into maintenance state",
        "isasync": true,
        "related": "listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,updateStoragePool,createStoragePool",
        "params": [
          {
            "name": "id",
            "description": "Primary storage ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "enableStorageMaintenance,listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,updateStoragePool,createStoragePool"
          }
        ],
        "response": [
          {
            "name": "ipaddress",
            "description": "the IP address of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "suitableformigration",
            "description": "true if this pool is suitable to migrate a volume, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the storage pool",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the storage pool",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the storage pool was created",
            "type": "date"
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeused",
            "description": "the host's currently used disk size",
            "type": "long"
          },
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type of the storage pool",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the storage pool",
            "type": "storagepoolstatus"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the storage pool",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the storage pool type",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the storage pool",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the storage pool",
            "type": "long"
          }
        ]
      },
      {
        "name": "removeFromGlobalLoadBalancerRule",
        "description": "Removes a load balancer rule association with global load balancer rule",
        "isasync": true,
        "params": [
          {
            "name": "loadbalancerrulelist",
            "description": "the list load balancer rules that will be assigned to gloabal load balacner rule",
            "type": "list",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          },
          {
            "name": "id",
            "description": "The ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listGlobalLoadBalancerRules,createGlobalLoadBalancerRule,updateGlobalLoadBalancerRule"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listVpnGateways",
        "description": "Lists site 2 site vpn gateways",
        "isasync": false,
        "related": "createVpnGateway",
        "params": [
          {
            "name": "id",
            "description": "id of the vpn gateway",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVpnGateway,listVpnGateways"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "vpcid",
            "description": "id of vpc",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "the vpc id of this gateway",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "publicip",
            "description": "the public IP address",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDedicatedPods",
        "description": "Lists dedicated pods.",
        "isasync": false,
        "related": "dedicatePod",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the pod",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "the name of the account associated with the pod. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the ID of the pod",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "podid",
            "description": "the ID of the Pod",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID to which the Pod is dedicated",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the Account Id to which the Pod is dedicated",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Name of the Pod",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          }
        ]
      },
      {
        "name": "stopRouter",
        "description": "Stops a router.",
        "isasync": true,
        "related": "destroyRouter,startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,startInternalLoadBalancerVM,stopInternalLoadBalancerVM",
        "params": [
          {
            "name": "id",
            "description": "the ID of the router",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "destroyRouter,startRouter,stopRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,startInternalLoadBalancerVM,stopInternalLoadBalancerVM"
          },
          {
            "name": "forced",
            "description": "Force stop the VM. The caller knows the VM is stopped.",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          }
        ]
      },
      {
        "name": "listClusters",
        "description": "Lists clusters.",
        "isasync": false,
        "related": "updateCluster",
        "params": [
          {
            "name": "showcapacities",
            "description": "flag to display the capacity of the clusters",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "clustertype",
            "description": "lists clusters by cluster type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hypervisor",
            "description": "lists clusters by hypervisor type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "lists clusters by Zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "podid",
            "description": "lists clusters by Pod ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "managedstate",
            "description": "whether this cluster is managed by cloudstack",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "lists clusters by the cluster name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "lists clusters by allocation state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "lists clusters by the cluster ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster,listClusters"
          }
        ],
        "response": [
          {
            "name": "managedstate",
            "description": "whether this cluster is managed by cloudstack",
            "type": "string"
          },
          {
            "name": "memoryovercommitratio",
            "description": "The memory overcommit ratio of the cluster",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the cluster ID",
            "type": "string"
          },
          {
            "name": "cpuovercommitratio",
            "description": "The cpu overcommit ratio of the cluster",
            "type": "string"
          },
          {
            "name": "hypervisortype",
            "description": "the hypervisor type of the cluster",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the cluster",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the cluster",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the cluster",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the cluster",
            "type": "string"
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the cluster",
            "type": "string"
          },
          {
            "name": "clustertype",
            "description": "the type of the cluster",
            "type": "string"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Cluster",
            "type": "list",
            "response": [
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the cluster name",
            "type": "string"
          }
        ]
      },
      {
        "name": "attachVolume",
        "description": "Attaches a disk volume to a virtual machine.",
        "isasync": true,
        "related": "uploadVolume,detachVolume,resizeVolume,createVolume,updateVolume",
        "params": [
          {
            "name": "deviceid",
            "description": "the ID of the device to map the volume to within the guest OS. If no deviceId is passed in, the next available deviceId will be chosen. Possible values for a Linux OS are:* 1 - /dev/xvdb* 2 - /dev/xvdc* 4 - /dev/xvde* 5 - /dev/xvdf* 6 - /dev/xvdg* 7 - /dev/xvdh* 8 - /dev/xvdi* 9 - /dev/xvdj",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "    the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "id",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,detachVolume,resizeVolume,attachVolume,createVolume,updateVolume"
          }
        ],
        "response": [
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateVPCOffering",
        "description": "Updates VPC offering",
        "isasync": true,
        "related": "createVPCOffering,listVPCOfferings",
        "params": [
          {
            "name": "state",
            "description": "update state for the VPC offering; supported states - Enabled/Disabled",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the id of the VPC offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVPCOffering,listVPCOfferings,updateVPCOffering"
          },
          {
            "name": "name",
            "description": "the name of the VPC offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the VPC offering",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  }
                ]
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "id",
            "description": "the id of the vpc offering",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if vpc offering is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the vpc offering",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the vpc offering. Can be Disabled/Enabled",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this vpc offering was created",
            "type": "date"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the vpc offering.",
            "type": "string"
          }
        ]
      },
      {
        "name": "resetSSHKeyForVirtualMachine",
        "description": "Resets the SSH Key for virtual machine. The virtual machine must be in a \"Stopped\" state. [async]",
        "isasync": true,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "domainid",
            "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "an optional account for the ssh key. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "an optional project for the ssh key",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,resetSSHKeyForVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "keypair",
            "description": "name of the ssh key pair used to login to the virtual machine",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              }
            ]
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          }
        ]
      },
      {
        "name": "listAutoScalePolicies",
        "description": "Lists autoscale policies.",
        "isasync": false,
        "related": "updateAutoScalePolicy,createAutoScalePolicy",
        "params": [
          {
            "name": "conditionid",
            "description": "the ID of the condition of the policy",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listConditions"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "vmgroupid",
            "description": "the ID of the autoscale vm group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createAutoScaleVmGroup,enableAutoScaleVmGroup,updateAutoScaleVmGroup,disableAutoScaleVmGroup"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "action",
            "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the autoscale policy",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAutoScalePolicies,updateAutoScalePolicy,createAutoScalePolicy"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "conditions",
            "description": "the list of IDs of the conditions that are being evaluated on every interval",
            "type": "list"
          },
          {
            "name": "id",
            "description": "the autoscale policy ID",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the autoscale policy",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id autoscale policy",
            "type": "string"
          },
          {
            "name": "action",
            "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the autoscale policy",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the autoscale policy",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the autoscale policy",
            "type": "string"
          },
          {
            "name": "quiettime",
            "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
            "type": "integer"
          },
          {
            "name": "duration",
            "description": "the duration for which the conditions have to be true before action is taken",
            "type": "integer"
          }
        ]
      },
      {
        "name": "cleanVMReservations",
        "description": "Cleanups VM reservations in the database.",
        "isasync": true,
        "params": [

        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createAffinityGroup",
        "description": "Creates an affinity/anti-affinity group",
        "isasync": true,
        "related": "listAffinityGroups",
        "params": [
          {
            "name": "domainid",
            "description": "domainId of the account owning the affinity group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "type",
            "description": "Type of the affinity group from the available affinity/anti-affinity group types",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "name",
            "description": "name of the affinity group",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "account",
            "description": "an account for the affinity group. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "description",
            "description": "optional description of the affinity group",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "virtualmachineIds",
            "description": "virtual machine Ids associated with this affinity group ",
            "type": "list"
          },
          {
            "name": "type",
            "description": "the type of the affinity group",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the affinity group",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the affinity group",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the affinity group",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the affinity group",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the affinity group",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the affinity group",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDeploymentPlanners",
        "description": "Lists all DeploymentPlanners available.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "Deployment Planner name",
            "type": "string"
          }
        ]
      },
      {
        "name": "listAlerts",
        "description": "Lists all alerts.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "type",
            "description": "list by alert type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the alert",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAlerts"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the id of the alert",
            "type": "string"
          },
          {
            "name": "type",
            "description": "One of the following alert types: MEMORY = 0, CPU = 1, STORAGE = 2, STORAGE_ALLOCATED = 3, PUBLIC_IP = 4, PRIVATE_IP = 5, HOST = 6, USERVM = 7, DOMAIN_ROUTER = 8, CONSOLE_PROXY = 9, ROUTING = 10: lost connection to default route (to the gateway), STORAGE_MISC = 11: lost connection to default route (to the gateway), USAGE_SERVER = 12: lost connection to default route (to the gateway), MANAGMENT_NODE = 13: lost connection to default route (to the gateway), DOMAIN_ROUTER_MIGRATE = 14, CONSOLE_PROXY_MIGRATE = 15, USERVM_MIGRATE = 16, VLAN = 17, SSVM = 18, USAGE_SERVER_RESULT = 19",
            "type": "short"
          },
          {
            "name": "sent",
            "description": "the date and time the alert was sent",
            "type": "date"
          },
          {
            "name": "description",
            "description": "description of the alert",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteTags",
        "description": "Deleting resource tag(s)",
        "since": "4.0.0",
        "isasync": true,
        "params": [
          {
            "name": "resourcetype",
            "description": "Delete tag by resource type",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "tags",
            "description": "Delete tags matching key/value pairs",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "resourceids",
            "description": "Delete tags for resource id(s)",
            "type": "list",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteAccountFromProject",
        "description": "Deletes account from the project",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "projectid",
            "description": "id of the project to remove the account from",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "account",
            "description": "name of the account to be removed from the project",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "addBaremetalPxePingServer",
        "description": "add a baremetal ping pxe server",
        "isasync": true,
        "related": "listBaremetalPxePingServer",
        "params": [
          {
            "name": "password",
            "description": "Credentials to reach external pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "username",
            "description": "Credentials to reach external pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "pxeservertype",
            "description": "type of pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "url",
            "description": "URL of the external pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "pingstorageserverip",
            "description": "PING storage server ip",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "podid",
            "description": "Pod Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "pingcifsusername",
            "description": "Username of PING storage server",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pingcifspassword",
            "description": "Password of PING storage server",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPhysicalNetwork,listPhysicalNetworks"
          },
          {
            "name": "tftpdir",
            "description": "Tftp root directory of PXE server",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "pingdir",
            "description": "Root directory on PING storage server",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "pingdir",
            "description": "Root directory on PING storage server",
            "type": "string"
          },
          {
            "name": "tftpdir",
            "description": "Tftp root directory of PXE server",
            "type": "string"
          },
          {
            "name": "pingstorageserverip",
            "description": "PING storage server ip",
            "type": "string"
          }
        ]
      },
      {
        "name": "listPrivateGateways",
        "description": "List private gateways",
        "isasync": false,
        "related": "createPrivateGateway",
        "params": [
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list private gateway by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPrivateGateways,createPrivateGateway"
          },
          {
            "name": "vpcid",
            "description": "list gateways by vpc",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "vlan",
            "description": "list gateways by vlan",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddress",
            "description": "list gateways by ip address",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list gateways by state",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "vpcid",
            "description": "VPC the private gateaway belongs to",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network id",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the private gateway",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan of the private gateway",
            "type": "string"
          },
          {
            "name": "state",
            "description": "State of the gateway, can be Creating, Ready, Deleting",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the private gateway",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the private gateway",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the private gateway's ip address",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the private gateway",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the private gateway belongs to",
            "type": "string"
          },
          {
            "name": "sourcenatsupported",
            "description": "Souce Nat enable status",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account associated with the private gateway",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the private gateway",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the private gateway",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "ACL Id set for private gateway",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the private gateway's netmask",
            "type": "string"
          }
        ]
      },
      {
        "name": "ldapConfig",
        "description": "Configure the LDAP context for this site.",
        "since": "3.0.0",
        "isasync": false,
        "related": "ldapRemove",
        "params": [
          {
            "name": "searchbase",
            "description": "The search base defines the starting point for the search in the directory tree Example:  dc=cloud,dc=com.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "truststorepass",
            "description": "Enter the password for trust store.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hostname",
            "description": "Hostname or ip address of the ldap server eg: my.ldap.com",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If true return current LDAP configuration",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "binddn",
            "description": "Specify the distinguished name of a user with the search permission on the directory.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ssl",
            "description": "Check Use SSL if the external LDAP server is configured for LDAP over SSL.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "bindpass",
            "description": "Enter the password.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "queryfilter",
            "description": "You specify a query filter here, which narrows down the users, who can be part of this domain.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "truststore",
            "description": "Enter the path to trust certificates store.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "port",
            "description": "Specify the LDAP port if required, default is 389.",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "binddn",
            "description": "Specify the distinguished name of a user with the search permission on the directory",
            "type": "string"
          },
          {
            "name": "queryfilter",
            "description": "You specify a query filter here, which narrows down the users, who can be part of this domain",
            "type": "string"
          },
          {
            "name": "bindpass",
            "description": "DN password",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "Hostname or ip address of the ldap server eg: my.ldap.com",
            "type": "string"
          },
          {
            "name": "searchbase",
            "description": "The search base defines the starting point for the search in the directory tree Example:  dc=cloud,dc=com",
            "type": "string"
          },
          {
            "name": "port",
            "description": "Specify the LDAP port if required, default is 389",
            "type": "string"
          },
          {
            "name": "ssl",
            "description": "Check Use SSL if the external LDAP server is configured for LDAP over SSL",
            "type": "string"
          }
        ]
      },
      {
        "name": "deletePortableIpRange",
        "description": "deletes a range of portable public IP's associated with a region",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "Id of the portable ip range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listPortableIpRanges"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateRegion",
        "description": "Updates a region",
        "isasync": false,
        "related": "listRegions,addRegion",
        "params": [
          {
            "name": "name",
            "description": "updates region with this name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "endpoint",
            "description": "updates region with this end point",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Id of region to update",
            "type": "integer",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "endpoint",
            "description": "the end point of the region",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the region",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the region",
            "type": "integer"
          }
        ]
      },
      {
        "name": "updateVolume",
        "description": "Updates the volume.",
        "isasync": true,
        "related": "uploadVolume,detachVolume,resizeVolume,createVolume",
        "params": [
          {
            "name": "id",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,detachVolume,resizeVolume,createVolume,updateVolume"
          },
          {
            "name": "path",
            "description": "the path of the volume",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          }
        ]
      },
      {
        "name": "listUcsManagers",
        "description": "List ucs manager",
        "isasync": false,
        "related": "addUcsManager",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the zone id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "id",
            "description": "the ID of the ucs manager",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listUcsManagers,addUcsManager"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "url",
            "description": "the url of ucs manager",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the ucs manager",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the zone ID of ucs manager",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of ucs manager",
            "type": "string"
          }
        ]
      },
      {
        "name": "listNetworks",
        "description": "Lists all available networks.",
        "isasync": false,
        "related": "updateNetwork",
        "params": [
          {
            "name": "supportedservices",
            "description": "list networks supporting certain services",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "acltype",
            "description": "list networks by ACL (access control list) type. Supported values are Account and Domain",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "List networks by VPC",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list networks by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworks,updateNetwork"
          },
          {
            "name": "restartrequired",
            "description": "list networks by restartRequired",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "canusefordeploy",
            "description": "list networks available for vm deployment",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "traffictype",
            "description": "type of the traffic",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "issystem",
            "description": "true if network is system, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "the type of the network. Supported values are: Isolated and Shared",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the network",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "forvpc",
            "description": "the network belongs to vpc",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "specifyipranges",
            "description": "true if need to list only networks which support specifying ip ranges",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "list networks by physical network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPhysicalNetwork,listPhysicalNetworks"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "the displaytext of the network",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the network",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if network is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "vlan",
            "description": "The vlan of the network. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "networkcidr",
            "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of services",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  }
                ]
              }
            ]
          },
          {
            "name": "account",
            "description": "the owner of the network",
            "type": "string"
          },
          {
            "name": "displaynetwork",
            "description": "an optional field, whether to the display the network to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "canusefordeploy",
            "description": "list networks available for vm deployment",
            "type": "boolean"
          },
          {
            "name": "type",
            "description": "the type of the network",
            "type": "string"
          },
          {
            "name": "ispersistent",
            "description": "list networks that are persistent",
            "type": "boolean"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "acltype",
            "description": "acl type - access type to the network",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network id",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the network",
            "type": "string"
          },
          {
            "name": "related",
            "description": "related to what other network configuration",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the network's gateway",
            "type": "string"
          },
          {
            "name": "specifyipranges",
            "description": "true if network supports specifying ip ranges, false otherwise",
            "type": "boolean"
          },
          {
            "name": "restartrequired",
            "description": "true network requires restart",
            "type": "boolean"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the network",
            "type": "string"
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the network owner",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the network owner",
            "type": "string"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "networkofferingname",
            "description": "name of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the traffic type of the network",
            "type": "string"
          },
          {
            "name": "broadcastdomaintype",
            "description": "Broadcast domain type of the network",
            "type": "string"
          },
          {
            "name": "reservediprange",
            "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "ACL Id associated with the VPC network",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with network",
            "type": "list",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "networkofferingavailability",
            "description": "availability of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "networkofferingid",
            "description": "network offering id the network is created from",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the network",
            "type": "string"
          },
          {
            "name": "subdomainaccess",
            "description": "true if users from subdomains can access the domain level network",
            "type": "boolean"
          },
          {
            "name": "networkofferingdisplaytext",
            "description": "display text of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the network's netmask",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the network",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the network belongs to",
            "type": "string"
          },
          {
            "name": "issystem",
            "description": "true if network is system, false otherwise",
            "type": "boolean"
          },
          {
            "name": "broadcasturi",
            "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the network belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "uploadCustomCertificate",
        "description": "Uploads a custom certificate for the console proxy VMs to use for SSL. Can be used to upload a single certificate signed by a known CA. Can also be used, through multiple calls, to upload a chain of certificates from CA to the custom certificate itself.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "A name / alias for the certificate.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "certificate",
            "description": "The certificate to be uploaded.",
            "type": "string",
            "length": 65535,
            "required": true
          },
          {
            "name": "privatekey",
            "description": "The private key for the attached certificate.",
            "type": "string",
            "length": 65535,
            "required": false
          },
          {
            "name": "domainsuffix",
            "description": "DNS domain suffix that the certificate is granted for.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "An integer providing the location in a chain that the certificate will hold. Usually, this can be left empty. When creating a chain, the top level certificate should have an ID of 1, with each step in the chain incrementing by one. Example, CA with id = 1, Intermediate CA with id = 2, Site certificate with ID = 3",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "message",
            "description": "message of the certificate upload operation",
            "type": "string"
          }
        ]
      },
      {
        "name": "listImageStores",
        "description": "Lists image stores.",
        "since": "4.2.0",
        "isasync": false,
        "related": "addImageStore,createSecondaryStagingStore,addS3,listS3s,listSecondaryStagingStores",
        "params": [
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the image store",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "provider",
            "description": "the image store provider",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "protocol",
            "description": "the image store protocol",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listImageStores,addImageStore,createSecondaryStagingStore,addS3,listS3s,listSecondaryStagingStores"
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          },
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "listCapacity",
        "description": "Lists all the system wide capacities.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "fetchlatest",
            "description": "recalculate capacities and fetch the latest",
            "type": "boolean",
            "length": 255,
            "required": false,
            "since": "3.0.0"
          },
          {
            "name": "type",
            "description": "lists capacity by type* CAPACITY_TYPE_MEMORY = 0* CAPACITY_TYPE_CPU = 1* CAPACITY_TYPE_STORAGE = 2* CAPACITY_TYPE_STORAGE_ALLOCATED = 3* CAPACITY_TYPE_VIRTUAL_NETWORK_PUBLIC_IP = 4* CAPACITY_TYPE_PRIVATE_IP = 5* CAPACITY_TYPE_SECONDARY_STORAGE = 6* CAPACITY_TYPE_VLAN = 7* CAPACITY_TYPE_DIRECT_ATTACHED_PUBLIC_IP = 8* CAPACITY_TYPE_LOCAL_STORAGE = 9.",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "sortby",
            "description": "Sort the results. Available values: Usage",
            "type": "string",
            "length": 255,
            "required": false,
            "since": "3.0.0"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "clusterid",
            "description": "lists capacity by the Cluster ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "since": "3.0.0",
            "related": "updateCluster"
          },
          {
            "name": "zoneid",
            "description": "lists capacity by the Zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "podid",
            "description": "lists capacity by the Pod ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "percentused",
            "description": "the percentage of capacity currently in use",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the Cluster name",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the capacity type",
            "type": "short"
          },
          {
            "name": "capacityused",
            "description": "the capacity currently in use",
            "type": "long"
          },
          {
            "name": "capacitytotal",
            "description": "the total capacity available",
            "type": "long"
          },
          {
            "name": "clusterid",
            "description": "the Cluster ID",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID",
            "type": "string"
          }
        ]
      },
      {
        "name": "createAutoScaleVmProfile",
        "description": "Creates a profile that contains information about the virtual machine which will be provisioned automatically by autoscale feature.",
        "isasync": true,
        "related": "listAutoScaleVmProfiles,updateAutoScaleVmProfile",
        "params": [
          {
            "name": "autoscaleuserid",
            "description": "the ID of the user used to launch and destroy the VMs",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateUser,enableUser,listUsers,createUser,lockUser,getUser,disableUser"
          },
          {
            "name": "templateid",
            "description": "the template of the auto deployed virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          },
          {
            "name": "destroyvmgraceperiod",
            "description": "the time allowed for existing connections to get closed before a vm is destroyed",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "counterparam",
            "description": "counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "availability zone for the auto deployed virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "otherdeployparams",
            "description": "parameters other than zoneId/serviceOfferringId/templateId of the auto deployed virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering of the auto deployed virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateServiceOffering,createServiceOffering,listServiceOfferings"
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the availability zone to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm profile ID",
            "type": "string"
          },
          {
            "name": "otherdeployparams",
            "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "destroyvmgraceperiod",
            "description": "the time allowed for existing connections to get closed before a vm is destroyed",
            "type": "integer"
          },
          {
            "name": "autoscaleuserid",
            "description": "the ID of the user used to launch and destroy the VMs",
            "type": "string"
          },
          {
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
          }
        ]
      },
      {
        "name": "createSecurityGroup",
        "description": "Creates a security group",
        "isasync": false,
        "related": "listSecurityGroups",
        "params": [
          {
            "name": "name",
            "description": "name of the security group",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "description",
            "description": "the description of the security group",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "projectid",
            "description": "Create security group for project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "account",
            "description": "an optional account for the security group. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ingressrule",
            "description": "the list of ingress rules associated with the security group",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "account owning the security group rule",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "the CIDR notation for the base IP address of the security group rule",
                "type": "string"
              },
              {
                "name": "endport",
                "description": "the ending IP of the security group rule ",
                "type": "integer"
              },
              {
                "name": "startport",
                "description": "the starting IP of the security group rule",
                "type": "integer"
              },
              {
                "name": "icmpcode",
                "description": "the code for the ICMP message response",
                "type": "integer"
              },
              {
                "name": "securitygroupname",
                "description": "security group name",
                "type": "string"
              },
              {
                "name": "icmptype",
                "description": "the type of the ICMP message response",
                "type": "integer"
              },
              {
                "name": "protocol",
                "description": "the protocol of the security group rule",
                "type": "string"
              },
              {
                "name": "ruleid",
                "description": "the id of the security group rule",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the domain ID of the security group",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the group",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the security group",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the security group",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the security group",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the security group",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the security group",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the group",
            "type": "string"
          },
          {
            "name": "egressrule",
            "description": "the list of egress rules associated with the security group",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "account owning the security group rule",
                "type": "string"
              },
              {
                "name": "securitygroupname",
                "description": "security group name",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "the CIDR notation for the base IP address of the security group rule",
                "type": "string"
              },
              {
                "name": "icmpcode",
                "description": "the code for the ICMP message response",
                "type": "integer"
              },
              {
                "name": "protocol",
                "description": "the protocol of the security group rule",
                "type": "string"
              },
              {
                "name": "ruleid",
                "description": "the id of the security group rule",
                "type": "string"
              },
              {
                "name": "endport",
                "description": "the ending IP of the security group rule ",
                "type": "integer"
              },
              {
                "name": "startport",
                "description": "the starting IP of the security group rule",
                "type": "integer"
              },
              {
                "name": "icmptype",
                "description": "the type of the ICMP message response",
                "type": "integer"
              }
            ]
          }
        ]
      },
      {
        "name": "releaseDedicatedGuestVlanRange",
        "description": "Releases a dedicated guest vlan range to the system",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the dedicated guest vlan range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDedicatedGuestVlanRanges,dedicateGuestVlanRange"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createSSHKeyPair",
        "description": "Create a new keypair and returns the private key",
        "isasync": false,
        "related": "listSSHKeyPairs",
        "params": [
          {
            "name": "account",
            "description": "an optional account for the ssh key. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "name",
            "description": "Name of the keypair",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "projectid",
            "description": "an optional project for the ssh key",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          }
        ],
        "response": [
          {
            "name": "fingerprint",
            "description": "Fingerprint of the public key",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the keypair",
            "type": "string"
          },
          {
            "name": "privatekey",
            "description": "Private key",
            "type": "string"
          }
        ]
      },
      {
        "name": "cancelHostMaintenance",
        "description": "Cancels host maintenance.",
        "isasync": true,
        "related": "listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost",
        "params": [
          {
            "name": "id",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "cancelHostMaintenance,listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost"
          }
        ],
        "response": [
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          }
        ]
      },
      {
        "name": "updateServiceOffering",
        "description": "Updates a service offering.",
        "isasync": false,
        "related": "createServiceOffering,listServiceOfferings",
        "params": [
          {
            "name": "name",
            "description": "the name of the service offering to be updated",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "sortkey",
            "description": "sort key of the service offering, integer",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the service offering to be updated",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the service offering to be updated",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateServiceOffering,createServiceOffering,listServiceOfferings"
          }
        ],
        "response": [
          {
            "name": "created",
            "description": "the date this service offering was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the id of the service offering",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the service offering.",
            "type": "string"
          },
          {
            "name": "offerha",
            "description": "the ha support in the service offering",
            "type": "boolean"
          },
          {
            "name": "issystem",
            "description": "is this a system vm offering",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain id of the service offering",
            "type": "string"
          },
          {
            "name": "deploymentplanner",
            "description": "deployment strategy used to deploy VM.",
            "type": "string"
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed.",
            "type": "integer"
          },
          {
            "name": "hosttags",
            "description": "the host tag for the service offering",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Domain name for the offering",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the service offering",
            "type": "string"
          },
          {
            "name": "defaultuse",
            "description": "is this a  default system vm offering",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the tags for the service offering",
            "type": "string"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the service offering",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the number of CPU",
            "type": "int"
          },
          {
            "name": "memory",
            "description": "the memory in MB",
            "type": "int"
          },
          {
            "name": "systemvmtype",
            "description": "is this a the systemvm type for system vm offering",
            "type": "string"
          },
          {
            "name": "limitcpuuse",
            "description": "restrict the CPU usage to committed service offering",
            "type": "boolean"
          },
          {
            "name": "serviceofferingdetails",
            "description": "additional key/value details tied with this service offering",
            "type": "map"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the service offering",
            "type": "long"
          },
          {
            "name": "cpuspeed",
            "description": "the clock rate CPU speed in Mhz",
            "type": "int"
          },
          {
            "name": "storagetype",
            "description": "the storage type for this service offering",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the service offering",
            "type": "long"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the service offering",
            "type": "long"
          },
          {
            "name": "isvolatile",
            "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "releaseDedicatedHost",
        "description": "Release the dedication for host",
        "isasync": true,
        "params": [
          {
            "name": "hostid",
            "description": "the ID of the host",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts,addBaremetalHost,prepareHostForMaintenance,updateHost,addHost"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateStoragePool",
        "description": "Updates a storage pool.",
        "since": "3.0.0",
        "isasync": false,
        "related": "listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,createStoragePool",
        "params": [
          {
            "name": "id",
            "description": "the Id of the storage pool",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,updateStoragePool,createStoragePool"
          },
          {
            "name": "tags",
            "description": "comma-separated list of tags for the storage pool",
            "type": "list",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the storage pool type",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the storage pool",
            "type": "long"
          },
          {
            "name": "suitableformigration",
            "description": "true if this pool is suitable to migrate a volume, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type of the storage pool",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the storage pool was created",
            "type": "date"
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the storage pool",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the storage pool",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string"
          },
          {
            "name": "disksizeused",
            "description": "the host's currently used disk size",
            "type": "long"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the storage pool",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the storage pool",
            "type": "storagepoolstatus"
          },
          {
            "name": "podname",
            "description": "the Pod name of the storage pool",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the storage pool",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster for the storage pool",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteStorageNetworkIpRange",
        "description": "Deletes a storage network IP Range.",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the uuid of the storage network ip range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateStorageNetworkIpRange,createStorageNetworkIpRange,listStorageNetworkIpRange"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listS3s",
        "description": "Lists S3s",
        "since": "4.0.0",
        "isasync": false,
        "related": "addImageStore,createSecondaryStagingStore,addS3,listSecondaryStagingStores",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "listVirtualRouterElements",
        "description": "Lists all available virtual router elements.",
        "isasync": false,
        "related": "configureVirtualRouterElement,createVirtualRouterElement",
        "params": [
          {
            "name": "id",
            "description": "list virtual router elements by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVirtualRouterElements,configureVirtualRouterElement,createVirtualRouterElement"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "nspid",
            "description": "list virtual router elements by network service provider id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "addNetworkServiceProvider,updateNetworkServiceProvider,listTrafficTypes"
          },
          {
            "name": "enabled",
            "description": "list network offerings by enabled state",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "nspid",
            "description": "the physical network service provider id of the provider",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the provider",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the provider",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the provider",
            "type": "string"
          },
          {
            "name": "enabled",
            "description": "Enabled/Disabled the service provider",
            "type": "boolean"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          }
        ]
      },
      {
        "name": "createInternalLoadBalancerElement",
        "description": "Create an Internal Load Balancer element.",
        "since": "4.2.0",
        "isasync": true,
        "related": "configureInternalLoadBalancerElement",
        "params": [
          {
            "name": "nspid",
            "description": "the network service provider ID of the internal load balancer element",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addNetworkServiceProvider,updateNetworkServiceProvider,listTrafficTypes"
          }
        ],
        "response": [
          {
            "name": "nspid",
            "description": "the physical network service provider id of the element",
            "type": "string"
          },
          {
            "name": "enabled",
            "description": "Enabled/Disabled the element",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the id of the internal load balancer element",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteFirewallRule",
        "description": "Deletes a firewall rule",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the firewall rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "addBaremetalHost",
        "description": "add a baremetal host",
        "isasync": false,
        "related": "listHosts,prepareHostForMaintenance,updateHost,addHost",
        "params": [
          {
            "name": "podid",
            "description": "the Pod ID for the host",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "url",
            "description": "the host URL",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "clustername",
            "description": "the cluster name for the host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hypervisor",
            "description": "hypervisor type of the host",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the host",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID for the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster"
          },
          {
            "name": "username",
            "description": "the username for the host",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "ipaddress",
            "description": "ip address intentionally allocated to this host after provisioning",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "Allocation state of this Host for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hosttags",
            "description": "list of tags to be added to the host",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "password",
            "description": "the password for the host",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          }
        ]
      },
      {
        "name": "listApis",
        "description": "lists all available apis on the server, provided by the Api Discovery plugin",
        "since": "4.1.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "API name",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "response",
            "description": "api response fields",
            "type": "set",
            "response": [
              {
                "name": "description",
                "description": "description of the api response field",
                "type": "string"
              },
              {
                "name": "type",
                "description": "response field type",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the api response field",
                "type": "string"
              },
              {
                "name": "response",
                "description": "api response fields",
                "type": "set"
              }
            ]
          },
          {
            "name": "params",
            "description": "the list params the api accepts",
            "type": "set",
            "response": [
              {
                "name": "name",
                "description": "the name of the api parameter",
                "type": "string"
              },
              {
                "name": "required",
                "description": "true if this parameter is required for the api request",
                "type": "boolean"
              },
              {
                "name": "since",
                "description": "version of CloudStack the api was introduced in",
                "type": "string"
              },
              {
                "name": "length",
                "description": "length of the parameter",
                "type": "int"
              },
              {
                "name": "type",
                "description": "parameter type",
                "type": "string"
              },
              {
                "name": "description",
                "description": "description of the api parameter",
                "type": "string"
              },
              {
                "name": "related",
                "description": "comma separated related apis to get the parameter",
                "type": "string"
              }
            ]
          },
          {
            "name": "since",
            "description": "version of CloudStack the api was introduced in",
            "type": "string"
          },
          {
            "name": "description",
            "description": "description of the api",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the api command",
            "type": "string"
          },
          {
            "name": "related",
            "description": "comma separated related apis",
            "type": "string"
          },
          {
            "name": "isasync",
            "description": "true if api is asynchronous",
            "type": "boolean"
          },
          {
            "name": "type",
            "description": "response field type",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteProject",
        "description": "Deletes a project",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "id of the project to be deleted",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "removeIpFromNic",
        "description": "Assigns secondary IP to NIC.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the secondary ip address to nic",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addIpToNic"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateHostPassword",
        "description": "Update password of a host/pool on management server.",
        "isasync": false,
        "params": [
          {
            "name": "hostid",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts,prepareHostForMaintenance,updateHost,addHost"
          },
          {
            "name": "password",
            "description": "the new password for the host/cluster",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "clusterid",
            "description": "the cluster ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster"
          },
          {
            "name": "username",
            "description": "the username for the host/cluster",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteIpForwardingRule",
        "description": "Deletes an ip forwarding rule",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the id of the forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createGlobalLoadBalancerRule",
        "description": "Creates a global load balancer rule",
        "isasync": true,
        "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
        "params": [
          {
            "name": "gslbservicetype",
            "description": "GSLB service type (tcp, udp)",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "regionid",
            "description": "region where the global load balancer is going to be created.",
            "type": "integer",
            "length": 255,
            "required": true,
            "related": "listRegions,addRegion"
          },
          {
            "name": "description",
            "description": "the description of the load balancer rule",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "account",
            "description": "the account associated with the global load balancer. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of the load balancer rule",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "gslblbmethod",
            "description": "load balancer algorithm (roundrobin, leastconn, proximity) that method is used to distribute traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "gslbstickysessionmethodname",
            "description": "session sticky method (sourceip) if not specified defaults to sourceip",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "gslbdomainname",
            "description": "domain name for the GSLB service.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the load balancer",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain ID of the load balancer rule",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the load balancer rule",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the global load balancer rule",
            "type": "string"
          },
          {
            "name": "gslblbmethod",
            "description": "Load balancing method used for the global load balancer",
            "type": "string"
          },
          {
            "name": "id",
            "description": "global load balancer rule ID",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the load balancer",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the global load balancer rule",
            "type": "string"
          },
          {
            "name": "gslbservicetype",
            "description": "GSLB service type",
            "type": "string"
          },
          {
            "name": "gslbstickysessionmethodname",
            "description": "session persistence method used for the global load balancer",
            "type": "string"
          },
          {
            "name": "regionid",
            "description": "Region Id in which global load balancer is created",
            "type": "integer"
          },
          {
            "name": "domain",
            "description": "the domain of the load balancer rule",
            "type": "string"
          },
          {
            "name": "gslbdomainname",
            "description": "DNS domain name given for the global load balancer",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the load balancer",
            "type": "string"
          },
          {
            "name": "loadbalancerrule",
            "description": "List of load balancer rules that are part of GSLB rule",
            "type": "list",
            "response": [
              {
                "name": "state",
                "description": "the state of the rule",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the load balancer rule ID",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the load balancer",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the load balancer",
                "type": "string"
              },
              {
                "name": "publicip",
                "description": "the public ip address",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account of the load balancer rule",
                "type": "string"
              },
              {
                "name": "publicport",
                "description": "the public port",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the id of the zone the rule belongs to",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the load balancer",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the id of the guest network the lb rule belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain of the load balancer rule",
                "type": "string"
              },
              {
                "name": "publicipid",
                "description": "the public ip address id",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the load balancer rule",
                "type": "string"
              },
              {
                "name": "algorithm",
                "description": "the load balancer algorithm (source, roundrobin, leastconn)",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the load balancer",
                "type": "string"
              },
              {
                "name": "cidrlist",
                "description": "the cidr list to forward traffic from",
                "type": "string"
              },
              {
                "name": "privateport",
                "description": "the private port",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with load balancer",
                "type": "list",
                "response": [
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "resizeVolume",
        "description": "Resizes a volume",
        "isasync": true,
        "related": "uploadVolume,detachVolume,createVolume",
        "params": [
          {
            "name": "size",
            "description": "New volume size in G",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "shrinkok",
            "description": "Verify OK to Shrink",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "uploadVolume,detachVolume,resizeVolume,createVolume"
          },
          {
            "name": "diskofferingid",
            "description": "new disk offering id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateDiskOffering,createDiskOffering,listDiskOfferings"
          }
        ],
        "response": [
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "listSSHKeyPairs",
        "description": "List registered keypairs",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "A key pair name to look for",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "fingerprint",
            "description": "A public key fingerprint to look for",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "privatekey",
            "description": "Private key",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the keypair",
            "type": "string"
          },
          {
            "name": "fingerprint",
            "description": "Fingerprint of the public key",
            "type": "string"
          }
        ]
      },
      {
        "name": "createStaticRoute",
        "description": "Creates a static route",
        "isasync": true,
        "related": "listStaticRoutes",
        "params": [
          {
            "name": "cidr",
            "description": "static route cidr",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "gatewayid",
            "description": "the gateway id we are creating static route for",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPrivateGateway"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain associated with the static route",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the static route",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the static route belongs to",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the static route",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "static route CIDR",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with static route",
            "type": "list",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "account",
            "description": "the account associated with the static route",
            "type": "string"
          },
          {
            "name": "gatewayid",
            "description": "VPC gateway the route is created for",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the static route",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of static route",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the static route",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteGlobalLoadBalancerRule",
        "description": "Deletes a global load balancer rule.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the global load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "activateProject",
        "description": "Activates a project",
        "since": "3.0.0",
        "isasync": true,
        "related": "updateProject,listProjectAccounts,createProject",
        "params": [
          {
            "name": "id",
            "description": "id of the project to be modified",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "activateProject,updateProject,listProjectAccounts,createProject"
          }
        ],
        "response": [
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this project",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the project can own",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by project",
            "type": "long"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the project can own",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the project",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this project",
            "type": "long"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this project can acquire",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by project",
            "type": "long"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this project",
            "type": "long"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this project",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this project",
            "type": "long"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this project to acquire",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "list",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this project",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this project",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this project",
            "type": "integer"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this project",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this project",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this project",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this project",
            "type": "integer"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this project",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the project can own",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this project to acquire",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the project",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this project",
            "type": "string"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this project",
            "type": "long"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by project",
            "type": "long"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the project",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this project",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this project",
            "type": "string"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the project can own",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this project",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the project",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by project",
            "type": "long"
          }
        ]
      },
      {
        "name": "releaseDedicatedZone",
        "description": "Release dedication of zone",
        "isasync": true,
        "params": [
          {
            "name": "zoneid",
            "description": "the ID of the Zone",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createVMSnapshot",
        "description": "Creates snapshot for a vm.",
        "since": "4.2.0",
        "isasync": true,
        "related": "listVMSnapshot",
        "params": [
          {
            "name": "snapshotmemory",
            "description": "snapshot memory if true",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "The ID of the vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "description",
            "description": "The discription of the snapshot",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "The display name of the snapshot",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the vm snapshot",
            "type": "string"
          },
          {
            "name": "current",
            "description": "indiates if this is current snapshot",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the vm snapshot",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the vm ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "parentName",
            "description": "the parent displayName of the vm snapshot",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "the display name of the vm snapshot",
            "type": "string"
          },
          {
            "name": "parent",
            "description": "the parent ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the vm snapshot",
            "type": "state"
          },
          {
            "name": "type",
            "description": "VM Snapshot type",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the create date of the vm snapshot",
            "type": "date"
          }
        ]
      },
      {
        "name": "enableStaticNat",
        "description": "Enables static nat for given ip address",
        "isasync": false,
        "params": [
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine for enabling static nat feature",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "vmguestip",
            "description": "VM guest nic Secondary ip address for the port forwarding rule",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddressid",
            "description": "the public IP address id for which static nat feature is being enabled",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "networkid",
            "description": "The network of the vm the static nat will be enabled for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createIpForwardingRule",
        "description": "Creates an ip forwarding rule",
        "isasync": true,
        "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule",
        "params": [
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "protocol",
            "description": "the protocol for the rule. Valid values are TCP or UDP.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "openfirewall",
            "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. Has value true by default",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "endport",
            "description": "the end port for the rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddressid",
            "description": "the public IP address id of the forwarding rule, already associated via associateIp",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "startport",
            "description": "the start port for the rule",
            "type": "integer",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "the VM display name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "publicendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "vmguestip",
            "description": "the vm ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "privateendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "the VM name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the VM ID for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "publicport",
            "description": "the starting port of port forwarding rule's public port range",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the starting port of port forwarding rule's private port range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listStorageProviders",
        "description": "Lists storage providers.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "type",
            "description": "the type of storage provider: either primary or image",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the storage provider",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the type of the storage provider: primary or image provider",
            "type": "string"
          }
        ]
      },
      {
        "name": "listRegions",
        "description": "Lists Regions",
        "isasync": false,
        "related": "addRegion",
        "params": [
          {
            "name": "name",
            "description": "List Region by region name.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "List Region by region ID.",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the region",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the region",
            "type": "integer"
          },
          {
            "name": "endpoint",
            "description": "the end point of the region",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateDiskOffering",
        "description": "Updates a disk offering.",
        "isasync": false,
        "related": "createDiskOffering,listDiskOfferings",
        "params": [
          {
            "name": "displaytext",
            "description": "updates alternate display text of the disk offering with this value",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "name",
            "description": "updates name of the disk offering with this value",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "sortkey",
            "description": "sort key of the disk offering, integer",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the disk offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateDiskOffering,createDiskOffering,listDiskOfferings"
          }
        ],
        "response": [
          {
            "name": "displayoffering",
            "description": "whether to display the offering to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk offering",
            "type": "long"
          },
          {
            "name": "miniops",
            "description": "the min iops of the disk offering",
            "type": "long"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk offering",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the disk offering",
            "type": "string"
          },
          {
            "name": "maxiops",
            "description": "the max iops of the disk offering",
            "type": "long"
          },
          {
            "name": "iscustomized",
            "description": "true if disk offering uses custom size, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk offering",
            "type": "long"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the disk offering.",
            "type": "string"
          },
          {
            "name": "disksize",
            "description": "the size of the disk offering in GB",
            "type": "long"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk offering",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
            "type": "string"
          },
          {
            "name": "iscustomizediops",
            "description": "true if disk offering uses custom iops, false otherwise",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date this disk offering was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "unique ID of the disk offering",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "the storage type for this disk offering",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the disk offering",
            "type": "string"
          }
        ]
      },
      {
        "name": "listNetworkACLLists",
        "description": "Lists all network ACLs",
        "isasync": false,
        "related": "createNetworkACLList",
        "params": [
          {
            "name": "vpcid",
            "description": "list network ACLs by Vpc Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          },
          {
            "name": "networkid",
            "description": "list network ACLs by network Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "name",
            "description": "list network ACLs by specified name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Lists network ACL with the specified ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNetworkACLLists,createNetworkACLList"
          }
        ],
        "response": [
          {
            "name": "description",
            "description": "Description of the ACL",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the Name of the ACL",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "Id of the VPC this ACL is associated with",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the ACL",
            "type": "string"
          }
        ]
      },
      {
        "name": "listUcsProfiles",
        "description": "List profile in ucs manager",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "ucsmanagerid",
            "description": "the id for the ucs manager",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addUcsManager"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ucsdn",
            "description": "ucs profile dn",
            "type": "string"
          }
        ]
      },
      {
        "name": "recoverVirtualMachine",
        "description": "Recovers a virtual machine.",
        "isasync": false,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,recoverVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              }
            ]
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          }
        ]
      },
      {
        "name": "listCapabilities",
        "description": "Lists capabilities",
        "isasync": false,
        "related": "",
        "params": [

        ],
        "response": [
          {
            "name": "securitygroupsenabled",
            "description": "true if security groups support is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "apilimitmax",
            "description": "Max allowed number of api requests within the specified interval",
            "type": "integer"
          },
          {
            "name": "customdiskofferingmaxsize",
            "description": "maximum size that can be specified when create disk from disk offering with custom size",
            "type": "long"
          },
          {
            "name": "cloudstackversion",
            "description": "version of the cloud stack",
            "type": "string"
          },
          {
            "name": "projectinviterequired",
            "description": "If invitation confirmation is required when add account to project",
            "type": "boolean"
          },
          {
            "name": "supportELB",
            "description": "true if region supports elastic load balancer on basic zones",
            "type": "string"
          },
          {
            "name": "userpublictemplateenabled",
            "description": "true if user and domain admins can set templates to be shared, false otherwise",
            "type": "boolean"
          },
          {
            "name": "apilimitinterval",
            "description": "time interval (in seconds) to reset api count",
            "type": "integer"
          },
          {
            "name": "allowusercreateprojects",
            "description": "true if regular user is allowed to create projects",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "releaseDedicatedCluster",
        "description": "Release the dedication for cluster",
        "isasync": true,
        "params": [
          {
            "name": "clusterid",
            "description": "the ID of the Cluster",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateCluster"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateVPC",
        "description": "Updates a VPC",
        "isasync": true,
        "related": "createVPC,restartVPC,listVPCs",
        "params": [
          {
            "name": "name",
            "description": "the name of the VPC",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "displaytext",
            "description": "the display text of the VPC",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the id of the VPC",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVPC,restartVPC,updateVPC,listVPCs"
          }
        ],
        "response": [
          {
            "name": "tags",
            "description": "the list of resource tags associated with the project",
            "type": "list",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "restartrequired",
            "description": "true VPC requires restart",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the VPC belongs to",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "the cidr the VPC",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the VPC",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  }
                ]
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "network",
            "description": "the list of networks belongign to the VPC",
            "type": "list",
            "response": [
              {
                "name": "domainid",
                "description": "the domain id of the network owner",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the network",
                "type": "string"
              },
              {
                "name": "restartrequired",
                "description": "true network requires restart",
                "type": "boolean"
              },
              {
                "name": "networkofferingname",
                "description": "name of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkofferingid",
                "description": "network offering id the network is created from",
                "type": "string"
              },
              {
                "name": "networkcidr",
                "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the id of the network",
                "type": "string"
              },
              {
                "name": "networkofferingavailability",
                "description": "availability of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the network",
                "type": "string"
              },
              {
                "name": "displaytext",
                "description": "the displaytext of the network",
                "type": "string"
              },
              {
                "name": "networkofferingdisplaytext",
                "description": "display text of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the network's netmask",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the network",
                "type": "string"
              },
              {
                "name": "vlan",
                "description": "The vlan of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the name of the zone the network belongs to",
                "type": "string"
              },
              {
                "name": "broadcastdomaintype",
                "description": "Broadcast domain type of the network",
                "type": "string"
              },
              {
                "name": "dns1",
                "description": "the first DNS for the network",
                "type": "string"
              },
              {
                "name": "canusefordeploy",
                "description": "list networks available for vm deployment",
                "type": "boolean"
              },
              {
                "name": "service",
                "description": "the list of services",
                "type": "list",
                "response": [
                  {
                    "name": "provider",
                    "description": "the service provider name",
                    "type": "list",
                    "response": [
                      {
                        "name": "name",
                        "description": "the provider name",
                        "type": "string"
                      },
                      {
                        "name": "id",
                        "description": "uuid of the network provider",
                        "type": "string"
                      },
                      {
                        "name": "physicalnetworkid",
                        "description": "the physical network this belongs to",
                        "type": "string"
                      },
                      {
                        "name": "servicelist",
                        "description": "services for this provider",
                        "type": "list"
                      },
                      {
                        "name": "destinationphysicalnetworkid",
                        "description": "the destination physical network",
                        "type": "string"
                      },
                      {
                        "name": "canenableindividualservice",
                        "description": "true if individual services can be enabled/disabled",
                        "type": "boolean"
                      },
                      {
                        "name": "state",
                        "description": "state of the network provider",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "capability",
                    "description": "the list of capabilities",
                    "type": "list",
                    "response": [
                      {
                        "name": "value",
                        "description": "the capability value",
                        "type": "string"
                      },
                      {
                        "name": "canchooseservicecapability",
                        "description": "can this service capability value can be choosable while creatine network offerings",
                        "type": "boolean"
                      },
                      {
                        "name": "name",
                        "description": "the capability name",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "name",
                    "description": "the service name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "related",
                "description": "related to what other network configuration",
                "type": "string"
              },
              {
                "name": "dns2",
                "description": "the second DNS for the network",
                "type": "string"
              },
              {
                "name": "issystem",
                "description": "true if network is system, false otherwise",
                "type": "boolean"
              },
              {
                "name": "account",
                "description": "the owner of the network",
                "type": "string"
              },
              {
                "name": "acltype",
                "description": "acl type - access type to the network",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
                "type": "string"
              },
              {
                "name": "vpcid",
                "description": "VPC the network belongs to",
                "type": "string"
              },
              {
                "name": "ispersistent",
                "description": "list networks that are persistent",
                "type": "boolean"
              },
              {
                "name": "isdefault",
                "description": "true if network is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "project",
                "description": "the project name of the address",
                "type": "string"
              },
              {
                "name": "networkdomain",
                "description": "the network domain",
                "type": "string"
              },
              {
                "name": "subdomainaccess",
                "description": "true if users from subdomains can access the domain level network",
                "type": "boolean"
              },
              {
                "name": "zoneid",
                "description": "zone id of the network",
                "type": "string"
              },
              {
                "name": "state",
                "description": "state of the network",
                "type": "string"
              },
              {
                "name": "aclid",
                "description": "ACL Id associated with the VPC network",
                "type": "string"
              },
              {
                "name": "displaynetwork",
                "description": "an optional field, whether to the display the network to the end user or not.",
                "type": "boolean"
              },
              {
                "name": "gateway",
                "description": "the network's gateway",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the network owner",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the ipaddress",
                "type": "string"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network id",
                "type": "string"
              },
              {
                "name": "reservediprange",
                "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "specifyipranges",
                "description": "true if network supports specifying ip ranges, false otherwise",
                "type": "boolean"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with network",
                "type": "list",
                "response": [
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "account",
            "description": "the owner of the VPC",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "vpcofferingid",
            "description": "vpc offering id the VPC is created from",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain of the VPC",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this VPC was created",
            "type": "date"
          },
          {
            "name": "projectid",
            "description": "the project id of the VPC",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the VPC",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the VPC owner",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the VPC.",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the VPC",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the vpc",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the VPC. Can be Inactive/Enabled",
            "type": "string"
          }
        ]
      },
      {
        "name": "associateUcsProfileToBlade",
        "description": "associate a profile to a blade",
        "isasync": true,
        "related": "listUcsBlades",
        "params": [
          {
            "name": "ucsmanagerid",
            "description": "ucs manager id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addUcsManager"
          },
          {
            "name": "profiledn",
            "description": "profile dn",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "bladeid",
            "description": "blade id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateUcsProfileToBlade,listUcsBlades"
          }
        ],
        "response": [
          {
            "name": "ucsmanagerid",
            "description": "ucs manager id",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "cloudstack host id this blade associates to",
            "type": "string"
          },
          {
            "name": "profiledn",
            "description": "associated ucs profile dn",
            "type": "string"
          },
          {
            "name": "bladedn",
            "description": "ucs blade dn",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ucs blade id",
            "type": "string"
          }
        ]
      },
      {
        "name": "startInternalLoadBalancerVM",
        "description": "Starts an existing internal lb vm.",
        "isasync": true,
        "related": "destroyRouter,startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,stopInternalLoadBalancerVM",
        "params": [
          {
            "name": "id",
            "description": "the ID of the internal lb vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "destroyRouter,startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,startInternalLoadBalancerVM,stopInternalLoadBalancerVM"
          }
        ],
        "response": [
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "listProjectAccounts",
        "description": "Lists project's accounts",
        "since": "3.0.0",
        "isasync": false,
        "related": "updateProject,createProject",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "role",
            "description": "list accounts of the project by role",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "id of the project",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateProject,listProjectAccounts,createProject"
          },
          {
            "name": "account",
            "description": "list accounts of the project by account name",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this project",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this project",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this project",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "list",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this project",
            "type": "string"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by project",
            "type": "long"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the project",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this project can acquire",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this project",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this project",
            "type": "integer"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this project",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this project",
            "type": "long"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by project",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this project",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this project",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the project",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this project",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this project to acquire",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the project can own",
            "type": "string"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this project to acquire",
            "type": "string"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this project",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this project",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this project",
            "type": "integer"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the project can own",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this project",
            "type": "long"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by project",
            "type": "long"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this project",
            "type": "long"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the project",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the project can own",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this project",
            "type": "long"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this project",
            "type": "string"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by project",
            "type": "long"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the project can own",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the project",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateAutoScaleVmProfile",
        "description": "Updates an existing autoscale vm profile.",
        "isasync": true,
        "related": "listAutoScaleVmProfiles",
        "params": [
          {
            "name": "counterparam",
            "description": "counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "destroyvmgraceperiod",
            "description": "the time allowed for existing connections to get closed before a vm is destroyed",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the autoscale vm profile",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listAutoScaleVmProfiles,updateAutoScaleVmProfile"
          },
          {
            "name": "templateid",
            "description": "the template of the auto deployed virtual machine",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          },
          {
            "name": "autoscaleuserid",
            "description": "the ID of the user used to launch and destroy the VMs",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateUser,enableUser,listUsers,createUser,lockUser,getUser,disableUser"
          }
        ],
        "response": [
          {
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "autoscaleuserid",
            "description": "the ID of the user used to launch and destroy the VMs",
            "type": "string"
          },
          {
          },
          {
            "name": "destroyvmgraceperiod",
            "description": "the time allowed for existing connections to get closed before a vm is destroyed",
            "type": "integer"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "otherdeployparams",
            "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm profile ID",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the availability zone to be used while deploying a virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "updatePortForwardingRule",
        "description": "Updates a port forwarding rule.  Only the private port and the virtual machine can be updated.",
        "isasync": true,
        "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine for the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,deployVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "privateport",
            "description": "the private port of the port forwarding rule",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "ipaddressid",
            "description": "the IP address id of the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "publicport",
            "description": "the public port of the port forwarding rule",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "protocol",
            "description": "the protocol for the port fowarding rule. Valid values are TCP or UDP.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "privateip",
            "description": "the private IP address of the port forwarding rule",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the VM ID for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "the VM display name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "privateendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              }
            ]
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "publicendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "publicport",
            "description": "the starting port of port forwarding rule's public port range",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "the VM name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the starting port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "vmguestip",
            "description": "the vm ip address for the port forwarding rule",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDedicatedHosts",
        "description": "Lists dedicated hosts.",
        "isasync": false,
        "related": "dedicateHost",
        "params": [
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "the name of the account associated with the host. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hostid",
            "description": "the ID of the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts,prepareHostForMaintenance,updateHost,addHost"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "hostname",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the Account ID of the host",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the host",
            "type": "string"
          }
        ]
      },
      {
        "name": "listPortForwardingRules",
        "description": "Lists all port forwarding rules for an IP address.",
        "isasync": false,
        "related": "listIpForwardingRules,createPortForwardingRule",
        "params": [
          {
            "name": "id",
            "description": "Lists rule with the specified ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules,createPortForwardingRule,listPortForwardingRules"
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddressid",
            "description": "the id of IP address of the port forwarding services",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "virtualmachinedisplayname",
            "description": "the VM display name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "id",
            "description": "the ID of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "publicport",
            "description": "the starting port of port forwarding rule's public port range",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the VM ID for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "privateendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "publicendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "vmguestip",
            "description": "the vm ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "the VM name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the starting port of port forwarding rule's private port range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listTemplatePermissions",
        "description": "List template visibility and all accounts that have permissions to view this template.",
        "isasync": false,
        "related": "listIsoPermissions",
        "params": [
          {
            "name": "id",
            "description": "the template ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIsoPermissions,listTemplatePermissions"
          }
        ],
        "response": [
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "projectids",
            "description": "the list of projects the template is available for",
            "type": "list"
          },
          {
            "name": "account",
            "description": "the list of accounts the template is available for",
            "type": "list"
          }
        ]
      },
      {
        "name": "createStorageNetworkIpRange",
        "description": "Creates a Storage network IP range.",
        "since": "3.0.0",
        "isasync": true,
        "related": "updateStorageNetworkIpRange,listStorageNetworkIpRange",
        "params": [
          {
            "name": "endip",
            "description": "the ending IP address",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vlan",
            "description": "Optional. The vlan the ip range sits on, default to Null when it is not specificed which means you network is not on any Vlan. This is mainly for Vmware as other hypervisors can directly reterive bridge from pyhsical network traffic type table",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "startip",
            "description": "the beginning IP address",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "netmask",
            "description": "the netmask for storage network",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "gateway",
            "description": "the gateway for storage network",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "podid",
            "description": "UUID of pod where the ip range belongs to",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,listPods,updatePod"
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the Zone uuid of the storage network IP range",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod uuid for the storage network IP range",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the storage network IP range",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network uuid of storage network IP range",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the storage network IP range",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the start ip of the storage network IP range",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the storage network IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the uuid of storage network IP range.",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "integer"
          }
        ]
      },
      {
        "name": "queryAsyncJobResult",
        "description": "Retrieves the current status of asynchronous job.",
        "isasync": false,
        "related": "listAsyncJobs",
        "params": [
          {
            "name": "jobid",
            "description": "the ID of the asychronous job",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "queryAsyncJobResult,listAsyncJobs"
          }
        ],
        "response": [
          {
            "name": "jobresult",
            "description": "the result reason",
            "type": "responseobject"
          },
          {
            "name": "jobresultcode",
            "description": "the result code for the job",
            "type": "integer"
          },
          {
            "name": "jobstatus",
            "description": "the current job status-should be 0 for PENDING",
            "type": "integer"
          },
          {
            "name": "jobresulttype",
            "description": "the result type",
            "type": "string"
          },
          {
            "name": "cmd",
            "description": "the async command executed",
            "type": "string"
          },
          {
            "name": "jobinstanceid",
            "description": "the unique ID of the instance/entity object related to the job",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account that executed the async command",
            "type": "string"
          },
          {
            "name": "created",
            "description": "  the created date of the job",
            "type": "date"
          },
          {
            "name": "jobinstancetype",
            "description": "the instance/entity object related to the job",
            "type": "string"
          },
          {
            "name": "jobprocstatus",
            "description": "the progress information of the PENDING job",
            "type": "integer"
          },
          {
            "name": "userid",
            "description": "the user that executed the async command",
            "type": "string"
          }
        ]
      },
      {
        "name": "createLoadBalancer",
        "description": "Creates a Load Balancer",
        "since": "4.2.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "name of the Load Balancer",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "instanceport",
            "description": "the TCP port of the virtual machine where the network traffic will be load balanced to",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "scheme",
            "description": "the load balancer scheme. Supported value in this release is Internal",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "sourceipaddress",
            "description": "the source ip address the network traffic will be load balanced from",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "description",
            "description": "the description of the Load Balancer",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "networkid",
            "description": "The guest network the Load Balancer will be created for",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetwork"
          },
          {
            "name": "algorithm",
            "description": "load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "sourceipaddressnetworkid",
            "description": "the network id of the source ip address",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetwork"
          },
          {
            "name": "sourceport",
            "description": "the source port the network traffic will be load balanced from",
            "type": "integer",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "algorithm",
            "description": "the load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the Load Balancer",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "Load Balancer network id",
            "type": "string"
          },
          {
            "name": "loadbalancerinstance",
            "description": "the list of instances associated with the Load Balancer",
            "type": "list",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the instance",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the instance",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the state of the instance",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the instance ID",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the Load Balancer",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the Load Balancer",
            "type": "string"
          },
          {
            "name": "sourceipaddress",
            "description": "Load Balancer source ip",
            "type": "string"
          },
          {
            "name": "sourceipaddressnetworkid",
            "description": "Load Balancer source ip network id",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the Load Balancer",
            "type": "string"
          },
          {
            "name": "loadbalancerrule",
            "description": "the list of rules associated with the Load Balancer",
            "type": "list",
            "response": [
              {
                "name": "sourceport",
                "description": "source port of the load balancer rule",
                "type": "integer"
              },
              {
                "name": "instanceport",
                "description": "instance port of the load balancer rule",
                "type": "integer"
              },
              {
                "name": "state",
                "description": "the state of the load balancer rule",
                "type": "string"
              }
            ]
          },
          {
            "name": "id",
            "description": "the Load Balancer ID",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the Load Balancer",
            "type": "list",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "project",
            "description": "the project name of the Load Balancer",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the Load Balancer",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the Load Balancer",
            "type": "string"
          }
        ]
      },
      {
        "name": "cancelStorageMaintenance",
        "description": "Cancels maintenance for primary storage",
        "isasync": true,
        "related": "listStoragePools,findStoragePoolsForMigration,createStoragePool",
        "params": [
          {
            "name": "id",
            "description": "the primary storage ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listStoragePools,cancelStorageMaintenance,findStoragePoolsForMigration,createStoragePool"
          }
        ],
        "response": [
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "type",
            "description": "the storage pool type",
            "type": "string"
          },
          {
            "name": "disksizeused",
            "description": "the host's currently used disk size",
            "type": "long"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the storage pool",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the storage pool",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the storage pool",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the storage pool",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the storage pool was created",
            "type": "date"
          },
          {
            "name": "state",
            "description": "the state of the storage pool",
            "type": "storagepoolstatus"
          },
          {
            "name": "suitableformigration",
            "description": "true if this pool is suitable to migrate a volume, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type of the storage pool",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the storage pool",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the storage pool",
            "type": "long"
          }
        ]
      },
      {
        "name": "deployVirtualMachine",
        "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
        "isasync": true,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "affinitygroupnames",
            "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine.Mutually exclusive with affinitygroupids parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listAffinityGroups"
          },
          {
            "name": "name",
            "description": "host name for the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "securitygroupnames",
            "description": "comma separated list of security groups names that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listSecurityGroups"
          },
          {
            "name": "networkids",
            "description": "list of network ids used by virtual machine. Can't be specified with ipToNetworkList parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which to deploy the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "iptonetworklist",
            "description": "ip to network mapping. Can't be specified with networkIds parameter. Example: iptonetworklist[0].ip=10.10.10.11&iptonetworklist[0].ipv6=fc00:1234:5678::abcd&iptonetworklist[0].networkid=uuid - requests to use ip 10.10.10.11 in network id=uuid",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "startvm",
            "description": "true if network offering supports specifying ip ranges; defaulted to true if not specified",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "Deploy vm for the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "keyboard",
            "description": "an optional keyboard device type for the virtual machine. valid value can be one of de,de-ch,es,fi,fr,fr-be,fr-ch,is,it,jp,nl-be,no,pt,uk,us",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddress",
            "description": "the ip address for default vm's network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "securitygroupids",
            "description": "comma separated list of security groups id that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listSecurityGroups"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          },
          {
            "name": "size",
            "description": "the arbitrary size for the DATADISK volume. Mutually exclusive with diskOfferingId",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "displayvm",
            "description": "an optional field, whether to the display the vm to the end user or not.",
            "type": "boolean",
            "length": 255,
            "required": false,
            "since": "4.2"
          },
          {
            "name": "hostid",
            "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts,prepareHostForMaintenance,updateHost,addHost"
          },
          {
            "name": "keypair",
            "description": "name of the ssh key pair used to login to the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "availability zone for the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "userdata",
            "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.",
            "type": "string",
            "length": 32768,
            "required": false
          },
          {
            "name": "ip6address",
            "description": "the ipv6 address for default vm's network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "displayname",
            "description": "an optional user generated name for the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering for the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createServiceOffering,listServiceOfferings"
          },
          {
            "name": "diskofferingid",
            "description": "the ID of the disk offering for the virtual machine. If the template is of ISO format, the diskOfferingId is for the root disk volume. Otherwise this parameter is used to indicate the offering for the data disk volume. If the templateId parameter passed is from a Template object, the diskOfferingId refers to a DATA Disk Volume created. If the templateId parameter passed is from an ISO object, the diskOfferingId refers to a ROOT Disk Volume created.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createDiskOffering,listDiskOfferings"
          },
          {
            "name": "affinitygroupids",
            "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Mutually exclusive with affinitygroupnames parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listAffinityGroups"
          },
          {
            "name": "account",
            "description": "an optional account for the virtual machine. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "group",
            "description": "an optional group for the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "deletePod",
        "description": "Deletes a Pod.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the ID of the Pod",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,listPods,updatePod"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "revokeSecurityGroupEgress",
        "description": "Deletes a particular egress rule from this security group",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "The ID of the egress rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "authorizeSecurityGroupEgress"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteCondition",
        "description": "Removes a condition",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the condition.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listConditions"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createNetworkACLList",
        "description": "Creates a Network ACL for the given VPC",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "description",
            "description": "Description of the network ACL List",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "Name of the network ACL List",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "vpcid",
            "description": "Id of the VPC associated with this network ACL List",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVPC,restartVPC,listVPCs"
          }
        ],
        "response": [
          {
            "name": "vpcid",
            "description": "Id of the VPC this ACL is associated with",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the Name of the ACL",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the ACL",
            "type": "string"
          },
          {
            "name": "description",
            "description": "Description of the ACL",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteSecondaryStagingStore",
        "description": "Deletes a secondary staging store .",
        "since": "4.2.0",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the staging store ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addImageStore,createSecondaryStagingStore,addS3,listSecondaryStagingStores"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createPortForwardingRule",
        "description": "Creates a port forwarding rule",
        "isasync": true,
        "related": "listIpForwardingRules",
        "params": [
          {
            "name": "vmguestip",
            "description": "VM guest nic Secondary ip address for the port forwarding rule",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "The network of the vm the Port Forwarding rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "protocol",
            "description": "the protocol for the port fowarding rule. Valid values are TCP or UDP.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine for the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "ipaddressid",
            "description": "the IP address id of the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "publicendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "publicport",
            "description": "the starting port of port forwarding rule's public port range",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "privateport",
            "description": "the starting port of port forwarding rule's private port range",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "openfirewall",
            "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. If not specified 1) defaulted to false when PF rule is being created for VPC guest network 2) in all other cases defaulted to true",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "privateendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "privateendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "vmguestip",
            "description": "the vm ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the VM ID for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "the VM name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "publicendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the starting port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "the VM display name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "publicport",
            "description": "the starting port of port forwarding rule's public port range",
            "type": "string"
          }
        ]
      },
      {
        "name": "createVPCOffering",
        "description": "Creates VPC offering",
        "isasync": true,
        "related": "listVPCOfferings",
        "params": [
          {
            "name": "supportedservices",
            "description": "services supported by the vpc offering",
            "type": "list",
            "length": 255,
            "required": true
          },
          {
            "name": "displaytext",
            "description": "the display text of the vpc offering",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "serviceproviderlist",
            "description": "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the vpc offering",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "an alternate display text of the vpc offering.",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the vpc offering",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if vpc offering is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "state of the vpc offering. Can be Disabled/Enabled",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the vpc offering",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this vpc offering was created",
            "type": "date"
          }
        ]
      },
      {
        "name": "createEgressFirewallRule",
        "description": "Creates a egress firewall rule for a given network ",
        "isasync": true,
        "related": "listEgressFirewallRules,listFirewallRules,createFirewallRule",
        "params": [
          {
            "name": "protocol",
            "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "endport",
            "description": "the ending port of firewall rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "the network id of the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetwork"
          },
          {
            "name": "startport",
            "description": "the starting port of firewall rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "type of firewallrule: system/user",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the firewall rule",
            "type": "string"
          },
          {
            "name": "startport",
            "description": "the starting port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the firewall rule",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of the firewall rule",
            "type": "string"
          },
          {
            "name": "endport",
            "description": "the ending port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "protocol",
            "description": "the protocol of the firewall rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the firewall rule",
            "type": "string"
          }
        ]
      },
      {
        "name": "destroyRouter",
        "description": "Destroys a router.",
        "isasync": true,
        "related": "startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,stopInternalLoadBalancerVM",
        "params": [
          {
            "name": "id",
            "description": "the ID of the router",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "destroyRouter,startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,stopInternalLoadBalancerVM"
          }
        ],
        "response": [
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              }
            ]
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteAlerts",
        "description": "Delete one or more alerts.",
        "isasync": false,
        "params": [
          {
            "name": "enddate",
            "description": "end date range to delete alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "startdate",
            "description": "start date range to delete alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "delete by alert type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ids",
            "description": "the IDs of the alerts",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "listUsageRecords",
        "description": "Lists usage records for accounts",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "projectid",
            "description": "List usage records for specified project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "domainid",
            "description": "List usage records for the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "accountid",
            "description": "List usage records for the specified account",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "disableAccount,createAccount,listAccounts,lockAccount,updateAccount,markDefaultZoneForAccount"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "enddate",
            "description": "End date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-03.",
            "type": "date",
            "length": 255,
            "required": true
          },
          {
            "name": "type",
            "description": "List usage records for the specified usage type",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "startdate",
            "description": "Start date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-01.",
            "type": "date",
            "length": 255,
            "required": true
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "List usage records for the specified user.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "accountid",
            "description": "the user account Id",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "True if the resource is default",
            "type": "boolean"
          },
          {
            "name": "virtualmachineid",
            "description": "virtual machine ID",
            "type": "string"
          },
          {
            "name": "offeringid",
            "description": "offering ID",
            "type": "string"
          },
          {
            "name": "usageid",
            "description": "id of the resource",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID",
            "type": "string"
          },
          {
            "name": "usage",
            "description": "usage in hours",
            "type": "string"
          },
          {
            "name": "rawusage",
            "description": "raw usage in hours",
            "type": "string"
          },
          {
            "name": "name",
            "description": "virtual machine name",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "template ID",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain the resource is associated with",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "id of the network",
            "type": "string"
          },
          {
            "name": "enddate",
            "description": "end date of the usage record",
            "type": "string"
          },
          {
            "name": "startdate",
            "description": "start date of the usage record",
            "type": "string"
          },
          {
            "name": "issystem",
            "description": "True if the IPAddress is system IP - allocated during vm deploy or lb rule create",
            "type": "boolean"
          },
          {
            "name": "usagetype",
            "description": "usage type ID",
            "type": "integer"
          },
          {
            "name": "virtualsize",
            "description": "virtual size of resource",
            "type": "long"
          },
          {
            "name": "description",
            "description": "description of the usage record",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the zone ID",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the resource",
            "type": "string"
          },
          {
            "name": "type",
            "description": "resource type",
            "type": "string"
          },
          {
            "name": "size",
            "description": "resource size",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the resource",
            "type": "string"
          },
          {
            "name": "issourcenat",
            "description": "True if the IPAddress is source NAT",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the user account name",
            "type": "string"
          }
        ]
      },
      {
        "name": "assignToGlobalLoadBalancerRule",
        "description": "Assign load balancer rule or list of load balancer rules to a global load balancer rules.",
        "isasync": true,
        "params": [
          {
            "name": "gslblbruleweightsmap",
            "description": "Map of LB rule id's and corresponding weights (between 1-100) in the GSLB rule, if not specified weight of a LB rule is defaulted to 1. Specified as 'gslblbruleweightsmap[0].loadbalancerid=UUID&gslblbruleweightsmap[0].weight=10'",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the global load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule"
          },
          {
            "name": "loadbalancerrulelist",
            "description": "the list load balancer rules that will be assigned to gloabal load balacner rule",
            "type": "list",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateTrafficType",
        "description": "Updates traffic type of a physical network",
        "since": "3.0.0",
        "isasync": true,
        "related": "addTrafficType",
        "params": [
          {
            "name": "kvmnetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "traffic type id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addTrafficType,updateTrafficType"
          },
          {
            "name": "xennetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vmwarenetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "kvmnetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "vmwarenetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "id of the network provider",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the trafficType to be added to the physical network",
            "type": "string"
          },
          {
            "name": "xennetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
            "type": "string"
          }
        ]
      },
      {
        "name": "listPods",
        "description": "Lists all Pods.",
        "isasync": false,
        "related": "createPod,updatePod",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list Pods by ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,listPods,updatePod"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "list pods by allocation state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "list Pods by Zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "name",
            "description": "list Pods by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "showcapacities",
            "description": "flag to display the capacity of the pods",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "capacity",
            "description": "the capacity of the Pod",
            "type": "list",
            "response": [
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              }
            ]
          },
          {
            "name": "startip",
            "description": "the starting IP for the Pod",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the Pod",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the ending IP for the Pod",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the Pod",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the Pod",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the Pod",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the Pod",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the Pod",
            "type": "string"
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the Pod",
            "type": "string"
          }
        ]
      },
      {
        "name": "enableUser",
        "description": "Enables a user account",
        "isasync": false,
        "related": "updateUser,listUsers,createUser,lockUser,getUser,disableUser",
        "params": [
          {
            "name": "id",
            "description": "Enables user by user ID.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateUser,enableUser,listUsers,createUser,lockUser,getUser,disableUser"
          }
        ],
        "response": [
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          }
        ]
      },
      {
        "name": "listOsCategories",
        "description": "Lists all supported OS categories for this cloud.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "list Os category by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listOsCategories"
          },
          {
            "name": "name",
            "description": "list os category by name",
            "type": "string",
            "length": 255,
            "required": false,
            "since": "3.0.1"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the OS category",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the OS category",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateNetworkACLItem",
        "description": "Updates ACL Item with specified Id",
        "isasync": true,
        "related": "createNetworkACL",
        "params": [
          {
            "name": "id",
            "description": "the ID of the network ACL Item",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetworkACLItem,createNetworkACL"
          },
          {
            "name": "startport",
            "description": "the starting port of ACL",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "endport",
            "description": "the ending port of ACL",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "protocol",
            "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the ACL,can be Ingress or Egress, defaulted to Ingress if not specified",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "number",
            "description": "The network of the vm the ACL will be created for",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to allow traffic from/to",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "action",
            "description": "scl entry action, allow or deny",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "tags",
            "description": "the list of resource tags associated with the network ACLs",
            "type": "list",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              }
            ]
          },
          {
            "name": "startport",
            "description": "the starting port of ACL's port range",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "endport",
            "description": "the ending port of ACL's port range",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the ACL",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the ACL",
            "type": "string"
          },
          {
            "name": "number",
            "description": "Number of the ACL Item",
            "type": "integer"
          },
          {
            "name": "aclid",
            "description": "the ID of the ACL this item belongs to",
            "type": "string"
          },
          {
            "name": "action",
            "description": "Action of ACL Item. Allow/Deny",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the ID of the ACL Item",
            "type": "string"
          }
        ]
      },
      {
        "name": "addIpToNic",
        "description": "Assigns secondary IP to NIC",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "nicid",
            "description": "the ID of the nic to which you want to assign private IP",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listNics"
          },
          {
            "name": "ipaddress",
            "description": "Secondary IP Address",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "virtualmachineid",
            "description": "the ID of the vm",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the ID of the network",
            "type": "string"
          },
          {
            "name": "nicid",
            "description": "the ID of the nic",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "Secondary IP address",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the secondary private IP addr",
            "type": "string"
          }
        ]
      },
      {
        "name": "createInstanceGroup",
        "description": "Creates a vm group",
        "isasync": false,
        "related": "updateInstanceGroup",
        "params": [
          {
            "name": "projectid",
            "description": "The project of the instance group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "domainid",
            "description": "the domain ID of account owning the instance group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "the account of the instance group. The account parameter must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the instance group",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain ID of the instance group",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the instance group",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the group",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the instance group",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the group",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "created",
            "description": "time and date the instance group was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the id of the instance group",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteNetworkACLList",
        "description": "Deletes a Network ACL",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the network ACL",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateAccount",
        "description": "Updates account information for the authenticated user",
        "isasync": false,
        "related": "disableAccount,createAccount,listAccounts,lockAccount,markDefaultZoneForAccount",
        "params": [
          {
            "name": "id",
            "description": "Account id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "disableAccount,createAccount,listAccounts,lockAccount,updateAccount,markDefaultZoneForAccount"
          },
          {
            "name": "account",
            "description": "the current account name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "accountdetails",
            "description": "details for account used to store specific parameters",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "newname",
            "description": "new name for the account",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "networkdomain",
            "description": "Network domain for the account's networks; empty string will update domainName with NULL value",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain where the account exists",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          },
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              },
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              },
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteNetworkDevice",
        "description": "Deletes network device.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "Id of network device to delete",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts,prepareHostForMaintenance,updateHost,addHost"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "listSnapshotPolicies",
        "description": "Lists snapshot policies.",
        "isasync": false,
        "related": "createSnapshotPolicy",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "volumeid",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,detachVolume,createVolume"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the snapshot policy",
            "type": "string"
          },
          {
            "name": "schedule",
            "description": "time the snapshot is scheduled to be taken.",
            "type": "string"
          },
          {
            "name": "maxsnaps",
            "description": "maximum number of snapshots retained",
            "type": "int"
          },
          {
            "name": "intervaltype",
            "description": "the interval type of the snapshot policy",
            "type": "short"
          },
          {
            "name": "timezone",
            "description": "the time zone of the snapshot policy",
            "type": "string"
          },
          {
            "name": "volumeid",
            "description": "the ID of the disk volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "configureInternalLoadBalancerElement",
        "description": "Configures an Internal Load Balancer element.",
        "since": "4.2.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "enabled",
            "description": "Enables/Disables the Internal Load Balancer element",
            "type": "boolean",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "the ID of the internal lb provider",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "configureInternalLoadBalancerElement"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the id of the internal load balancer element",
            "type": "string"
          },
          {
            "name": "nspid",
            "description": "the physical network service provider id of the element",
            "type": "string"
          },
          {
            "name": "enabled",
            "description": "Enabled/Disabled the element",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "releaseHostReservation",
        "description": "Releases host reservation.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts,prepareHostForMaintenance,updateHost,addHost"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createDomain",
        "description": "Creates a domain",
        "isasync": false,
        "related": "listDomainChildren,listDomains,updateDomain",
        "params": [
          {
            "name": "name",
            "description": "creates domain with this name",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "Domain UUID, required for adding domain from another Region",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "parentdomainid",
            "description": "assigns new domain a parent domain by domain ID of the parent.  If no parent domain is specied, the ROOT domain is assumed.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,createDomain,listDomains,updateDomain"
          },
          {
            "name": "networkdomain",
            "description": "Network domain for networks in the domain",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "haschild",
            "description": "whether the domain has one or more sub-domains",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the ID of the domain",
            "type": "string"
          },
          {
            "name": "parentdomainid",
            "description": "the domain ID of the parent domain",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the path of the domain",
            "type": "string"
          },
          {
            "name": "parentdomainname",
            "description": "the domain name of the parent domain",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the domain",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "level",
            "description": "the level of the domain",
            "type": "integer"
          }
        ]
      },
      {
        "name": "deleteSSHKeyPair",
        "description": "Deletes a keypair by name",
        "isasync": false,
        "params": [
          {
            "name": "name",
            "description": "Name of the keypair",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "account",
            "description": "the account associated with the keypair. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the keypair",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "projectid",
            "description": "the project associated with keypair",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteSnapshotPolicies",
        "description": "Deletes snapshot policies for the account.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the Id of the snapshot policy",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createSnapshotPolicy"
          },
          {
            "name": "ids",
            "description": "list of snapshots policy IDs separated by comma",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "createSnapshotPolicy"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "listLBHealthCheckPolicies",
        "description": "Lists load balancer HealthCheck policies.",
        "since": "4.2.0",
        "isasync": false,
        "related": "createLBHealthCheckPolicy",
        "params": [
          {
            "name": "lbruleid",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "healthcheckpolicy",
            "description": "the list of healthcheckpolicies",
            "type": "list",
            "response": [
              {
                "name": "healthcheckthresshold",
                "description": "Number of consecutive health check success before declaring an instance healthy",
                "type": "int"
              },
              {
                "name": "state",
                "description": "the state of the policy",
                "type": "string"
              },
              {
                "name": "healthcheckinterval",
                "description": "Amount of time between health checks",
                "type": "int"
              },
              {
                "name": "pingpath",
                "description": "the pingpath  of the healthcheck policy",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the healthcheck policy",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the LB HealthCheck policy ID",
                "type": "string"
              },
              {
                "name": "responsetime",
                "description": "Time to wait when receiving a response from the health check",
                "type": "int"
              },
              {
                "name": "unhealthcheckthresshold",
                "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
                "type": "int"
              }
            ]
          },
          {
            "name": "lbruleid",
            "description": "the LB rule ID",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the HealthCheck policy belongs to",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the HealthCheck policy",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the HealthCheck policy",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the HealthCheck policy",
            "type": "string"
          }
        ]
      },
      {
        "name": "listEvents",
        "description": "A command to list events.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "enddate",
            "description": "the end date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "duration",
            "description": "the duration of the event",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "type",
            "description": "the event type (see event types)",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "startdate",
            "description": "the start date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the event",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listEvents"
          },
          {
            "name": "entrytime",
            "description": "the time the event was entered",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "level",
            "description": "the event level (INFO, WARN, ERROR)",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "username",
            "description": "the name of the user who performed the action (can be different from the account if an admin is performing an action for a user, e.g. starting/stopping a user's virtual machine)",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the account's domain",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the event was created",
            "type": "date"
          },
          {
            "name": "state",
            "description": "the state of the event",
            "type": "state"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the id of the account's domain",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name for the account that owns the object being acted on in the event (e.g. the owner of the virtual machine, ip address, or security group)",
            "type": "string"
          },
          {
            "name": "description",
            "description": "a brief description of the event",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the type of the event (see event types)",
            "type": "string"
          },
          {
            "name": "level",
            "description": "the event level (INFO, WARN, ERROR)",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the event",
            "type": "string"
          },
          {
            "name": "parentid",
            "description": "whether the event is parented",
            "type": "string"
          }
        ]
      },
      {
        "name": "addHost",
        "description": "Adds a new host.",
        "isasync": false,
        "related": "listHosts,prepareHostForMaintenance,updateHost",
        "params": [
          {
            "name": "zoneid",
            "description": "the Zone ID for the host",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "hypervisor",
            "description": "hypervisor type of the host",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "url",
            "description": "the host URL",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "clustername",
            "description": "the cluster name for the host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "username",
            "description": "the username for the host",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "password",
            "description": "the password for the host",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "allocationstate",
            "description": "Allocation state of this Host for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "clusterid",
            "description": "the cluster ID for the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster"
          },
          {
            "name": "hosttags",
            "description": "list of tags to be added to the host",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the Pod ID for the host",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,updatePod"
          }
        ],
        "response": [
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listDedicatedClusters",
        "description": "Lists dedicated clusters.",
        "isasync": false,
        "related": "dedicateCluster",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "the name of the account associated with the cluster. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the cluster",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster"
          }
        ],
        "response": [
          {
            "name": "accountid",
            "description": "the Account ID of the cluster",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the cluster",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVpnGateway",
        "description": "Delete site to site vpn gateway",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "id of customer gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVpnGateway"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "addNetworkDevice",
        "description": "Adds a network device of one of the following types: ExternalDhcp, ExternalFirewall, ExternalLoadBalancer, PxeServer",
        "isasync": false,
        "related": "listNetworkDevice",
        "params": [
          {
            "name": "networkdeviceparameterlist",
            "description": "parameters for network device",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "networkdevicetype",
            "description": "Network device type, now supports ExternalDhcp, PxeServer, NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer, F5BigIpLoadBalancer, JuniperSRXFirewall",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the network device",
            "type": "string"
          }
        ]
      },
      {
        "name": "createAutoScaleVmGroup",
        "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
        "isasync": true,
        "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup,disableAutoScaleVmGroup",
        "params": [
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "scaleuppolicyids",
            "description": "list of scaleup autoscale policies",
            "type": "list",
            "length": 255,
            "required": true,
            "related": "updateAutoScalePolicy,createAutoScalePolicy"
          },
          {
            "name": "vmprofileid",
            "description": "the autoscale profile that contains information about the vms in the vm group.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listAutoScaleVmProfiles"
          },
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "lbruleid",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          },
          {
            "name": "scaledownpolicyids",
            "description": "list of scaledown autoscale policies",
            "type": "list",
            "length": 255,
            "required": true,
            "related": "updateAutoScalePolicy,createAutoScalePolicy"
          },
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the autoscale vm group ID",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the current state of the AutoScale Vm Group",
            "type": "string"
          },
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "int"
          },
          {
            "name": "scaledownpolicies",
            "description": "list of scaledown autoscale policies",
            "type": "list"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "int"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "vmprofileid",
            "description": "the autoscale profile that contains information about the vms in the vm group.",
            "type": "string"
          },
          {
            "name": "scaleuppolicies",
            "description": "list of scaleup autoscale policies",
            "type": "list"
          },
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "int"
          },
          {
            "name": "lbruleid",
            "description": "the load balancer rule ID",
            "type": "string"
          }
        ]
      },
      {
        "name": "rebootRouter",
        "description": "Starts a router.",
        "isasync": true,
        "related": "startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,stopInternalLoadBalancerVM",
        "params": [
          {
            "name": "id",
            "description": "the ID of the router",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,rebootRouter,stopInternalLoadBalancerVM"
          }
        ],
        "response": [
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteNetworkServiceProvider",
        "description": "Deletes a Network Service Provider.",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the network service provider",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addNetworkServiceProvider,updateNetworkServiceProvider,listTrafficTypes"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createLBHealthCheckPolicy",
        "description": "Creates a Load Balancer healthcheck policy ",
        "since": "4.2.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "responsetimeout",
            "description": "Time to wait when receiving a response from the health check (2sec - 60 sec)",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "unhealthythreshold",
            "description": "Number of consecutive health check failures before declaring an instance unhealthy",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "healthythreshold",
            "description": "Number of consecutive health check success before declaring an instance healthy",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "intervaltime",
            "description": "Amount of time between health checks (1 sec - 20940 sec)",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pingpath",
            "description": "HTTP Ping Path",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "description",
            "description": "the description of the load balancer HealthCheck policy",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "lbruleid",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          }
        ],
        "response": [
          {
            "name": "lbruleid",
            "description": "the LB rule ID",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the HealthCheck policy",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the HealthCheck policy",
            "type": "string"
          },
          {
            "name": "healthcheckpolicy",
            "description": "the list of healthcheckpolicies",
            "type": "list",
            "response": [
              {
                "name": "unhealthcheckthresshold",
                "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
                "type": "int"
              },
              {
                "name": "id",
                "description": "the LB HealthCheck policy ID",
                "type": "string"
              },
              {
                "name": "pingpath",
                "description": "the pingpath  of the healthcheck policy",
                "type": "string"
              },
              {
                "name": "healthcheckinterval",
                "description": "Amount of time between health checks",
                "type": "int"
              },
              {
                "name": "responsetime",
                "description": "Time to wait when receiving a response from the health check",
                "type": "int"
              },
              {
                "name": "healthcheckthresshold",
                "description": "Number of consecutive health check success before declaring an instance healthy",
                "type": "int"
              },
              {
                "name": "description",
                "description": "the description of the healthcheck policy",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the state of the policy",
                "type": "string"
              }
            ]
          },
          {
            "name": "account",
            "description": "the account of the HealthCheck policy",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the HealthCheck policy belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "archiveEvents",
        "description": "Archive one or more events.",
        "isasync": false,
        "params": [
          {
            "name": "enddate",
            "description": "end date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "ids",
            "description": "the IDs of the events",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "type",
            "description": "archive by event type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "startdate",
            "description": "start date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "listConfigurations",
        "description": "Lists all configurations.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "lists configuration by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "storageid",
            "description": "the ID of the Storage pool to update the parameter value for corresponding storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listStoragePools,findStoragePoolsForMigration,createStoragePool"
          },
          {
            "name": "clusterid",
            "description": "the ID of the Cluster to update the parameter value for corresponding cluster",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateCluster"
          },
          {
            "name": "category",
            "description": "lists configurations by category",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the ID of the Zone to update the parameter value for corresponding zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "accountid",
            "description": "the ID of the Account to update the parameter value for corresponding account",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "disableAccount,createAccount,listAccounts,lockAccount,markDefaultZoneForAccount"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "description",
            "description": "the description of the configuration",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the value of the configuration",
            "type": "long"
          },
          {
            "name": "value",
            "description": "the value of the configuration",
            "type": "string"
          },
          {
            "name": "category",
            "description": "the category of the configuration",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the configuration",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateHost",
        "description": "Updates a host.",
        "isasync": false,
        "related": "listHosts,prepareHostForMaintenance",
        "params": [
          {
            "name": "url",
            "description": "the new uri for the secondary storage: nfs://host/path",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "Change resource state of host, valid values are [Enable, Disable]. Operation may failed if host in states not allowing Enable/Disable",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "oscategoryid",
            "description": "the id of Os category to update the host with",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "id",
            "description": "the ID of the host to update",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts,prepareHostForMaintenance,updateHost"
          },
          {
            "name": "hosttags",
            "description": "list of tags to be added to the host",
            "type": "list",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          }
        ]
      },
      {
        "name": "listProjectInvitations",
        "description": "Lists projects and provides detailed information for listed projects",
        "since": "3.0.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list invitations by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listProjectInvitations"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list by project id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "state",
            "description": "list invitations by state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "activeonly",
            "description": "if true, list only active invitations - having Pending state and ones that are not timed out yet",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the invitation",
            "type": "string"
          },
          {
            "name": "email",
            "description": "the email the invitation was sent to",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the invitation state",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the id of the project",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the name of the project",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteIso",
        "description": "Deletes an ISO file.",
        "isasync": true,
        "params": [
          {
            "name": "zoneid",
            "description": "the ID of the zone of the ISO file. If not specified, the ISO will be deleted from all the zones",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "id",
            "description": "the ID of the ISO file",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createVpnCustomerGateway",
        "description": "Creates site to site vpn customer gateway",
        "isasync": true,
        "related": "updateVpnCustomerGateway,listVpnCustomerGateways",
        "params": [
          {
            "name": "esplifetime",
            "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "ikepolicy",
            "description": "IKE policy of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "esppolicy",
            "description": "ESP policy of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "dpd",
            "description": "If DPD is enabled for VPN connection",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of this customer gateway",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "the account associated with the gateway. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec Preshared-Key of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "guest ip of the customer gateway",
            "type": "string"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of IKE SA of customer gateway",
            "type": "long"
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string"
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec preshared-key of customer gateway",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the customer gateway",
            "type": "string"
          },
          {
            "name": "dpd",
            "description": "if DPD is enabled for customer gateway",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string"
          },
          {
            "name": "ikepolicy",
            "description": "IKE policy of customer gateway",
            "type": "string"
          },
          {
            "name": "esppolicy",
            "description": "IPsec policy of customer gateway",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of ESP SA of customer gateway",
            "type": "long"
          }
        ]
      },
      {
        "name": "listTrafficTypes",
        "description": "Lists traffic types of a given physical network.",
        "since": "3.0.0",
        "isasync": false,
        "related": "addNetworkServiceProvider,updateNetworkServiceProvider",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPhysicalNetwork,listPhysicalNetworks"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "uuid of the network provider",
            "type": "string"
          },
          {
            "name": "canenableindividualservice",
            "description": "true if individual services can be enabled/disabled",
            "type": "boolean"
          },
          {
            "name": "servicelist",
            "description": "services for this provider",
            "type": "list"
          },
          {
            "name": "state",
            "description": "state of the network provider",
            "type": "string"
          },
          {
            "name": "destinationphysicalnetworkid",
            "description": "the destination physical network",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the provider name",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateResourceLimit",
        "description": "Updates resource limits for an account or domain.",
        "isasync": false,
        "related": "listResourceLimits",
        "params": [
          {
            "name": "domainid",
            "description": "Update resource limits for all accounts in specified domain. If used with the account parameter, updates resource limits for a specified account in specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "resourcetype",
            "description": "Type of resource to update. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create.3 - Snapshot. Number of snapshots a user can create.4 - Template. Number of templates that a user can register/create.6 - Network. Number of guest network a user can create.7 - VPC. Number of VPC a user can create.8 - CPU. Total number of CPU cores a user can use.9 - Memory. Total Memory (in MB) a user can use.10 - PrimaryStorage. Total primary storage space (in GiB) a user can use.11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use.",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "projectid",
            "description": "Update resource limits for project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "max",
            "description": "  Maximum resource limit.",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "Update resource for a specified account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "max",
            "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account of the resource limit",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the resource limit",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the resource limit",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the resource limit",
            "type": "string"
          },
          {
            "name": "resourcetype",
            "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the resource limit",
            "type": "string"
          }
        ]
      },
      {
        "name": "lockAccount",
        "description": "Locks an account",
        "isasync": false,
        "related": "disableAccount,createAccount,listAccounts,markDefaultZoneForAccount",
        "params": [
          {
            "name": "domainid",
            "description": "Locks the specified account on this domain.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "Locks the specified account.",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          },
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              },
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              }
            ]
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          }
        ]
      },
      {
        "name": "deleteTrafficMonitor",
        "description": "Deletes an traffic monitor host.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "Id of the Traffic Monitor Host.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts,prepareHostForMaintenance"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createUser",
        "description": "Creates a user for an account that already exists",
        "isasync": false,
        "related": "updateUser,listUsers,lockUser,getUser,disableUser",
        "params": [
          {
            "name": "domainid",
            "description": "Creates the user under the specified domain. Has to be accompanied with the account parameter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "email",
            "description": "email",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "userid",
            "description": "User UUID, required for adding account from external provisioning system",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "password",
            "description": "Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "account",
            "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "lastname",
            "description": "lastname",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "timezone",
            "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "firstname",
            "description": "firstname",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "username",
            "description": "Unique username.",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          },
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteAutoScalePolicy",
        "description": "Deletes a autoscale policy.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the autoscale policy",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateAutoScalePolicy,createAutoScalePolicy"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listNetworkIsolationMethods",
        "description": "Lists supported methods of network isolation",
        "since": "4.2.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "Network isolation method name",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDiskOfferings",
        "description": "Lists all available disk offerings.",
        "isasync": false,
        "related": "createDiskOffering",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of the disk offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the disk offering",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createDiskOffering,listDiskOfferings"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain of the disk offering.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the disk offering",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the disk offering",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "the storage type for this disk offering",
            "type": "string"
          },
          {
            "name": "displayoffering",
            "description": "whether to display the offering to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "unique ID of the disk offering",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the disk offering.",
            "type": "string"
          },
          {
            "name": "iscustomizediops",
            "description": "true if disk offering uses custom iops, false otherwise",
            "type": "boolean"
          },
          {
            "name": "iscustomized",
            "description": "true if disk offering uses custom size, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk offering",
            "type": "long"
          },
          {
            "name": "disksize",
            "description": "the size of the disk offering in GB",
            "type": "long"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk offering",
            "type": "long"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk offering",
            "type": "long"
          },
          {
            "name": "maxiops",
            "description": "the max iops of the disk offering",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk offering",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "the min iops of the disk offering",
            "type": "long"
          },
          {
            "name": "created",
            "description": "the date this disk offering was created",
            "type": "date"
          }
        ]
      },
      {
        "name": "detachVolume",
        "description": "Detaches a disk volume from a virtual machine.",
        "isasync": true,
        "related": "uploadVolume,createVolume",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine where the volume is detached from",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "deviceid",
            "description": "the device ID on the virtual machine where volume is detached from",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "uploadVolume,detachVolume,createVolume"
          }
        ],
        "response": [
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteUser",
        "description": "Deletes a user for an account",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "id of the user to be deleted",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateUser,listUsers,lockUser,getUser,disableUser"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteNetworkACL",
        "description": "Deletes a Network ACL",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the network ACL",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createNetworkACL"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listSnapshots",
        "description": "Lists all available snapshots for the account.",
        "isasync": false,
        "related": "createSnapshot",
        "params": [
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "intervaltype",
            "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "snapshottype",
            "description": "valid values are MANUAL or RECURRING.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "lists snapshot by snapshot name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "volumeid",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "uploadVolume,createVolume"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "lists snapshot by snapshot ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listSnapshots,createSnapshot"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "list snapshots by zone id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name of the snapshot's account",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the snapshot's account",
            "type": "string"
          },
          {
            "name": "snapshottype",
            "description": "the type of the snapshot",
            "type": "string"
          },
          {
            "name": "volumeid",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
            "type": "state"
          },
          {
            "name": "name",
            "description": "name of the snapshot",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with snapshot",
            "type": "list",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "intervaltype",
            "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the snapshot",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the snapshot",
            "type": "string"
          },
          {
            "name": "volumetype",
            "description": "type of the disk volume",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "id of the availability zone",
            "type": "string"
          },
          {
            "name": "created",
            "description": "  the date the snapshot was created",
            "type": "date"
          },
          {
            "name": "project",
            "description": "the project name of the snapshot",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the snapshot",
            "type": "string"
          },
          {
            "name": "volumename",
            "description": "name of the disk volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVPC",
        "description": "Deletes a VPC",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the VPC",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVPC,restartVPC,listVPCs"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteSecurityGroup",
        "description": "Deletes security group",
        "isasync": false,
        "params": [
          {
            "name": "name",
            "description": "The ID of the security group. Mutually exclusive with id parameter",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "The ID of the security group. Mutually exclusive with name parameter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listSecurityGroups"
          },
          {
            "name": "domainid",
            "description": "the domain ID of account owning the security group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "the account of the security group. Must be specified with domain ID",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "the project of the security group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "addS3",
        "description": "Adds S3",
        "since": "4.0.0",
        "isasync": false,
        "related": "addImageStore,createSecondaryStagingStore,listSecondaryStagingStores",
        "params": [
          {
            "name": "sockettimeout",
            "description": "socket timeout (milliseconds)",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "bucket",
            "description": "name of the template storage bucket",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "usehttps",
            "description": "connect to the S3 endpoint via HTTPS?",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "secretkey",
            "description": "S3 secret key",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "endpoint",
            "description": "S3 host name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "maxerrorretry",
            "description": "maximum number of times to retry on error",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "connectiontimeout",
            "description": "connection timeout (milliseconds)",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "accesskey",
            "description": "S3 access key",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "listCounters",
        "description": "List the counters",
        "isasync": false,
        "related": "createCounter",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "Name of the counter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "source",
            "description": "Source of the counter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the Counter.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createCounter,listCounters"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "source",
            "description": "Source of the counter.",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the Counter",
            "type": "string"
          },
          {
            "name": "value",
            "description": "Value in case of snmp or other specific counters.",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of counter",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the counter.",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateHypervisorCapabilities",
        "description": "Updates a hypervisor capabilities.",
        "since": "3.0.0",
        "isasync": false,
        "related": "listHypervisorCapabilities",
        "params": [
          {
            "name": "securitygroupenabled",
            "description": "set true to enable security group for this hypervisor.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "maxguestslimit",
            "description": "the max number of Guest VMs per host for this hypervisor.",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the hypervisor capability",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateHypervisorCapabilities,listHypervisorCapabilities"
          }
        ],
        "response": [
          {
            "name": "maxguestslimit",
            "description": "the maximum number of guest vms recommended for this hypervisor",
            "type": "long"
          },
          {
            "name": "maxhostspercluster",
            "description": "the maximum number of Hosts per cluster for this hypervisor",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the ID of the hypervisor capabilities row",
            "type": "string"
          },
          {
            "name": "storagemotionenabled",
            "description": "true if storage motion is supported",
            "type": "boolean"
          },
          {
            "name": "securitygroupenabled",
            "description": "true if security group is supported",
            "type": "boolean"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "maxdatavolumeslimit",
            "description": "the maximum number of Data Volumes that can be attached for this hypervisor",
            "type": "integer"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type",
            "type": "hypervisortype"
          }
        ]
      },
      {
        "name": "updateLoadBalancerRule",
        "description": "Updates load balancer",
        "isasync": true,
        "related": "listLoadBalancerRules,createLoadBalancerRule",
        "params": [
          {
            "name": "id",
            "description": "the id of the load balancer rule to update",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          },
          {
            "name": "description",
            "description": "the description of the load balancer rule",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the load balancer rule",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "algorithm",
            "description": "load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "publicport",
            "description": "the public port",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the rule belongs to",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public ip address",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the private port",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the load balancer",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "the public ip address id",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the load balancer rule",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with load balancer",
            "type": "list",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "project",
            "description": "the project name of the load balancer",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "algorithm",
            "description": "the load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the id of the guest network the lb rule belongs to",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the load balancer rule",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the load balancer",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the load balancer rule",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the load balancer",
            "type": "string"
          }
        ]
      },
      {
        "name": "createPhysicalNetwork",
        "description": "Creates a physical network",
        "since": "3.0.0",
        "isasync": true,
        "related": "listPhysicalNetworks",
        "params": [
          {
            "name": "name",
            "description": "the name of the physical network",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "networkspeed",
            "description": "the speed for the physical network[1G/10G]",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "domain ID of the account owning a physical network",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the physical network",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "broadcastdomainrange",
            "description": "the broadcast domain range for the physical network[Pod or Zone]. In Acton release it can be Zone only in Advance zone, and Pod in Basic",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vlan",
            "description": "the VLAN for the physical network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isolationmethods",
            "description": "the isolation method for the physical network[VLAN/L3/GRE]",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "Tag the physical network",
            "type": "list",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "name of the physical network",
            "type": "string"
          },
          {
            "name": "broadcastdomainrange",
            "description": "Broadcast domain range of the physical network",
            "type": "string"
          },
          {
            "name": "networkspeed",
            "description": "the speed of the physical network",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the uuid of the physical network",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the physical network",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan of the physical network",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the physical network",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the physical network owner",
            "type": "string"
          },
          {
            "name": "isolationmethods",
            "description": "isolation methods",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "comma separated tag",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteTemplate",
        "description": "Deletes a template from the system. All virtual machines using the deleted template will not be affected.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the template",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,registerTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          },
          {
            "name": "zoneid",
            "description": "the ID of zone of the template",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listHypervisorCapabilities",
        "description": "Lists all hypervisor capabilities.",
        "since": "3.0.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor for which to restrict the search",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the hypervisor capability",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHypervisorCapabilities"
          }
        ],
        "response": [
          {
            "name": "maxguestslimit",
            "description": "the maximum number of guest vms recommended for this hypervisor",
            "type": "long"
          },
          {
            "name": "securitygroupenabled",
            "description": "true if security group is supported",
            "type": "boolean"
          },
          {
            "name": "storagemotionenabled",
            "description": "true if storage motion is supported",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type",
            "type": "hypervisortype"
          },
          {
            "name": "maxhostspercluster",
            "description": "the maximum number of Hosts per cluster for this hypervisor",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the ID of the hypervisor capabilities row",
            "type": "string"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "maxdatavolumeslimit",
            "description": "the maximum number of Data Volumes that can be attached for this hypervisor",
            "type": "integer"
          }
        ]
      },
      {
        "name": "listTags",
        "description": "List resource tag(s)",
        "since": "4.0.0",
        "isasync": false,
        "related": "listResourceDetails",
        "params": [
          {
            "name": "key",
            "description": "list by key",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "value",
            "description": "list by value",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "customer",
            "description": "list by customer name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "resourceid",
            "description": "list by resource id",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "resourcetype",
            "description": "list by resource type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the tag",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name where tag belongs to",
            "type": "string"
          },
          {
            "name": "value",
            "description": "tag value",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the tag",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the tag",
            "type": "string"
          },
          {
            "name": "resourceid",
            "description": "id of the resource",
            "type": "string"
          },
          {
            "name": "customer",
            "description": "customer associated with the tag",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id the tag belongs to",
            "type": "string"
          },
          {
            "name": "key",
            "description": "tag key name",
            "type": "string"
          },
          {
            "name": "resourcetype",
            "description": "resource type",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVpnCustomerGateway",
        "description": "Delete site to site vpn customer gateway",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "id of customer gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateVpnCustomerGateway,listVpnCustomerGateways"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listIsoPermissions",
        "description": "List iso visibility and all accounts that have permissions to view this iso.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "the template ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIsoPermissions"
          }
        ],
        "response": [
          {
            "name": "projectids",
            "description": "the list of projects the template is available for",
            "type": "list"
          },
          {
            "name": "account",
            "description": "the list of accounts the template is available for",
            "type": "list"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createVirtualRouterElement",
        "description": "Create a virtual router element.",
        "isasync": true,
        "related": "configureVirtualRouterElement",
        "params": [
          {
            "name": "nspid",
            "description": "the network service provider ID of the virtual router element",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addNetworkServiceProvider,updateNetworkServiceProvider"
          },
          {
            "name": "providertype",
            "description": "The provider type. Supported types are VirtualRouter (default) and VPCVirtualRouter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "addNetworkServiceProvider,updateNetworkServiceProvider"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain associated with the provider",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "enabled",
            "description": "Enabled/Disabled the service provider",
            "type": "boolean"
          },
          {
            "name": "nspid",
            "description": "the physical network service provider id of the provider",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the provider",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the provider",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateAutoScalePolicy",
        "description": "Updates an existing autoscale policy.",
        "isasync": true,
        "related": "createAutoScalePolicy",
        "params": [
          {
            "name": "conditionids",
            "description": "the list of IDs of the conditions that are being evaluated on every interval",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listConditions"
          },
          {
            "name": "duration",
            "description": "the duration for which the conditions have to be true before action is taken",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the autoscale policy",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateAutoScalePolicy,createAutoScalePolicy"
          },
          {
            "name": "quiettime",
            "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the autoscale policy",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id autoscale policy",
            "type": "string"
          },
          {
            "name": "quiettime",
            "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
            "type": "integer"
          },
          {
            "name": "conditions",
            "description": "the list of IDs of the conditions that are being evaluated on every interval",
            "type": "list"
          },
          {
            "name": "account",
            "description": "the account owning the autoscale policy",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale policy ID",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the autoscale policy",
            "type": "string"
          },
          {
            "name": "duration",
            "description": "the duration for which the conditions have to be true before action is taken",
            "type": "integer"
          },
          {
            "name": "action",
            "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the autoscale policy",
            "type": "string"
          }
        ]
      },
      {
        "name": "releaseDedicatedPod",
        "description": "Release the dedication for the pod",
        "isasync": true,
        "params": [
          {
            "name": "podid",
            "description": "the ID of the Pod",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,updatePod"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createVpnGateway",
        "description": "Creates site to site vpn local gateway",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "vpcid",
            "description": "public ip address id of the vpn gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createVPC,restartVPC,listVPCs"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "vpcid",
            "description": "the vpc id of this gateway",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          }
        ]
      },
      {
        "name": "dedicateZone",
        "description": "Dedicates a zones.",
        "isasync": true,
        "related": "listDedicatedZones",
        "params": [
          {
            "name": "account",
            "description": "the name of the account which needs dedication. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain ID to which the Zone is dedicated",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the Account Id to which the Zone is dedicated",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the Zone",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Name of the Zone",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteCounter",
        "description": "Deletes a counter",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the counter",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createCounter"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "dedicateCluster",
        "description": "Dedicate an existing cluster",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "clusterid",
            "description": "the ID of the Cluster",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateCluster"
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "the name of the account which needs dedication. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the cluster",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the Account ID of the cluster",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateStorageNetworkIpRange",
        "description": "Update a Storage network IP range, only allowed when no IPs in this range have been allocated.",
        "since": "3.0.0",
        "isasync": true,
        "related": "listStorageNetworkIpRange",
        "params": [
          {
            "name": "netmask",
            "description": "the netmask for storage network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "endip",
            "description": "the ending IP address",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vlan",
            "description": "Optional. the vlan the ip range sits on",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "UUID of storage network ip range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateStorageNetworkIpRange,listStorageNetworkIpRange"
          },
          {
            "name": "startip",
            "description": "the beginning IP address",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "netmask",
            "description": "the netmask of the storage network IP range",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone uuid of the storage network IP range",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the storage network IP range",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network uuid of storage network IP range",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the storage network IP range",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "integer"
          },
          {
            "name": "startip",
            "description": "the start ip of the storage network IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the uuid of storage network IP range.",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod uuid for the storage network IP range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listAsyncJobs",
        "description": "Lists all pending asynchronous jobs for the account.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "startdate",
            "description": "the start date of the async job",
            "type": "tzdate",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "cmd",
            "description": "the async command executed",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the current job status-should be 0 for PENDING",
            "type": "integer"
          },
          {
            "name": "jobresultcode",
            "description": "the result code for the job",
            "type": "integer"
          },
          {
            "name": "jobresulttype",
            "description": "the result type",
            "type": "string"
          },
          {
            "name": "jobresult",
            "description": "the result reason",
            "type": "responseobject"
          },
          {
            "name": "userid",
            "description": "the user that executed the async command",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account that executed the async command",
            "type": "string"
          },
          {
            "name": "jobinstancetype",
            "description": "the instance/entity object related to the job",
            "type": "string"
          },
          {
            "name": "jobprocstatus",
            "description": "the progress information of the PENDING job",
            "type": "integer"
          },
          {
            "name": "created",
            "description": "  the created date of the job",
            "type": "date"
          },
          {
            "name": "jobinstanceid",
            "description": "the unique ID of the instance/entity object related to the job",
            "type": "string"
          }
        ]
      },
      {
        "name": "listUsageTypes",
        "description": "List Usage Types",
        "isasync": false,
        "related": "",
        "params": [

        ],
        "response": [
          {
            "name": "description",
            "description": "description of usage type",
            "type": "string"
          },
          {
            "name": "usagetypeid",
            "description": "usage type",
            "type": "integer"
          }
        ]
      },
      {
        "name": "listSecondaryStagingStores",
        "description": "Lists secondary staging stores.",
        "since": "4.2.0",
        "isasync": false,
        "related": "addImageStore,createSecondaryStagingStore",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the staging store",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "provider",
            "description": "the staging store provider",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "protocol",
            "description": "the staging store protocol",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the staging store",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "addImageStore,createSecondaryStagingStore,listSecondaryStagingStores"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the staging store",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "createVlanIpRange",
        "description": "Creates a VLAN IP range.",
        "isasync": false,
        "related": "listVlanIpRanges,dedicatePublicIpRange",
        "params": [
          {
            "name": "startipv6",
            "description": "the beginning IPv6 address in the IPv6 network range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "startip",
            "description": "the beginning IP address in the VLAN IP range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "optional parameter. Have to be specified for Direct Untagged vlan only.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,updatePod"
          },
          {
            "name": "ip6cidr",
            "description": "the CIDR of IPv6 network, must be at least /64",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "domain ID of the account owning a VLAN",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN. If not specified, will be defaulted to the vlan of the network or if vlan of the network is null - to Untagged",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "endipv6",
            "description": "the ending IPv6 address in the IPv6 network range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "endip",
            "description": "the ending IP address in the VLAN IP range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "account who will own the VLAN. If VLAN is Zone wide, this parameter should be ommited",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "project who will own the VLAN. If VLAN is Zone wide, this parameter should be ommited",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "forvirtualnetwork",
            "description": "true if VLAN is of Virtual type, false if Direct",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "the network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of the IPv6 network. Required for Shared networks and Isolated networks when it belongs to VPC",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "netmask",
            "description": "the netmask of the VLAN IP range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "gateway",
            "description": "the gateway of the VLAN IP range",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "podid",
            "description": "the Pod ID for the VLAN IP range",
            "type": "string"
          },
          {
            "name": "endipv6",
            "description": "the end ipv6 of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vlan range",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name for the VLAN IP range",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vlan range",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of vlan range",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the VLAN IP range",
            "type": "boolean"
          },
          {
            "name": "startipv6",
            "description": "the start ipv6 of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "string"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the start ip of the VLAN IP range",
            "type": "string"
          }
        ]
      },
      {
        "name": "addImageStore",
        "description": "Adds backup image store.",
        "since": "4.2.0",
        "isasync": false,
        "related": "createSecondaryStagingStore",
        "params": [
          {
            "name": "url",
            "description": "the URL for the image store",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name for the image store",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "details",
            "description": "the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "provider",
            "description": "the image store provider name",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the image store",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          },
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "findHostsForMigration",
        "description": "Find hosts suitable for migrating a virtual machine.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "find hosts to which this VM can be migrated and flag the hosts with enough CPU/RAM to host the VM",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "requiresStorageMotion",
            "description": "true if migrating a vm to this host requires storage motion, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          }
        ]
      },
      {
        "name": "dedicatePod",
        "description": "Dedicates a Pod.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "podid",
            "description": "the ID of the Pod",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPod,updatePod"
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "account",
            "description": "the name of the account which needs dedication. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "accountid",
            "description": "the Account Id to which the Pod is dedicated",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Name of the Pod",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID to which the Pod is dedicated",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the ID of the Pod",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteAutoScaleVmGroup",
        "description": "Deletes a autoscale vm group.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the autoscale group",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup,disableAutoScaleVmGroup"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listRemoteAccessVpns",
        "description": "Lists remote access vpns",
        "isasync": false,
        "related": "createRemoteAccessVpn",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "publicipid",
            "description": "public ip address id of the vpn server",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public ip address of the vpn server",
            "type": "string"
          },
          {
            "name": "presharedkey",
            "description": "the ipsec preshared key",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "iprange",
            "description": "the range of ips to allocate to the clients",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the remote access vpn",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "the public ip address of the vpn server",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateGlobalLoadBalancerRule",
        "description": "update global load balancer rules.",
        "isasync": true,
        "related": "listGlobalLoadBalancerRules",
        "params": [
          {
            "name": "gslbstickysessionmethodname",
            "description": "session sticky method (sourceip) if not specified defaults to sourceip",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "description",
            "description": "the description of the load balancer rule",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the global load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule"
          },
          {
            "name": "gslblbmethod",
            "description": "load balancer algorithm (roundrobin, leastconn, proximity) that is used to distributed traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "loadbalancerrule",
            "description": "List of load balancer rules that are part of GSLB rule",
            "type": "list",
            "response": [
              {
                "name": "publicport",
                "description": "the public port",
                "type": "string"
              },
              {
                "name": "privateport",
                "description": "the private port",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the load balancer rule",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the state of the rule",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the load balancer",
                "type": "string"
              },
              {
                "name": "publicipid",
                "description": "the public ip address id",
                "type": "string"
              },
              {
                "name": "algorithm",
                "description": "the load balancer algorithm (source, roundrobin, leastconn)",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account of the load balancer rule",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the load balancer",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain of the load balancer rule",
                "type": "string"
              },
              {
                "name": "publicip",
                "description": "the public ip address",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the id of the zone the rule belongs to",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the load balancer",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with load balancer",
                "type": "list",
                "response": [
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "cidrlist",
                "description": "the cidr list to forward traffic from",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the id of the guest network the lb rule belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the load balancer",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the load balancer rule ID",
                "type": "string"
              }
            ]
          },
          {
            "name": "gslbdomainname",
            "description": "DNS domain name given for the global load balancer",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the global load balancer rule",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the global load balancer rule",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the load balancer rule",
            "type": "string"
          },
          {
            "name": "gslbstickysessionmethodname",
            "description": "session persistence method used for the global load balancer",
            "type": "string"
          },
          {
            "name": "regionid",
            "description": "Region Id in which global load balancer is created",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "global load balancer rule ID",
            "type": "string"
          },
          {
            "name": "gslbservicetype",
            "description": "GSLB service type",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the load balancer rule",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the load balancer rule",
            "type": "string"
          },
          {
            "name": "gslblbmethod",
            "description": "Load balancing method used for the global load balancer",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the load balancer",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the load balancer",
            "type": "string"
          }
        ]
      },
      {
        "name": "registerTemplate",
        "description": "Registers an existing template into the CloudStack cloud. ",
        "isasync": false,
        "related": "prepareTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos",
        "params": [
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "Register template for the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "hypervisor",
            "description": "the target hypervisor for the template",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "templatetag",
            "description": "the tag for this template.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "url",
            "description": "the URL of where the template is hosted. Possible URL include http:// and https://",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "sshkeyenabled",
            "description": "true if the template supports the sshkey upload feature; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "bits",
            "description": "32 or 64 bits support. 64 by default",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the template. This is usually used for display purposes.",
            "type": "string",
            "length": 4096,
            "required": true
          },
          {
            "name": "details",
            "description": "Template details in key/value pairs.",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "ispublic",
            "description": "true if the template is available to all accounts; default is true",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isrouting",
            "description": "true if the template type is routing i.e., if template is used to deploy router",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "checksum",
            "description": "the MD5 checksum value of this template",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the template",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "passwordenabled",
            "description": "true if the template supports the password reset feature; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "format",
            "description": "the format for the template. Possible values include QCOW2, RAW, and VHD.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS Type that best represents the OS of this template.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listOsTypes"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone the template is to be hosted on",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "requireshvm",
            "description": "true if this template requires HVM",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isextractable",
            "description": "true if the template or its derivatives are extractable; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "an optional accountName. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listAffinityGroupTypes",
        "description": "Lists affinity group types available",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "type",
            "description": "the type of the affinity group",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteNetworkOffering",
        "description": "Deletes a network offering.",
        "since": "3.0.0",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the ID of the network offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetworkOffering,createNetworkOffering"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "authorizeSecurityGroupEgress",
        "description": "Authorizes a particular egress rule for this security group",
        "since": "3.0.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "usersecuritygrouplist",
            "description": "user to security group mapping",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "an optional account for the security group. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "securitygroupid",
            "description": "The ID of the security group. Mutually exclusive with securityGroupName parameter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listSecurityGroups"
          },
          {
            "name": "securitygroupname",
            "description": "The name of the security group. Mutually exclusive with securityGroupName parameter",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "an optional project of the security group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "endport",
            "description": "end port for this egress rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "protocol",
            "description": "TCP is default. UDP is the other supported protocol",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "startport",
            "description": "start port for this egress rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "cidrlist",
            "description": "the cidr list associated",
            "type": "list",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "endport",
            "description": "the ending IP of the security group rule ",
            "type": "integer"
          },
          {
            "name": "startport",
            "description": "the starting IP of the security group rule",
            "type": "integer"
          },
          {
            "name": "cidr",
            "description": "the CIDR notation for the base IP address of the security group rule",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "the code for the ICMP message response",
            "type": "integer"
          },
          {
            "name": "securitygroupname",
            "description": "security group name",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "the type of the ICMP message response",
            "type": "integer"
          },
          {
            "name": "protocol",
            "description": "the protocol of the security group rule",
            "type": "string"
          },
          {
            "name": "account",
            "description": "account owning the security group rule",
            "type": "string"
          },
          {
            "name": "ruleid",
            "description": "the id of the security group rule",
            "type": "string"
          }
        ]
      },
      {
        "name": "disableAutoScaleVmGroup",
        "description": "Disables an AutoScale Vm Group",
        "isasync": true,
        "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup",
        "params": [
          {
            "name": "id",
            "description": "the ID of the autoscale group",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup,disableAutoScaleVmGroup"
          }
        ],
        "response": [
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "int"
          },
          {
            "name": "scaleuppolicies",
            "description": "list of scaleup autoscale policies",
            "type": "list"
          },
          {
            "name": "scaledownpolicies",
            "description": "list of scaledown autoscale policies",
            "type": "list"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "lbruleid",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "int"
          },
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "int"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm group ID",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "vmprofileid",
            "description": "the autoscale profile that contains information about the vms in the vm group.",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the current state of the AutoScale Vm Group",
            "type": "string"
          }
        ]
      },
      {
        "name": "listVpnCustomerGateways",
        "description": "Lists site to site vpn customer gateways",
        "isasync": false,
        "related": "updateVpnCustomerGateway",
        "params": [
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "id of the customer gateway",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateVpnCustomerGateway,listVpnCustomerGateways"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "ikepolicy",
            "description": "IKE policy of customer gateway",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of IKE SA of customer gateway",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "dpd",
            "description": "if DPD is enabled for customer gateway",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "ipaddress",
            "description": "guest ip of the customer gateway",
            "type": "string"
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of ESP SA of customer gateway",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "esppolicy",
            "description": "IPsec policy of customer gateway",
            "type": "string"
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec preshared-key of customer gateway",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the customer gateway",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          }
        ]
      },
      {
        "name": "createAccount",
        "description": "Creates an account",
        "isasync": false,
        "related": "disableAccount,listAccounts,markDefaultZoneForAccount",
        "params": [
          {
            "name": "accounttype",
            "description": "Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin",
            "type": "short",
            "length": 255,
            "required": true
          },
          {
            "name": "networkdomain",
            "description": "Network domain for the account's networks",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "password",
            "description": "Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "timezone",
            "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "username",
            "description": "Unique username.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "accountid",
            "description": "Account UUID, required for adding account from external provisioning system",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "accountdetails",
            "description": "details for account used to store specific parameters",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "Creates the user under the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          },
          {
            "name": "userid",
            "description": "User UUID, required for adding account from external provisioning system",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "lastname",
            "description": "lastname",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "firstname",
            "description": "firstname",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "email",
            "description": "email",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "account",
            "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          },
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              },
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          }
        ]
      },
      {
        "name": "prepareHostForMaintenance",
        "description": "Prepares a host for maintenance.",
        "isasync": true,
        "related": "listHosts",
        "params": [
          {
            "name": "id",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts,prepareHostForMaintenance"
          }
        ],
        "response": [
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "deletePrivateGateway",
        "description": "Deletes a Private gateway",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the private gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createPrivateGateway"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "stopInternalLoadBalancerVM",
        "description": "Stops an Internal LB vm.",
        "isasync": true,
        "related": "startRouter,listInternalLoadBalancerVMs,changeServiceForRouter",
        "params": [
          {
            "name": "forced",
            "description": "Force stop the VM. The caller knows the VM is stopped.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the internal lb vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "startRouter,listInternalLoadBalancerVMs,changeServiceForRouter,stopInternalLoadBalancerVM"
          }
        ],
        "response": [
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          }
        ]
      },
      {
        "name": "createSecondaryStagingStore",
        "description": "create secondary staging store.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "scope",
            "description": "the scope of the staging store: zone only for now",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "details",
            "description": "the details for the staging store",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "url",
            "description": "the URL for the staging store",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "provider",
            "description": "the staging store provider name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the staging store",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the image store",
            "type": "string"
          },
          {
            "name": "details",
            "description": "the details of the image store",
            "type": "set"
          },
          {
            "name": "providername",
            "description": "the provider name of the image store",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the image store",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the image store",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the image store",
            "type": "scopetype"
          },
          {
            "name": "protocol",
            "description": "the protocol of the image store",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the image store",
            "type": "string"
          },
          {
            "name": "url",
            "description": "the url of the image store",
            "type": "string"
          }
        ]
      },
      {
        "name": "generateUsageRecords",
        "description": "Generates usage records. This will generate records only if there any records to be generated, i.e if the scheduled usage job was not run or failed",
        "isasync": false,
        "params": [
          {
            "name": "enddate",
            "description": "End date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-03.",
            "type": "date",
            "length": 255,
            "required": true
          },
          {
            "name": "startdate",
            "description": "Start date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-01.",
            "type": "date",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "List events for the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteTrafficType",
        "description": "Deletes traffic type of a physical network",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "traffic type id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addTrafficType"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteLoadBalancerRule",
        "description": "Deletes a load balancer rule.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "getApiLimit",
        "description": "Get API limit count for the caller",
        "isasync": false,
        "related": "resetApiLimit",
        "params": [

        ],
        "response": [
          {
            "name": "accountid",
            "description": "the account uuid of the api remaining count",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the api remaining count",
            "type": "string"
          },
          {
            "name": "apiIssued",
            "description": "number of api already issued",
            "type": "int"
          },
          {
            "name": "expireAfter",
            "description": "seconds left to reset counters",
            "type": "long"
          },
          {
            "name": "apiAllowed",
            "description": "currently allowed number of apis",
            "type": "int"
          }
        ]
      },
      {
        "name": "attachIso",
        "description": "Attaches an ISO to a virtual machine.",
        "isasync": true,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "the ID of the ISO file",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,attachIso,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              }
            ]
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          }
        ]
      },
      {
        "name": "deletePortForwardingRule",
        "description": "Deletes a port forwarding rule",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listDomains",
        "description": "Lists domains and provides detailed information for listed domains",
        "isasync": false,
        "related": "listDomainChildren,updateDomain",
        "params": [
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "level",
            "description": "List domains by domain level.",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "List domain by domain name.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "List domain by domain ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,listDomains,updateDomain"
          }
        ],
        "response": [
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "haschild",
            "description": "whether the domain has one or more sub-domains",
            "type": "boolean"
          },
          {
            "name": "level",
            "description": "the level of the domain",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the ID of the domain",
            "type": "string"
          },
          {
            "name": "parentdomainid",
            "description": "the domain ID of the parent domain",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the path of the domain",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the domain",
            "type": "string"
          },
          {
            "name": "parentdomainname",
            "description": "the domain name of the parent domain",
            "type": "string"
          }
        ]
      },
      {
        "name": "getUser",
        "description": "Find user account by API key",
        "isasync": false,
        "related": "updateUser,listUsers,lockUser,disableUser",
        "params": [
          {
            "name": "userapikey",
            "description": "API key of the user",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          }
        ]
      },
      {
        "name": "listLoadBalancerRules",
        "description": "Lists load balancer rules.",
        "isasync": false,
        "related": "createLoadBalancerRule",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the load balancer rule",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "publicipid",
            "description": "the public IP address id of the load balancer rule ",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "associateIpAddress,restartNetwork"
          },
          {
            "name": "zoneid",
            "description": "the availability zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules"
          },
          {
            "name": "networkid",
            "description": "list by network id the rule belongs to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the id of the guest network the lb rule belongs to",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the rule belongs to",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the load balancer rule",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the load balancer",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the load balancer",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with load balancer",
            "type": "list",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "account",
            "description": "the account of the load balancer rule",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the load balancer",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public ip address",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the private port",
            "type": "string"
          },
          {
            "name": "publicport",
            "description": "the public port",
            "type": "string"
          },
          {
            "name": "algorithm",
            "description": "the load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the load balancer rule",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "the public ip address id",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the load balancer",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteEvents",
        "description": "Delete one or more events.",
        "isasync": false,
        "params": [
          {
            "name": "enddate",
            "description": "end date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "ids",
            "description": "the IDs of the events",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "startdate",
            "description": "start date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "delete by event type",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteZone",
        "description": "Deletes a Zone.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the ID of the Zone",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateProjectInvitation",
        "description": "Accepts or declines project invitation",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "projectid",
            "description": "id of the project to join",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateProject,createProject"
          },
          {
            "name": "accept",
            "description": "if true, accept the invitation, decline if false. True by default",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "account that is joining the project",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "token",
            "description": "list invitations for specified account; this parameter has to be specified with domainId",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVolume",
        "description": "Deletes a detached disk volume.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "The ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,createVolume"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createTags",
        "description": "Creates resource tag(s)",
        "since": "4.0.0",
        "isasync": true,
        "params": [
          {
            "name": "resourcetype",
            "description": "type of the resource",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "resourceids",
            "description": "list of resources to create the tags for",
            "type": "list",
            "length": 255,
            "required": true
          },
          {
            "name": "customer",
            "description": "identifies client specific tag. When the value is not null, the tag can't be used by cloudStack code internally",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "Map of tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "enableAutoScaleVmGroup",
        "description": "Enables an AutoScale Vm Group",
        "isasync": true,
        "related": "updateAutoScaleVmGroup",
        "params": [
          {
            "name": "id",
            "description": "the ID of the autoscale group",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "enableAutoScaleVmGroup,updateAutoScaleVmGroup"
          }
        ],
        "response": [
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "int"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "int"
          },
          {
            "name": "scaleuppolicies",
            "description": "list of scaleup autoscale policies",
            "type": "list"
          },
          {
            "name": "vmprofileid",
            "description": "the autoscale profile that contains information about the vms in the vm group.",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the current state of the AutoScale Vm Group",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm group ID",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "scaledownpolicies",
            "description": "list of scaledown autoscale policies",
            "type": "list"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "lbruleid",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "int"
          }
        ]
      },
      {
        "name": "listResourceDetails",
        "description": "List resource detail(s)",
        "since": "4.2",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "resourcetype",
            "description": "list by resource type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "resourceid",
            "description": "list by resource id",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "key",
            "description": "list by key",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name where tag belongs to",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the tag",
            "type": "string"
          },
          {
            "name": "resourceid",
            "description": "id of the resource",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id the tag belongs to",
            "type": "string"
          },
          {
            "name": "value",
            "description": "tag value",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the tag",
            "type": "string"
          },
          {
            "name": "customer",
            "description": "customer associated with the tag",
            "type": "string"
          },
          {
            "name": "key",
            "description": "tag key name",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the tag",
            "type": "string"
          },
          {
            "name": "resourcetype",
            "description": "resource type",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateCluster",
        "description": "Updates an existing cluster",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "allocationstate",
            "description": "Allocation state of this cluster for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "managedstate",
            "description": "whether this cluster is managed by cloudstack",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "hypervisor",
            "description": "hypervisor type of the cluster",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "clustername",
            "description": "the cluster name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "clustertype",
            "description": "hypervisor type of the cluster",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the Cluster",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateCluster"
          }
        ],
        "response": [
          {
            "name": "managedstate",
            "description": "whether this cluster is managed by cloudstack",
            "type": "string"
          },
          {
            "name": "cpuovercommitratio",
            "description": "The cpu overcommit ratio of the cluster",
            "type": "string"
          },
          {
            "name": "memoryovercommitratio",
            "description": "The memory overcommit ratio of the cluster",
            "type": "string"
          },
          {
            "name": "clustertype",
            "description": "the type of the cluster",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the cluster",
            "type": "string"
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the cluster",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the cluster",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the cluster ID",
            "type": "string"
          },
          {
            "name": "hypervisortype",
            "description": "the hypervisor type of the cluster",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the cluster",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the cluster name",
            "type": "string"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Cluster",
            "type": "list",
            "response": [
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              }
            ]
          },
          {
            "name": "podname",
            "description": "the Pod name of the cluster",
            "type": "string"
          }
        ]
      },
      {
        "name": "scaleVirtualMachine",
        "description": "Scales the virtual machine to a new service offering.",
        "isasync": true,
        "params": [
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering for the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createServiceOffering,listServiceOfferings"
          },
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "removeVpnUser",
        "description": "Removes vpn user",
        "isasync": true,
        "params": [
          {
            "name": "projectid",
            "description": "remove vpn user from the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "account",
            "description": "an optional account for the vpn user. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "username",
            "description": "username for the vpn user",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "releasePublicIpRange",
        "description": "Releases a Public IP range back to the system pool",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the id of the Public IP range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listVlanIpRanges,dedicatePublicIpRange"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listTemplates",
        "description": "List all public, private, and privileged templates.",
        "isasync": false,
        "related": "prepareTemplate,updateTemplate,registerIso,updateIso,copyIso,listIsos",
        "params": [
          {
            "name": "zoneid",
            "description": "list templates by zoneId",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor for which to restrict the search",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "templatefilter",
            "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "prepareTemplate,updateTemplate,registerIso,updateIso,listTemplates,copyIso,listIsos"
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDedicatedGuestVlanRanges",
        "description": "Lists dedicated guest vlan ranges",
        "isasync": false,
        "related": "dedicateGuestVlanRange",
        "params": [
          {
            "name": "account",
            "description": "the account with which the guest VLAN range is associated. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID with which the guest VLAN range is associated.  If used with the account parameter, returns all guest VLAN ranges for that account in the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "id",
            "description": "list dedicated guest vlan ranges by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDedicatedGuestVlanRanges,dedicateGuestVlanRange"
          },
          {
            "name": "guestvlanrange",
            "description": "the dedicated guest vlan range",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "zone of the guest VLAN range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "projectid",
            "description": "project who will own the guest VLAN range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "physicalnetworkid",
            "description": "physical network id of the guest VLAN range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPhysicalNetworks"
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain ID of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the guest vlan range",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the zone of the guest vlan range",
            "type": "long"
          },
          {
            "name": "guestvlanrange",
            "description": "the guest VLAN range",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network of the guest vlan range",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the guest vlan range",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateVpnCustomerGateway",
        "description": "Update site to site vpn customer gateway",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "cidrlist",
            "description": "guest cidr of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "the account associated with the gateway. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "dpd",
            "description": "If DPD is enabled for VPN connection",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "id of customer gateway",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateVpnCustomerGateway"
          },
          {
            "name": "esppolicy",
            "description": "ESP policy of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec Preshared-Key of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "name",
            "description": "name of this customer gateway",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ikepolicy",
            "description": "IKE policy of the customer gateway",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "ikepolicy",
            "description": "IKE policy of customer gateway",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string"
          },
          {
            "name": "esppolicy",
            "description": "IPsec policy of customer gateway",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "guest ip of the customer gateway",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "dpd",
            "description": "if DPD is enabled for customer gateway",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the customer gateway",
            "type": "string"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of IKE SA of customer gateway",
            "type": "long"
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of ESP SA of customer gateway",
            "type": "long"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec preshared-key of customer gateway",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateIsoPermissions",
        "description": "Updates iso permissions",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the template ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,updateTemplate,registerIso,updateIso,copyIso,listIsos"
          },
          {
            "name": "isextractable",
            "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "accounts",
            "description": "a comma delimited list of accounts. If specified, \"op\" parameter has to be passed in.",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "projectids",
            "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "isfeatured",
            "description": "true for featured template/iso, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ispublic",
            "description": "true for public template/iso, false for private templates/isos",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "op",
            "description": "permission operator (add, remove, reset)",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "stopSystemVm",
        "description": "Stops a system VM.",
        "isasync": true,
        "related": "changeServiceForSystemVm,startSystemVm,migrateSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm",
        "params": [
          {
            "name": "id",
            "description": "The ID of the system virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "changeServiceForSystemVm,startSystemVm,migrateSystemVm,stopSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm"
          },
          {
            "name": "forced",
            "description": "Force stop the VM.  The caller knows the VM is stopped.",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          }
        ]
      },
      {
        "name": "restartNetwork",
        "description": "Restarts the network; includes 1) restarting network elements - virtual routers, dhcp servers 2) reapplying all public ips 3) reapplying loadBalancing/portForwarding rules",
        "isasync": true,
        "related": "associateIpAddress",
        "params": [
          {
            "name": "cleanup",
            "description": "If cleanup old network elements",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "The id of the network to restart.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetwork"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "vmipaddress",
            "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "vlanid",
            "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "issourcenat",
            "description": "true if the IP address is a source nat address, false otherwise",
            "type": "boolean"
          },
          {
            "name": "purpose",
            "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
            "type": "string"
          },
          {
            "name": "issystem",
            "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
            "type": "boolean"
          },
          {
            "name": "associatednetworkid",
            "description": "the ID of the Network associated with the IP address",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "associatednetworkname",
            "description": "the name of the Network associated with the IP address",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "public IP address",
            "type": "string"
          },
          {
            "name": "id",
            "description": "public IP address id",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "isstaticnat",
            "description": "true if this ip is for static nat, false otherwise",
            "type": "boolean"
          },
          {
            "name": "allocated",
            "description": "date the public IP address was acquired",
            "type": "date"
          },
          {
            "name": "isportable",
            "description": "is public IP portable across the zones",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with ip address",
            "type": "list",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "state",
            "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the IP address",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain ID the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the ip belongs to",
            "type": "string"
          },
          {
            "name": "vlanname",
            "description": "the VLAN associated with the IP address",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone the public IP address belongs to",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the public IP address belongs to",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the ID of the Network where ip belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "prepareTemplate",
        "description": "load template into primary storage",
        "isasync": false,
        "related": "updateTemplate,registerIso,updateIso,copyIso,listIsos",
        "params": [
          {
            "name": "templateid",
            "description": "template ID of the template to be prepared in primary storage(s).",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "prepareTemplate,updateTemplate,registerIso,updateIso,copyIso,listIsos"
          },
          {
            "name": "zoneid",
            "description": "zone ID of the template to be prepared in primary storage(s).",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          }
        ],
        "response": [
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          }
        ]
      },
      {
        "name": "rebootVirtualMachine",
        "description": "Reboots a virtual machine.",
        "isasync": true,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              }
            ]
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          }
        ]
      },
      {
        "name": "changeServiceForRouter",
        "description": "Upgrades domain router to a new service offering",
        "isasync": false,
        "related": "startRouter,listInternalLoadBalancerVMs",
        "params": [
          {
            "name": "serviceofferingid",
            "description": "the service offering ID to apply to the domain router",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createServiceOffering,listServiceOfferings"
          },
          {
            "name": "id",
            "description": "The ID of the router",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "startRouter,listInternalLoadBalancerVMs,changeServiceForRouter"
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              }
            ]
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          }
        ]
      },
      {
        "name": "listGlobalLoadBalancerRules",
        "description": "Lists load balancer rules.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "id",
            "description": "the ID of the global load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listGlobalLoadBalancerRules"
          },
          {
            "name": "regionid",
            "description": "region ID",
            "type": "integer",
            "length": 255,
            "required": false,
            "related": "addRegion"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "description",
            "description": "the description of the global load balancer rule",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the load balancer",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the load balancer rule",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the global load balancer rule",
            "type": "string"
          },
          {
            "name": "gslbstickysessionmethodname",
            "description": "session persistence method used for the global load balancer",
            "type": "string"
          },
          {
            "name": "gslbservicetype",
            "description": "GSLB service type",
            "type": "string"
          },
          {
            "name": "loadbalancerrule",
            "description": "List of load balancer rules that are part of GSLB rule",
            "type": "list",
            "response": [
              {
                "name": "publicport",
                "description": "the public port",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the load balancer",
                "type": "string"
              },
              {
                "name": "cidrlist",
                "description": "the cidr list to forward traffic from",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with load balancer",
                "type": "list",
                "response": [
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain of the load balancer rule",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the id of the guest network the lb rule belongs to",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the state of the rule",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the load balancer",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account of the load balancer rule",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the load balancer rule ID",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the load balancer rule",
                "type": "string"
              },
              {
                "name": "publicipid",
                "description": "the public ip address id",
                "type": "string"
              },
              {
                "name": "algorithm",
                "description": "the load balancer algorithm (source, roundrobin, leastconn)",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the load balancer",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the load balancer",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the id of the zone the rule belongs to",
                "type": "string"
              },
              {
                "name": "publicip",
                "description": "the public ip address",
                "type": "string"
              },
              {
                "name": "privateport",
                "description": "the private port",
                "type": "string"
              }
            ]
          },
          {
            "name": "regionid",
            "description": "Region Id in which global load balancer is created",
            "type": "integer"
          },
          {
            "name": "projectid",
            "description": "the project id of the load balancer",
            "type": "string"
          },
          {
            "name": "id",
            "description": "global load balancer rule ID",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the load balancer rule",
            "type": "string"
          },
          {
            "name": "gslbdomainname",
            "description": "DNS domain name given for the global load balancer",
            "type": "string"
          },
          {
            "name": "gslblbmethod",
            "description": "Load balancing method used for the global load balancer",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the load balancer rule",
            "type": "string"
          }
        ]
      },
      {
        "name": "listLBStickinessPolicies",
        "description": "Lists LBStickiness policies.",
        "since": "3.0.0",
        "isasync": false,
        "related": "createLBStickinessPolicy",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "lbruleid",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the policy",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the Stickiness policy belongs to",
            "type": "string"
          },
          {
            "name": "stickinesspolicy",
            "description": "the list of stickinesspolicies",
            "type": "list",
            "response": [
              {
                "name": "id",
                "description": "the LB Stickiness policy ID",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the Stickiness policy",
                "type": "string"
              },
              {
                "name": "params",
                "description": "the params of the policy",
                "type": "map"
              },
              {
                "name": "methodname",
                "description": "the method name of the Stickiness policy",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the Stickiness policy",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the state of the policy",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the domain ID of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "lbruleid",
            "description": "the LB rule ID",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the Stickiness policy",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateZone",
        "description": "Updates a Zone.",
        "isasync": false,
        "related": "createZone,listZones",
        "params": [
          {
            "name": "name",
            "description": "the name of the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "dnssearchorder",
            "description": "the dns search order list",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "dns1",
            "description": "the first DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domain",
            "description": "Network domain name for the networks in the zone; empty string will update domain with NULL value",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "guestcidraddress",
            "description": "the guest CIDR address for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ip6dns1",
            "description": "the first DNS for IPv6 network in the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ispublic",
            "description": "updates a private zone to public if set, but not vice-versa",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "Allocation state of this cluster for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "internaldns2",
            "description": "the second internal DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "dns2",
            "description": "the second DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "internaldns1",
            "description": "the first internal DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the Zone",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createZone,listZones,updateZone"
          },
          {
            "name": "localstorageenabled",
            "description": "true if local storage offering enabled, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ip6dns2",
            "description": "the second DNS for IPv6 network in the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "details",
            "description": "the details for the Zone",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "dhcpprovider",
            "description": "the dhcp Provider for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "dns2",
            "description": "the second DNS for the Zone",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan range of the zone",
            "type": "string"
          },
          {
          },
          {
            "name": "domainname",
            "description": "the name of the containing domain, null for public zones",
            "type": "string"
          },
          {
            "name": "networktype",
            "description": "the network type of the zone; can be Basic or Advanced",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the Zone",
            "type": "string"
          },
          {
            "name": "localstorageenabled",
            "description": "true if local storage offering enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zonetoken",
            "description": "Zone Token",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Network domain name for the networks in the zone",
            "type": "string"
          },
          {
            "name": "id",
            "description": "Zone id",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the Zone",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the display text of the zone",
            "type": "string"
          },
          {
            "name": "securitygroupsenabled",
            "description": "true if security groups support is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the UUID of the containing domain, null for public zones",
            "type": "string"
          },
          {
            "name": "guestcidraddress",
            "description": "the guest CIDR address for the Zone",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Zone name",
            "type": "string"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Zone",
            "type": "list",
            "response": [
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              }
            ]
          },
          {
            "name": "dhcpprovider",
            "description": "the dhcp Provider for the Zone",
            "type": "string"
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the cluster",
            "type": "string"
          },
          {
            "name": "internaldns1",
            "description": "the first internal DNS for the Zone",
            "type": "string"
          },
          {
            "name": "description",
            "description": "Zone description",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the Zone",
            "type": "string"
          },
          {
            "name": "internaldns2",
            "description": "the second internal DNS for the Zone",
            "type": "string"
          }
        ]
      },
      {
        "name": "ldapRemove",
        "description": "Remove the LDAP context for this site.",
        "since": "3.0.1",
        "isasync": false,
        "related": "",
        "params": [

        ],
        "response": [
          {
            "name": "ssl",
            "description": "Check Use SSL if the external LDAP server is configured for LDAP over SSL",
            "type": "string"
          },
          {
            "name": "port",
            "description": "Specify the LDAP port if required, default is 389",
            "type": "string"
          },
          {
            "name": "searchbase",
            "description": "The search base defines the starting point for the search in the directory tree Example:  dc=cloud,dc=com",
            "type": "string"
          },
          {
            "name": "binddn",
            "description": "Specify the distinguished name of a user with the search permission on the directory",
            "type": "string"
          },
          {
            "name": "bindpass",
            "description": "DN password",
            "type": "string"
          },
          {
            "name": "queryfilter",
            "description": "You specify a query filter here, which narrows down the users, who can be part of this domain",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "Hostname or ip address of the ldap server eg: my.ldap.com",
            "type": "string"
          }
        ]
      },
      {
        "name": "listSecurityGroups",
        "description": "Lists security groups",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "list the security group by the id provided",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listSecurityGroups"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "securitygroupname",
            "description": "lists security groups by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "lists security groups by virtual machine id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name of the security group",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the security group",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the security group",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the security group",
            "type": "string"
          },
          {
            "name": "egressrule",
            "description": "the list of egress rules associated with the security group",
            "type": "set",
            "response": [
              {
                "name": "startport",
                "description": "the starting IP of the security group rule",
                "type": "integer"
              },
              {
                "name": "account",
                "description": "account owning the security group rule",
                "type": "string"
              },
              {
                "name": "endport",
                "description": "the ending IP of the security group rule ",
                "type": "integer"
              },
              {
                "name": "icmptype",
                "description": "the type of the ICMP message response",
                "type": "integer"
              },
              {
                "name": "icmpcode",
                "description": "the code for the ICMP message response",
                "type": "integer"
              },
              {
                "name": "cidr",
                "description": "the CIDR notation for the base IP address of the security group rule",
                "type": "string"
              },
              {
                "name": "securitygroupname",
                "description": "security group name",
                "type": "string"
              },
              {
                "name": "protocol",
                "description": "the protocol of the security group rule",
                "type": "string"
              },
              {
                "name": "ruleid",
                "description": "the id of the security group rule",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the security group",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "project",
            "description": "the project name of the group",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the security group",
            "type": "string"
          },
          {
            "name": "ingressrule",
            "description": "the list of ingress rules associated with the security group",
            "type": "set",
            "response": [
              {
                "name": "protocol",
                "description": "the protocol of the security group rule",
                "type": "string"
              },
              {
                "name": "icmpcode",
                "description": "the code for the ICMP message response",
                "type": "integer"
              },
              {
                "name": "ruleid",
                "description": "the id of the security group rule",
                "type": "string"
              },
              {
                "name": "securitygroupname",
                "description": "security group name",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "the CIDR notation for the base IP address of the security group rule",
                "type": "string"
              },
              {
                "name": "endport",
                "description": "the ending IP of the security group rule ",
                "type": "integer"
              },
              {
                "name": "startport",
                "description": "the starting IP of the security group rule",
                "type": "integer"
              },
              {
                "name": "icmptype",
                "description": "the type of the ICMP message response",
                "type": "integer"
              },
              {
                "name": "account",
                "description": "account owning the security group rule",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the group",
            "type": "string"
          }
        ]
      },
      {
        "name": "dedicateGuestVlanRange",
        "description": "Dedicates a guest vlan range to an account",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "physicalnetworkid",
            "description": "physical network ID of the vlan",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "projectid",
            "description": "project who will own the VLAN",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "vlanrange",
            "description": "guest vlan range to be dedicated",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "domain ID of the account owning a VLAN",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "account",
            "description": "account who will own the VLAN",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "guestvlanrange",
            "description": "the guest VLAN range",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network of the guest vlan range",
            "type": "long"
          },
          {
            "name": "project",
            "description": "the project name of the guest vlan range",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the guest VLAN range",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the zone of the guest vlan range",
            "type": "long"
          },
          {
            "name": "projectid",
            "description": "the project id of the guest vlan range",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the guest VLAN range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listFirewallRules",
        "description": "Lists all firewall rules for an IP address.",
        "isasync": false,
        "related": "listEgressFirewallRules,createFirewallRule",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateProject,createProject"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddressid",
            "description": "the id of IP address of the firwall services",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "associateIpAddress"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Lists rule with the specified ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "protocol",
            "description": "the protocol of the firewall rule",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "endport",
            "description": "the ending port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "startport",
            "description": "the starting port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the firewall rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of the firewall rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the firewall rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the firewall rule",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "updateVMAffinityGroup",
        "description": "Updates the affinity/anti-affinity group associations of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect.",
        "isasync": true,
        "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "affinitygroupids",
            "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listAffinityGroups"
          },
          {
            "name": "affinitygroupnames",
            "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "listAffinityGroups"
          },
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,updateVMAffinityGroup,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteVpnConnection",
        "description": "Delete site to site vpn connection",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "id of vpn connection",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listVpnConnections,resetVpnConnection"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listAffinityGroups",
        "description": "Lists affinity groups",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "lists affinity groups by type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "lists affinity groups by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list the affinity group by the id provided",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAffinityGroups"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "lists affinity groups by virtual machine id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name of the affinity group",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the affinity group",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the affinity group",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the affinity group",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the type of the affinity group",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the affinity group",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the affinity group",
            "type": "string"
          },
          {
            "name": "virtualmachineIds",
            "description": "virtual machine Ids associated with this affinity group ",
            "type": "list"
          }
        ]
      },
      {
        "name": "updateUser",
        "description": "Updates a user account",
        "isasync": false,
        "related": "listUsers,lockUser,disableUser",
        "params": [
          {
            "name": "usersecretkey",
            "description": "The secret key for the user. Must be specified with userApiKey",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "userapikey",
            "description": "The API key for the user. Must be specified with userSecretKey",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "email",
            "description": "email",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "timezone",
            "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "User uuid",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateUser,listUsers,lockUser,disableUser"
          },
          {
            "name": "password",
            "description": "Clear text password (default hashed to SHA256SALT). If you wish to use any other hasing algorithm, you would need to write a custom authentication adapter",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "firstname",
            "description": "first name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "lastname",
            "description": "last name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "username",
            "description": "Unique username",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          },
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteDiskOffering",
        "description": "Updates a disk offering.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "ID of the disk offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createDiskOffering"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "startSystemVm",
        "description": "Starts a system virtual machine.",
        "isasync": true,
        "related": "changeServiceForSystemVm,migrateSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm",
        "params": [
          {
            "name": "id",
            "description": "The ID of the system virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "changeServiceForSystemVm,startSystemVm,migrateSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm"
          }
        ],
        "response": [
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateProject",
        "description": "Updates a project",
        "since": "3.0.0",
        "isasync": true,
        "related": "createProject",
        "params": [
          {
            "name": "displaytext",
            "description": "display text of the project",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "id of the project to be modified",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateProject,createProject"
          },
          {
            "name": "account",
            "description": "new Admin account for the project",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the project can own",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this project",
            "type": "integer"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this project",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by project",
            "type": "long"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by project",
            "type": "long"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the project can own",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this project",
            "type": "long"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this project",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this project",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this project",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the project",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this project",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this project",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "list",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by project",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the project can own",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the project can own",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the project",
            "type": "string"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this project",
            "type": "long"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by project",
            "type": "long"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this project",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the project",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this project",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this project",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this project",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this project",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this project can acquire",
            "type": "string"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this project",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this project",
            "type": "integer"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this project",
            "type": "long"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this project to acquire",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the project",
            "type": "string"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this project to acquire",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this project",
            "type": "string"
          }
        ]
      },
      {
        "name": "archiveAlerts",
        "description": "Archive one or more alerts.",
        "isasync": false,
        "params": [
          {
            "name": "ids",
            "description": "the IDs of the alerts",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "enddate",
            "description": "end date range to archive alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "startdate",
            "description": "start date range to archive alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
            "type": "date",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "archive by alert type",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createZone",
        "description": "Creates a Zone.",
        "isasync": false,
        "related": "listZones",
        "params": [
          {
            "name": "internaldns2",
            "description": "the second internal DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networktype",
            "description": "network type of the zone, can be Basic or Advanced",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "internaldns1",
            "description": "the first internal DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain, null for public zones",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "localstorageenabled",
            "description": "true if local storage offering enabled, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ip6dns2",
            "description": "the second DNS for IPv6 network in the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "Allocation state of this Zone for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the Zone",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "guestcidraddress",
            "description": "the guest CIDR address for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domain",
            "description": "Network domain name for the networks in the zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "securitygroupenabled",
            "description": "true if network is security group enabled, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "dns1",
            "description": "the first DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "dns2",
            "description": "the second DNS for the Zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "ip6dns1",
            "description": "the first DNS for IPv6 network in the Zone",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "description",
            "description": "Zone description",
            "type": "string"
          },
          {
          },
          {
            "name": "dhcpprovider",
            "description": "the dhcp Provider for the Zone",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the Zone",
            "type": "string"
          },
          {
            "name": "domainname",
            "description": "the name of the containing domain, null for public zones",
            "type": "string"
          },
          {
            "name": "id",
            "description": "Zone id",
            "type": "string"
          },
          {
            "name": "zonetoken",
            "description": "Zone Token",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the UUID of the containing domain, null for public zones",
            "type": "string"
          },
          {
            "name": "localstorageenabled",
            "description": "true if local storage offering enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Zone",
            "type": "list",
            "response": [
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              }
            ]
          },
          {
            "name": "securitygroupsenabled",
            "description": "true if security groups support is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "internaldns2",
            "description": "the second internal DNS for the Zone",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the display text of the zone",
            "type": "string"
          },
          {
            "name": "networktype",
            "description": "the network type of the zone; can be Basic or Advanced",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Network domain name for the networks in the zone",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the Zone",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan range of the zone",
            "type": "string"
          },
          {
            "name": "guestcidraddress",
            "description": "the guest CIDR address for the Zone",
            "type": "string"
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the cluster",
            "type": "string"
          },
          {
            "name": "internaldns1",
            "description": "the first internal DNS for the Zone",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the Zone",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Zone name",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the Zone",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteNetwork",
        "description": "Deletes a network",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the network",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetwork"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listStaticRoutes",
        "description": "Lists all static routes",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "list static route by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listStaticRoutes"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "gatewayid",
            "description": "list static routes by gateway id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPrivateGateway"
          },
          {
            "name": "vpcid",
            "description": "list static routes by vpc id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createVPC,restartVPC,listVPCs"
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of static route",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with static route",
            "type": "list",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the static route",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the static route",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "static route CIDR",
            "type": "string"
          },
          {
            "name": "gatewayid",
            "description": "VPC gateway the route is created for",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the static route",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the static route",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the static route",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the static route belongs to",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the static route",
            "type": "string"
          }
        ]
      },
      {
        "name": "changeServiceForSystemVm",
        "description": "Changes the service offering for a system vm (console proxy or secondary storage). The system vm must be in a \"Stopped\" state for this command to take effect.",
        "isasync": false,
        "related": "migrateSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm",
        "params": [
          {
            "name": "id",
            "description": "The ID of the system vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "changeServiceForSystemVm,migrateSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm"
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering ID to apply to the system vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createServiceOffering,listServiceOfferings"
          }
        ],
        "response": [
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          }
        ]
      },
      {
        "name": "listNics",
        "description": "list the vm nics  IP to NIC",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "nicid",
            "description": "the ID of the nic to to list IPs",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listNics"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "broadcasturi",
            "description": "the broadcast uri of the nic",
            "type": "string"
          },
          {
            "name": "ip6address",
            "description": "the IPv6 address of network",
            "type": "string"
          },
          {
            "name": "macaddress",
            "description": "true if nic is default, false otherwise",
            "type": "string"
          },
          {
            "name": "secondaryip",
            "description": "the Secondary ipv4 addr of nic",
            "type": "list"
          },
          {
            "name": "gateway",
            "description": "the gateway of the nic",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the nic",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the type of the nic",
            "type": "string"
          },
          {
            "name": "networkname",
            "description": "the name of the corresponding network",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if nic is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isolationuri",
            "description": "the isolation uri of the nic",
            "type": "string"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the nic",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the ID of the corresponding network",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the ip address of the nic",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the traffic type of the nic",
            "type": "string"
          }
        ]
      },
      {
        "name": "createStoragePool",
        "description": "Creates a storage pool.",
        "isasync": false,
        "related": "listStoragePools,findStoragePoolsForMigration",
        "params": [
          {
            "name": "podid",
            "description": "the Pod ID for the storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createPod,updatePod"
          },
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "details",
            "description": "the details for the storage pool",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the storage pool",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listZones"
          },
          {
            "name": "hypervisor",
            "description": "hypervisor type of the hosts in zone that will be attached to this storage pool. KVM, VMware supported as of now.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "clusterid",
            "description": "the cluster ID for the storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "managed",
            "description": "whether the storage should be managed by CloudStack",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "scope",
            "description": "the scope of the storage: cluster or zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "capacitybytes",
            "description": "bytes CloudStack can provision from this storage pool",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name for the storage pool",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "url",
            "description": "the URL of the storage pool",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "provider",
            "description": "the storage provider name",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "created",
            "description": "the date and time the storage pool was created",
            "type": "date"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the storage pool",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the storage pool",
            "type": "string"
          },
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the storage pool",
            "type": "storagepoolstatus"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the storage pool",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type of the storage pool",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the storage pool",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the storage pool",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the storage pool",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeused",
            "description": "the host's currently used disk size",
            "type": "long"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the storage pool type",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "suitableformigration",
            "description": "true if this pool is suitable to migrate a volume, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "removeRegion",
        "description": "Removes specified region",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "ID of the region to delete",
            "type": "integer",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listBaremetalDhcp",
        "description": "list baremetal dhcp servers",
        "isasync": false,
        "related": "addBaremetalDhcp",
        "params": [
          {
            "name": "id",
            "description": "DHCP server device ID",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "dhcpservertype",
            "description": "Type of DHCP device",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "Pod ID where pxe server is in",
            "type": "long",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "provider",
            "description": "name of the provider",
            "type": "string"
          },
          {
            "name": "id",
            "description": "device id of ",
            "type": "string"
          },
          {
            "name": "dhcpservertype",
            "description": "name of the provider",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network to which this external dhcp device belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "addTrafficType",
        "description": "Adds traffic type to a physical network",
        "since": "3.0.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "traffictype",
            "description": "the trafficType to be added to the physical network",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "vlan",
            "description": "The VLAN id to be used for Management traffic by VMware host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "xennetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vmwarenetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "kvmnetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "traffictype",
            "description": "the trafficType to be added to the physical network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "xennetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
            "type": "string"
          },
          {
            "name": "vmwarenetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
            "type": "string"
          },
          {
            "name": "kvmnetworklabel",
            "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "id of the network provider",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateTemplate",
        "description": "Updates attributes of a template.",
        "isasync": false,
        "related": "registerIso,updateIso,copyIso,listIsos",
        "params": [
          {
            "name": "passwordenabled",
            "description": "true if the image supports the password reset feature; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the image file",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the image file",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateTemplate,registerIso,updateIso,copyIso,listIsos"
          },
          {
            "name": "bootable",
            "description": "true if image is bootable, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the image",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "format",
            "description": "the format for the image",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "sortkey",
            "description": "sort key of the template, integer",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type that best represents the OS of this image.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listOsTypes"
          },
          {
            "name": "isrouting",
            "description": "true if the template type is routing i.e., if template is used to deploy router",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "disableUser",
        "description": "Disables a user account",
        "isasync": true,
        "related": "listUsers,lockUser",
        "params": [
          {
            "name": "id",
            "description": "Disables user by user ID.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listUsers,lockUser,disableUser"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          },
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          }
        ]
      },
      {
        "name": "listBaremetalPxePingServer",
        "description": "list baremetal ping pxe server",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Ping pxe server device ID",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "Pod ID where pxe server is in",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "pingdir",
            "description": "Root directory on PING storage server",
            "type": "string"
          },
          {
            "name": "pingstorageserverip",
            "description": "PING storage server ip",
            "type": "string"
          },
          {
            "name": "tftpdir",
            "description": "Tftp root directory of PXE server",
            "type": "string"
          }
        ]
      },
      {
        "name": "configureVirtualRouterElement",
        "description": "Configures a virtual router element.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "enabled",
            "description": "Enabled/Disabled the service provider",
            "type": "boolean",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "the ID of the virtual router provider",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "configureVirtualRouterElement"
          }
        ],
        "response": [
          {
            "name": "account",
            "description": "the account associated with the provider",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "nspid",
            "description": "the physical network service provider id of the provider",
            "type": "string"
          },
          {
            "name": "enabled",
            "description": "Enabled/Disabled the service provider",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the domain associated with the provider",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the provider",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteProjectInvitation",
        "description": "Accepts or declines project invitation",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "id of the invitation",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createSnapshotPolicy",
        "description": "Creates a snapshot policy for the account.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "maxsnaps",
            "description": "maximum number of snapshots to retain",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "volumeid",
            "description": "the ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "uploadVolume,createVolume"
          },
          {
            "name": "timezone",
            "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "intervaltype",
            "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "schedule",
            "description": "time the snapshot is scheduled to be taken. Format is:* if HOURLY, MM* if DAILY, MM:HH* if WEEKLY, MM:HH:DD (1-7)* if MONTHLY, MM:HH:DD (1-28)",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "intervaltype",
            "description": "the interval type of the snapshot policy",
            "type": "short"
          },
          {
            "name": "maxsnaps",
            "description": "maximum number of snapshots retained",
            "type": "int"
          },
          {
            "name": "timezone",
            "description": "the time zone of the snapshot policy",
            "type": "string"
          },
          {
            "name": "schedule",
            "description": "time the snapshot is scheduled to be taken.",
            "type": "string"
          },
          {
            "name": "volumeid",
            "description": "the ID of the disk volume",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the snapshot policy",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateInstanceGroup",
        "description": "Updates a vm group",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "new instance group name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Instance group ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateInstanceGroup"
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the group",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the instance group",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the instance group",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the instance group",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the group",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the instance group",
            "type": "string"
          },
          {
            "name": "created",
            "description": "time and date the instance group was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          }
        ]
      },
      {
        "name": "migrateSystemVm",
        "description": "Attempts Migration of a system virtual machine to the host specified.",
        "isasync": true,
        "related": "listSystemVms,rebootSystemVm,scaleSystemVm",
        "params": [
          {
            "name": "hostid",
            "description": "destination Host ID to migrate VM to",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts"
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "migrateSystemVm,listSystemVms,rebootSystemVm,scaleSystemVm"
          }
        ],
        "response": [
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          }
        ]
      },
      {
        "name": "createServiceOffering",
        "description": "Creates a service offering.",
        "isasync": false,
        "related": "listServiceOfferings",
        "params": [
          {
            "name": "displaytext",
            "description": "the display text of the service offering",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "iopswriterate",
            "description": "io requests write rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "limitcpuuse",
            "description": "restrict the CPU usage to committed service offering",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the service offering",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "memory",
            "description": "the total memory of the service offering in MB",
            "type": "long",
            "length": 255,
            "required": true
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type. Possible types are \"domainrouter\", \"consoleproxy\" and \"secondarystoragevm\".",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain, null for public offerings",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "hosttags",
            "description": "the host tag for this service offering.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "bytesreadrate",
            "description": "bytes read rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "byteswriterate",
            "description": "bytes write rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "iopsreadrate",
            "description": "io requests read rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "issystem",
            "description": "is this a system vm offering",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "offerha",
            "description": "the HA for the service offering",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "storagetype",
            "description": "the storage type of the service offering. Values are local and shared.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "serviceofferingdetails",
            "description": "details for planner, used to store specific parameters",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "the tags for this service offering.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the service offering",
            "type": "long",
            "length": 255,
            "required": true
          },
          {
            "name": "isvolatile",
            "description": "true if the virtual machine needs to be volatile so that on every reboot of VM, original root disk is dettached then destroyed and a fresh root disk is created and attached to VM",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "deploymentplanner",
            "description": "The deployment planner heuristics used to deploy a VM of this offering. If null, value of global config vm.deployment.planner is used",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed. Supported only for non-System offering and system offerings having \"domainrouter\" systemvmtype",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the service offering in MHz.",
            "type": "long",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "an alternate display text of the service offering.",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the service offering",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of CPU",
            "type": "int"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the service offering",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the service offering",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the clock rate CPU speed in Mhz",
            "type": "int"
          },
          {
            "name": "defaultuse",
            "description": "is this a  default system vm offering",
            "type": "boolean"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the service offering",
            "type": "long"
          },
          {
            "name": "hosttags",
            "description": "the host tag for the service offering",
            "type": "string"
          },
          {
            "name": "serviceofferingdetails",
            "description": "additional key/value details tied with this service offering",
            "type": "map"
          },
          {
            "name": "tags",
            "description": "the tags for the service offering",
            "type": "string"
          },
          {
            "name": "isvolatile",
            "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
            "type": "boolean"
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed.",
            "type": "integer"
          },
          {
            "name": "issystem",
            "description": "is this a system vm offering",
            "type": "boolean"
          },
          {
            "name": "deploymentplanner",
            "description": "deployment strategy used to deploy VM.",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "is this a the systemvm type for system vm offering",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory in MB",
            "type": "int"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the service offering",
            "type": "long"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the service offering",
            "type": "long"
          },
          {
            "name": "storagetype",
            "description": "the storage type for this service offering",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the service offering",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Domain name for the offering",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this service offering was created",
            "type": "date"
          },
          {
            "name": "offerha",
            "description": "the ha support in the service offering",
            "type": "boolean"
          },
          {
            "name": "limitcpuuse",
            "description": "restrict the CPU usage to committed service offering",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "removeNicFromVirtualMachine",
        "description": "Removes VM from specified network by deleting a NIC",
        "isasync": true,
        "related": "revertToVMSnapshot,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "Virtual Machine ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,removeNicFromVirtualMachine,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "nicid",
            "description": "NIC ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              }
            ]
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "revokeSecurityGroupIngress",
        "description": "Deletes a particular ingress rule from this security group",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "The ID of the ingress rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateDefaultNicForVirtualMachine",
        "description": "Changes the default NIC on a VM",
        "isasync": true,
        "related": "revertToVMSnapshot,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "Virtual Machine ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,updateDefaultNicForVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "nicid",
            "description": "NIC ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              }
            ]
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "disableStaticNat",
        "description": "Disables static rule for given ip address",
        "isasync": true,
        "params": [
          {
            "name": "ipaddressid",
            "description": "the public IP address id for which static nat feature is being disableed",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createNetworkACL",
        "description": "Creates a ACL rule in the given network (the network has to belong to VPC)",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "The network of the vm the ACL will be created for",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "protocol",
            "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "startport",
            "description": "the starting port of ACL",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "action",
            "description": "scl entry action, allow or deny",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "number",
            "description": "The network of the vm the ACL will be created for",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to allow traffic from/to",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "endport",
            "description": "the ending port of ACL",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the ACL,can be Ingress or Egress, defaulted to Ingress if not specified",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "aclid",
            "description": "The network of the vm the ACL will be created for",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "protocol",
            "description": "the protocol of the ACL",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "the ID of the ACL this item belongs to",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the ACL",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the ACL Item",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "endport",
            "description": "the ending port of ACL's port range",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the network ACLs",
            "type": "list",
            "response": [
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "action",
            "description": "Action of ACL Item. Allow/Deny",
            "type": "string"
          },
          {
            "name": "startport",
            "description": "the starting port of ACL's port range",
            "type": "string"
          },
          {
            "name": "number",
            "description": "Number of the ACL Item",
            "type": "integer"
          }
        ]
      },
      {
        "name": "createVPC",
        "description": "Creates a VPC",
        "isasync": true,
        "related": "restartVPC,listVPCs",
        "params": [
          {
            "name": "domainid",
            "description": "the domain ID associated with the VPC. If used with the account parameter returns the VPC associated with the account for the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "account",
            "description": "the account associated with the VPC. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "cidr",
            "description": "the cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "name",
            "description": "the name of the VPC",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "networkdomain",
            "description": "VPC network domain. All networks inside the VPC will belong to this domain",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the ID of the availability zone",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listZones"
          },
          {
            "name": "displaytext",
            "description": "the display text of the VPC",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "projectid",
            "description": "create VPC for the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "vpcofferingid",
            "description": "the ID of the VPC offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listVPCOfferings"
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "zone id of the vpc",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain of the VPC",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner of the VPC",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the VPC",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this VPC was created",
            "type": "date"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              }
            ]
          },
          {
            "name": "zonename",
            "description": "the name of the zone the VPC belongs to",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "the cidr the VPC",
            "type": "string"
          },
          {
            "name": "network",
            "description": "the list of networks belongign to the VPC",
            "type": "list",
            "response": [
              {
                "name": "subdomainaccess",
                "description": "true if users from subdomains can access the domain level network",
                "type": "boolean"
              },
              {
                "name": "isdefault",
                "description": "true if network is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the network",
                "type": "string"
              },
              {
                "name": "networkdomain",
                "description": "the network domain",
                "type": "string"
              },
              {
                "name": "restartrequired",
                "description": "true network requires restart",
                "type": "boolean"
              },
              {
                "name": "gateway",
                "description": "the network's gateway",
                "type": "string"
              },
              {
                "name": "canusefordeploy",
                "description": "list networks available for vm deployment",
                "type": "boolean"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network id",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the id of the network",
                "type": "string"
              },
              {
                "name": "aclid",
                "description": "ACL Id associated with the VPC network",
                "type": "string"
              },
              {
                "name": "issystem",
                "description": "true if network is system, false otherwise",
                "type": "boolean"
              },
              {
                "name": "broadcasturi",
                "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "networkofferingid",
                "description": "network offering id the network is created from",
                "type": "string"
              },
              {
                "name": "networkcidr",
                "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
                "type": "string"
              },
              {
                "name": "networkofferingavailability",
                "description": "availability of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the name of the zone the network belongs to",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "service",
                "description": "the list of services",
                "type": "list",
                "response": [
                  {
                    "name": "capability",
                    "description": "the list of capabilities",
                    "type": "list",
                    "response": [
                      {
                        "name": "canchooseservicecapability",
                        "description": "can this service capability value can be choosable while creatine network offerings",
                        "type": "boolean"
                      },
                      {
                        "name": "name",
                        "description": "the capability name",
                        "type": "string"
                      },
                      {
                        "name": "value",
                        "description": "the capability value",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "provider",
                    "description": "the service provider name",
                    "type": "list",
                    "response": [
                      {
                        "name": "physicalnetworkid",
                        "description": "the physical network this belongs to",
                        "type": "string"
                      },
                      {
                        "name": "id",
                        "description": "uuid of the network provider",
                        "type": "string"
                      },
                      {
                        "name": "destinationphysicalnetworkid",
                        "description": "the destination physical network",
                        "type": "string"
                      },
                      {
                        "name": "name",
                        "description": "the provider name",
                        "type": "string"
                      },
                      {
                        "name": "state",
                        "description": "state of the network provider",
                        "type": "string"
                      },
                      {
                        "name": "canenableindividualservice",
                        "description": "true if individual services can be enabled/disabled",
                        "type": "boolean"
                      },
                      {
                        "name": "servicelist",
                        "description": "services for this provider",
                        "type": "list"
                      }
                    ]
                  },
                  {
                    "name": "name",
                    "description": "the service name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the network owner",
                "type": "string"
              },
              {
                "name": "dns1",
                "description": "the first DNS for the network",
                "type": "string"
              },
              {
                "name": "vlan",
                "description": "The vlan of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the network",
                "type": "string"
              },
              {
                "name": "networkofferingname",
                "description": "name of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "related",
                "description": "related to what other network configuration",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with network",
                "type": "list",
                "response": [
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the address",
                "type": "string"
              },
              {
                "name": "displaynetwork",
                "description": "an optional field, whether to the display the network to the end user or not.",
                "type": "boolean"
              },
              {
                "name": "domainid",
                "description": "the domain id of the network owner",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "zone id of the network",
                "type": "string"
              },
              {
                "name": "specifyipranges",
                "description": "true if network supports specifying ip ranges, false otherwise",
                "type": "boolean"
              },
              {
                "name": "broadcastdomaintype",
                "description": "Broadcast domain type of the network",
                "type": "string"
              },
              {
                "name": "reservediprange",
                "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the network",
                "type": "string"
              },
              {
                "name": "state",
                "description": "state of the network",
                "type": "string"
              },
              {
                "name": "displaytext",
                "description": "the displaytext of the network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the network's netmask",
                "type": "string"
              },
              {
                "name": "networkofferingdisplaytext",
                "description": "display text of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the owner of the network",
                "type": "string"
              },
              {
                "name": "acltype",
                "description": "acl type - access type to the network",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
                "type": "string"
              },
              {
                "name": "dns2",
                "description": "the second DNS for the network",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the ipaddress",
                "type": "string"
              },
              {
                "name": "ispersistent",
                "description": "list networks that are persistent",
                "type": "boolean"
              },
              {
                "name": "vpcid",
                "description": "VPC the network belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the VPC",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the project",
            "type": "list",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the VPC",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the VPC.",
            "type": "string"
          },
          {
            "name": "restartrequired",
            "description": "true VPC requires restart",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "state of the VPC. Can be Inactive/Enabled",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the VPC",
            "type": "string"
          },
          {
            "name": "vpcofferingid",
            "description": "vpc offering id the VPC is created from",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the VPC owner",
            "type": "string"
          }
        ]
      },
      {
        "name": "createPod",
        "description": "Creates a new Pod.",
        "isasync": false,
        "related": "updatePod",
        "params": [
          {
            "name": "allocationstate",
            "description": "Allocation state of this Pod for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "netmask",
            "description": "the netmask for the Pod",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "startip",
            "description": "the starting IP address for the Pod",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "name",
            "description": "the name of the Pod",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "the Zone ID in which the Pod will be created",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listZones"
          },
          {
            "name": "endip",
            "description": "the ending IP address for the Pod",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "gateway",
            "description": "the gateway for the Pod",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "allocationstate",
            "description": "the allocation state of the Pod",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the Pod",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the Pod",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the Pod",
            "type": "string"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Pod",
            "type": "list",
            "response": [
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              }
            ]
          },
          {
            "name": "gateway",
            "description": "the gateway of the Pod",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the Pod",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the ending IP for the Pod",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the starting IP for the Pod",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the Pod",
            "type": "string"
          }
        ]
      },
      {
        "name": "listOsTypes",
        "description": "Lists all supported OS types for this cloud.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "oscategoryid",
            "description": "list by Os Category id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "description",
            "description": "list os by description",
            "type": "string",
            "length": 255,
            "required": false,
            "since": "3.0.1"
          },
          {
            "name": "id",
            "description": "list by Os type Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listOsTypes"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the OS type",
            "type": "string"
          },
          {
            "name": "oscategoryid",
            "description": "the ID of the OS category",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the name/description of the OS type",
            "type": "string"
          }
        ]
      },
      {
        "name": "addBaremetalPxeKickStartServer",
        "description": "add a baremetal pxe server",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "podid",
            "description": "Pod Id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "url",
            "description": "URL of the external pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "password",
            "description": "Credentials to reach external pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "tftpdir",
            "description": "Tftp root directory of PXE server",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "pxeservertype",
            "description": "type of pxe device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "username",
            "description": "Credentials to reach external pxe device",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "tftpdir",
            "description": "Tftp root directory of PXE server",
            "type": "string"
          }
        ]
      },
      {
        "name": "addResourceDetail",
        "description": "Adds detail for the Resource.",
        "isasync": true,
        "params": [
          {
            "name": "resourceid",
            "description": "resource id to create the details for",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "resourcetype",
            "description": "type of the resource",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "details",
            "description": "Map of (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "registerIso",
        "description": "Registers an existing ISO into the CloudStack Cloud.",
        "isasync": false,
        "related": "updateIso,copyIso,listIsos",
        "params": [
          {
            "name": "isextractable",
            "description": "true if the iso or its derivatives are extractable; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS Type that best represents the OS of this ISO. If the iso is bootable this parameter needs to be passed",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "domainid",
            "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "imagestoreuuid",
            "description": "Image store uuid",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isfeatured",
            "description": "true if you want this ISO to be featured",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "url",
            "description": "the URL to where the ISO is currently being hosted",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "account",
            "description": "an optional account name. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the ISO",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if iso contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ispublic",
            "description": "true if you want to register the ISO to be publicly available to all users, false otherwise.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the ISO. This is usually used for display purposes.",
            "type": "string",
            "length": 4096,
            "required": true
          },
          {
            "name": "bootable",
            "description": "true if this ISO is bootable. If not passed explicitly its assumed to be true",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "checksum",
            "description": "the MD5 checksum value of this ISO",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "Register iso for the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone you wish to register the ISO to.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listZones"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          }
        ]
      },
      {
        "name": "disassociateIpAddress",
        "description": "Disassociates an ip address from the account.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the id of the public ip address to disassociate",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listZones",
        "description": "Lists zones",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "showcapacities",
            "description": "flag to display the capacity of the zones",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "available",
            "description": "true if you want to retrieve all available Zones. False if you only want to return the Zones from which you have at least one VM. Default is false.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the zone",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listZones"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networktype",
            "description": "the network type of the zone that the virtual machine belongs to",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "internaldns1",
            "description": "the first internal DNS for the Zone",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the display text of the zone",
            "type": "string"
          },
          {
            "name": "description",
            "description": "Zone description",
            "type": "string"
          },
          {
          },
          {
            "name": "allocationstate",
            "description": "the allocation state of the cluster",
            "type": "string"
          },
          {
            "name": "zonetoken",
            "description": "Zone Token",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the Zone",
            "type": "string"
          },
          {
            "name": "networktype",
            "description": "the network type of the zone; can be Basic or Advanced",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the UUID of the containing domain, null for public zones",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Zone name",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the Zone",
            "type": "string"
          },
          {
            "name": "internaldns2",
            "description": "the second internal DNS for the Zone",
            "type": "string"
          },
          {
            "name": "guestcidraddress",
            "description": "the guest CIDR address for the Zone",
            "type": "string"
          },
          {
            "name": "dhcpprovider",
            "description": "the dhcp Provider for the Zone",
            "type": "string"
          },
          {
            "name": "securitygroupsenabled",
            "description": "true if security groups support is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainname",
            "description": "the name of the containing domain, null for public zones",
            "type": "string"
          },
          {
            "name": "localstorageenabled",
            "description": "true if local storage offering enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Zone",
            "type": "list",
            "response": [
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              }
            ]
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the Zone",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "Network domain name for the networks in the zone",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan range of the zone",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the Zone",
            "type": "string"
          },
          {
            "name": "id",
            "description": "Zone id",
            "type": "string"
          }
        ]
      },
      {
        "name": "resetPasswordForVirtualMachine",
        "description": "Resets the password for virtual machine. The virtual machine must be in a \"Stopped\" state and the template must already support this feature for this command to take effect. [async]",
        "isasync": true,
        "related": "revertToVMSnapshot,migrateVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,resetPasswordForVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          }
        ]
      },
      {
        "name": "createVolume",
        "description": "Creates a disk volume from a disk offering. This disk volume must still be attached to a virtual machine to make use of it.",
        "isasync": true,
        "related": "uploadVolume",
        "params": [
          {
            "name": "name",
            "description": "the name of the disk volume",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "maxiops",
            "description": "max iops",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the disk offering. If used with the account parameter returns the disk volume associated with the account for the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "size",
            "description": "Arbitrary volume size",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "snapshotid",
            "description": "the snapshot ID for the disk volume. Either diskOfferingId or snapshotId must be passed in.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createSnapshot"
          },
          {
            "name": "miniops",
            "description": "min iops",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "diskofferingid",
            "description": "the ID of the disk offering. Either diskOfferingId or snapshotId must be passed in.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createDiskOffering"
          },
          {
            "name": "displayvolume",
            "description": "an optional field, whether to display the volume to the end user or not.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "the project associated with the volume. Mutually exclusive with account parameter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availability zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          }
        ]
      },
      {
        "name": "assignToLoadBalancerRule",
        "description": "Assigns virtual machine or a list of virtual machines to a load balancer rule.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          },
          {
            "name": "virtualmachineids",
            "description": "the list of IDs of the virtual machine that are being assigned to the load balancer rule(i.e. virtualMachineIds=1,2,3)",
            "type": "list",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "startRouter",
        "description": "Starts a router.",
        "isasync": true,
        "related": "listInternalLoadBalancerVMs",
        "params": [
          {
            "name": "id",
            "description": "the ID of the router",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "startRouter,listInternalLoadBalancerVMs"
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          }
        ]
      },
      {
        "name": "listUcsBlades",
        "description": "List ucs blades",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "ucsmanagerid",
            "description": "ucs manager id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "addUcsManager"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "bladedn",
            "description": "ucs blade dn",
            "type": "string"
          },
          {
            "name": "ucsmanagerid",
            "description": "ucs manager id",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ucs blade id",
            "type": "string"
          },
          {
            "name": "profiledn",
            "description": "associated ucs profile dn",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "cloudstack host id this blade associates to",
            "type": "string"
          }
        ]
      },
      {
        "name": "extractIso",
        "description": "Extracts an ISO",
        "isasync": true,
        "related": "extractTemplate",
        "params": [
          {
            "name": "zoneid",
            "description": "the ID of the zone where the ISO is originally located",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "id",
            "description": "the ID of the ISO file",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateIso,copyIso,listIsos"
          },
          {
            "name": "url",
            "description": "the url to which the ISO would be extracted",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "mode",
            "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "uploadpercentage",
            "description": "the percentage of the entity uploaded to the specified location",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the id of extracted object",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the extraction",
            "type": "string"
          },
          {
            "name": "extractId",
            "description": "the upload id of extracted object",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the extracted object",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "zone name the object was extracted from",
            "type": "string"
          },
          {
            "name": "extractMode",
            "description": "the mode of extraction - upload or download",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone ID the object was extracted from",
            "type": "string"
          },
          {
            "name": "url",
            "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
            "type": "string"
          },
          {
            "name": "resultstring",
            "description": "",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the time and date the object was created",
            "type": "date"
          },
          {
            "name": "accountid",
            "description": "the account id to which the extracted object belongs",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "type of the storage",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the extracted object",
            "type": "string"
          },
          {
          }
        ]
      },
      {
        "name": "removeResourceDetail",
        "description": "Removes detail for the Resource.",
        "isasync": true,
        "params": [
          {
            "name": "resourcetype",
            "description": "Delete detail by resource type",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "key",
            "description": "Delete details matching key/value pairs",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "resourceid",
            "description": "Delete details for resource id",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "changeServiceForVirtualMachine",
        "description": "Changes the service offering for a virtual machine. The virtual machine must be in a \"Stopped\" state for this command to take effect.",
        "isasync": false,
        "related": "revertToVMSnapshot,migrateVirtualMachine,startVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,startVirtualMachine,changeServiceForVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering ID to apply to the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listServiceOfferings"
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteRemoteAccessVpn",
        "description": "Destroys a l2tp/ipsec remote access vpn",
        "isasync": true,
        "params": [
          {
            "name": "publicipid",
            "description": "public ip address id of the vpn server",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteImageStore",
        "description": "Deletes an image store .",
        "since": "4.2.0",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the image store ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVlanIpRange",
        "description": "Creates a VLAN IP range.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the id of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listVlanIpRanges,dedicatePublicIpRange"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "resetVpnConnection",
        "description": "Reset site to site vpn connection",
        "isasync": true,
        "related": "listVpnConnections",
        "params": [
          {
            "name": "domainid",
            "description": "an optional domainId for connection. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "id",
            "description": "id of vpn connection",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listVpnConnections,resetVpnConnection"
          },
          {
            "name": "account",
            "description": "an optional account for connection. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "s2svpngatewayid",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "publicip",
            "description": "the public IP address",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec Preshared-Key of the customer gateway",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          },
          {
            "name": "s2scustomergatewayid",
            "description": "the customer gateway ID",
            "type": "string"
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of ESP SA of customer gateway",
            "type": "long"
          },
          {
            "name": "state",
            "description": "State of vpn connection",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string"
          },
          {
            "name": "dpd",
            "description": "if DPD is enabled for customer gateway",
            "type": "boolean"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of IKE SA of customer gateway",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "esppolicy",
            "description": "ESP policy of the customer gateway",
            "type": "string"
          },
          {
            "name": "ikepolicy",
            "description": "IKE policy of the customer gateway",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string"
          }
        ]
      },
      {
        "name": "listStoragePools",
        "description": "Lists storage pools.",
        "isasync": false,
        "related": "findStoragePoolsForMigration",
        "params": [
          {
            "name": "zoneid",
            "description": "the Zone ID for the storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddress",
            "description": "the IP address for the storage pool",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the Pod ID for the storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listStoragePools,findStoragePoolsForMigration"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "clusterid",
            "description": "list storage pools belongig to the specific cluster",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "scope",
            "description": "the ID of the storage pool",
            "type": "string",
            "length": 255,
            "required": false,
            "related": "listStoragePools,findStoragePoolsForMigration"
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the storage pool",
            "type": "storagepoolstatus"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "suitableformigration",
            "description": "true if this pool is suitable to migrate a volume, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the storage pool",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the storage pool",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the storage pool",
            "type": "long"
          },
          {
            "name": "podname",
            "description": "the Pod name of the storage pool",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the storage pool",
            "type": "string"
          },
          {
            "name": "type",
            "description": "the storage pool type",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeused",
            "description": "the host's currently used disk size",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the storage pool was created",
            "type": "date"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the storage pool",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type of the storage pool",
            "type": "string"
          }
        ]
      },
      {
        "name": "startVirtualMachine",
        "description": "Starts a virtual machine.",
        "isasync": true,
        "related": "revertToVMSnapshot,migrateVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "hostid",
            "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
            "type": "uuid",
            "length": 255,
            "required": false,
            "since": "3.0.1",
            "related": "listHosts"
          },
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,startVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              }
            ]
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "createRemoteAccessVpn",
        "description": "Creates a l2tp/ipsec remote access vpn",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "account",
            "description": "an optional account for the VPN. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "publicipid",
            "description": "public ip address id of the vpn server",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "associateIpAddress"
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the VPN. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "openfirewall",
            "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. Has value true by default",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "iprange",
            "description": "the range of ip addresses to allocate to vpn clients. The first ip in the range will be taken by the vpn server",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "the public ip address of the vpn server",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "presharedkey",
            "description": "the ipsec preshared key",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the remote access vpn",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public ip address of the vpn server",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "iprange",
            "description": "the range of ips to allocate to the clients",
            "type": "string"
          }
        ]
      },
      {
        "name": "extractTemplate",
        "description": "Extracts a template",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "zoneid",
            "description": "the ID of the zone where the ISO is originally located",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "mode",
            "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "the ID of the template",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateIso,copyIso,listIsos"
          },
          {
            "name": "url",
            "description": "the url to which the ISO would be extracted",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "status",
            "description": "the status of the extraction",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of extracted object",
            "type": "string"
          },
          {
            "name": "extractMode",
            "description": "the mode of extraction - upload or download",
            "type": "string"
          },
          {
          },
          {
            "name": "uploadpercentage",
            "description": "the percentage of the entity uploaded to the specified location",
            "type": "integer"
          },
          {
            "name": "url",
            "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the time and date the object was created",
            "type": "date"
          },
          {
            "name": "extractId",
            "description": "the upload id of extracted object",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone ID the object was extracted from",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the extracted object",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "type of the storage",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "zone name the object was extracted from",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account id to which the extracted object belongs",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the extracted object",
            "type": "string"
          },
          {
            "name": "resultstring",
            "description": "",
            "type": "string"
          }
        ]
      },
      {
        "name": "listSystemVms",
        "description": "List system virtual machines.",
        "isasync": false,
        "related": "rebootSystemVm,scaleSystemVm",
        "params": [
          {
            "name": "hostid",
            "description": "the host ID of the system VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type. Possible types are \"consoleproxy\" and \"secondarystoragevm\".",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the system VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listSystemVms,rebootSystemVm,scaleSystemVm"
          },
          {
            "name": "storageid",
            "description": "the storage ID where vm's volumes belong to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "since": "3.0.1",
            "related": "findStoragePoolsForMigration"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the Pod ID of the system VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          }
        ]
      },
      {
        "name": "detachIso",
        "description": "Detaches any ISO file (if any) currently attached to a virtual machine.",
        "isasync": true,
        "related": "revertToVMSnapshot,migrateVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,detachIso,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              }
            ]
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteServiceOffering",
        "description": "Deletes a service offering.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the ID of the service offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listServiceOfferings"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteAccount",
        "description": "Deletes a account, and all users associated with this account",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "Account id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "disableAccount,listAccounts,markDefaultZoneForAccount"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "listNetworkDevice",
        "description": "List network devices",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "networkdevicetype",
            "description": "Network device type, now supports ExternalDhcp, PxeServer, NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer, F5BigIpLoadBalancer, JuniperSRXFirewall",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkdeviceparameterlist",
            "description": "parameters for network device",
            "type": "map",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the network device",
            "type": "string"
          }
        ]
      },
      {
        "name": "associateIpAddress",
        "description": "Acquires and associates a public IP to an account.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "projectid",
            "description": "Deploy vm for the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "vpcid",
            "description": "the VPC you want the ip address to be associated with",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "restartVPC,listVPCs"
          },
          {
            "name": "account",
            "description": "the account to associate with this IP address",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the ID of the availability zone you want to acquire an public IP address from",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to associate with this IP address",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          },
          {
            "name": "isportable",
            "description": "should be set to true if public IP is required to be transferable across zones, if not specified defaults to false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "regionid",
            "description": "region ID from where portable ip is to be associated.",
            "type": "integer",
            "length": 255,
            "required": false,
            "related": "addRegion"
          },
          {
            "name": "networkid",
            "description": "The network this ip address should be associated to.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          }
        ],
        "response": [
          {
            "name": "vpcid",
            "description": "VPC the ip belongs to",
            "type": "string"
          },
          {
            "name": "vlanid",
            "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "associatednetworkid",
            "description": "the ID of the Network associated with the IP address",
            "type": "string"
          },
          {
            "name": "issystem",
            "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
            "type": "boolean"
          },
          {
            "name": "vlanname",
            "description": "the VLAN associated with the IP address",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with ip address",
            "type": "list",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "account",
            "description": "the account the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the IP address",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain ID the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "associatednetworkname",
            "description": "the name of the Network associated with the IP address",
            "type": "string"
          },
          {
            "name": "issourcenat",
            "description": "true if the IP address is a source nat address, false otherwise",
            "type": "boolean"
          },
          {
            "name": "networkid",
            "description": "the ID of the Network where ip belongs to",
            "type": "string"
          },
          {
            "name": "allocated",
            "description": "date the public IP address was acquired",
            "type": "date"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone the public IP address belongs to",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "public IP address",
            "type": "string"
          },
          {
            "name": "id",
            "description": "public IP address id",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the public IP address belongs to",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain the public IP address is associated with",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "virutal machine id the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "isportable",
            "description": "is public IP portable across the zones",
            "type": "boolean"
          },
          {
            "name": "isstaticnat",
            "description": "true if this ip is for static nat, false otherwise",
            "type": "boolean"
          },
          {
            "name": "purpose",
            "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "virutal machine display name the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "virtualmachinename",
            "description": "virutal machine name the ip address is assigned to (not null only for static nat Ip)",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "state",
            "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
            "type": "string"
          },
          {
            "name": "vmipaddress",
            "description": "virutal machine (dnat) ip address (not null only for static nat Ip)",
            "type": "string"
          }
        ]
      },
      {
        "name": "disableAccount",
        "description": "Disables an account",
        "isasync": true,
        "related": "listAccounts,markDefaultZoneForAccount",
        "params": [
          {
            "name": "account",
            "description": "Disables specified account.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Account id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "disableAccount,listAccounts,markDefaultZoneForAccount"
          },
          {
            "name": "lock",
            "description": "If true, only lock the account; else disable the account",
            "type": "boolean",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "Disables specified account in this domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren,updateDomain"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          },
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          }
        ]
      },
      {
        "name": "migrateVirtualMachine",
        "description": "Attempts Migration of a VM to a different host or Root volume of the vm to a different storage pool",
        "isasync": true,
        "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "storageid",
            "description": "Destination storage pool ID to migrate VM volumes to. Required for migrating the root disk volume",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "findStoragePoolsForMigration"
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,migrateVirtualMachine,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "hostid",
            "description": "Destination Host ID to migrate VM to. Required for live migrating a VM from host to host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts"
          }
        ],
        "response": [
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              }
            ]
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateDomain",
        "description": "Updates a domain with a new name",
        "isasync": false,
        "related": "listDomainChildren",
        "params": [
          {
            "name": "networkdomain",
            "description": "Network domain for the domain's networks; empty string will update domainName with NULL value",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "updates domain with this name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of domain to update",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren,updateDomain"
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the domain",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the path of the domain",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the domain",
            "type": "string"
          },
          {
            "name": "parentdomainid",
            "description": "the domain ID of the parent domain",
            "type": "string"
          },
          {
            "name": "parentdomainname",
            "description": "the domain name of the parent domain",
            "type": "string"
          },
          {
            "name": "haschild",
            "description": "whether the domain has one or more sub-domains",
            "type": "boolean"
          },
          {
            "name": "level",
            "description": "the level of the domain",
            "type": "integer"
          }
        ]
      },
      {
        "name": "listVMSnapshot",
        "description": "List virtual machine snapshot by conditions",
        "since": "4.2.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "vmsnapshotid",
            "description": "The ID of the VM snapshot",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVMSnapshot"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the vm",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "lists snapshot by snapshot name or display name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "state of the virtual machine snapshot",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "type",
            "description": "VM Snapshot type",
            "type": "string"
          },
          {
            "name": "parentName",
            "description": "the parent displayName of the vm snapshot",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the create date of the vm snapshot",
            "type": "date"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "parent",
            "description": "the parent ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "the display name of the vm snapshot",
            "type": "string"
          },
          {
            "name": "current",
            "description": "indiates if this is current snapshot",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "the state of the vm snapshot",
            "type": "state"
          },
          {
            "name": "name",
            "description": "the name of the vm snapshot",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the vm snapshot",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the vm snapshot",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the vm ID of the vm snapshot",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDedicatedZones",
        "description": "List dedicated zones.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "zoneid",
            "description": "the ID of the Zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "account",
            "description": "the name of the account associated with the zone. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "zonename",
            "description": "the Name of the Zone",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the Zone",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the Account Id to which the Zone is dedicated",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID to which the Zone is dedicated",
            "type": "string"
          }
        ]
      },
      {
        "name": "removeFromLoadBalancerRule",
        "description": "Removes a virtual machine or a list of virtual machines from a load balancer rule.",
        "isasync": true,
        "params": [
          {
            "name": "virtualmachineids",
            "description": "the list of IDs of the virtual machines that are being removed from the load balancer rule (i.e. virtualMachineIds=1,2,3)",
            "type": "list",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "id",
            "description": "The ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "resetApiLimit",
        "description": "Reset api count",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "account",
            "description": "the ID of the acount whose limit to be reset",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAccounts,markDefaultZoneForAccount"
          }
        ],
        "response": [
          {
            "name": "apiAllowed",
            "description": "currently allowed number of apis",
            "type": "int"
          },
          {
            "name": "accountid",
            "description": "the account uuid of the api remaining count",
            "type": "string"
          },
          {
            "name": "apiIssued",
            "description": "number of api already issued",
            "type": "int"
          },
          {
            "name": "expireAfter",
            "description": "seconds left to reset counters",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account name of the api remaining count",
            "type": "string"
          }
        ]
      },
      {
        "name": "registerUserKeys",
        "description": "This command allows a user to register for the developer API, returning a secret key and an API key. This request is made through the integration API port, so it is a privileged command and must be made on behalf of a user. It is up to the implementer just how the username and password are entered, and then how that translates to an integration API request. Both secret key and API key should be returned to the user",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "User id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listUsers,lockUser"
          }
        ],
        "response": [
          {
            "name": "secretkey",
            "description": "the secret key of the registered user",
            "type": "string"
          },
          {
            "name": "apikey",
            "description": "the api key of the registered user",
            "type": "string"
          }
        ]
      },
      {
        "name": "addVpnUser",
        "description": "Adds vpn users",
        "isasync": true,
        "related": "listVpnUsers",
        "params": [
          {
            "name": "account",
            "description": "an optional account for the vpn user. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "username",
            "description": "username for the vpn user",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "password",
            "description": "password for the username",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "projectid",
            "description": "add vpn user to the specific project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the Vpn User",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "username",
            "description": "the username of the vpn user",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn userID",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the account of the remote access vpn",
            "type": "string"
          }
        ]
      },
      {
        "name": "listVPCs",
        "description": "Lists VPCs",
        "isasync": false,
        "related": "restartVPC",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "list by name of the VPC",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcofferingid",
            "description": "list by ID of the VPC offering",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVPCOfferings"
          },
          {
            "name": "id",
            "description": "list VPC by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "restartVPC,listVPCs"
          },
          {
            "name": "supportedservices",
            "description": "list VPC supporting certain services",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "cidr",
            "description": "list by cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list VPCs by state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "list by zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "restartrequired",
            "description": "list VPCs by restartRequired option",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "List by display text of the VPC",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "zone id of the vpc",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the VPC owner",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this VPC was created",
            "type": "date"
          },
          {
            "name": "networkdomain",
            "description": "the network domain of the VPC",
            "type": "string"
          },
          {
            "name": "network",
            "description": "the list of networks belongign to the VPC",
            "type": "list",
            "response": [
              {
                "name": "zoneid",
                "description": "zone id of the network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the owner of the network",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the ipaddress",
                "type": "string"
              },
              {
                "name": "subdomainaccess",
                "description": "true if users from subdomains can access the domain level network",
                "type": "boolean"
              },
              {
                "name": "gateway",
                "description": "the network's gateway",
                "type": "string"
              },
              {
                "name": "networkofferingavailability",
                "description": "availability of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "dns1",
                "description": "the first DNS for the network",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the network owner",
                "type": "string"
              },
              {
                "name": "networkofferingname",
                "description": "name of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network id",
                "type": "string"
              },
              {
                "name": "state",
                "description": "state of the network",
                "type": "string"
              },
              {
                "name": "networkofferingid",
                "description": "network offering id the network is created from",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the name of the zone the network belongs to",
                "type": "string"
              },
              {
                "name": "service",
                "description": "the list of services",
                "type": "list",
                "response": [
                  {
                    "name": "capability",
                    "description": "the list of capabilities",
                    "type": "list",
                    "response": [
                      {
                        "name": "canchooseservicecapability",
                        "description": "can this service capability value can be choosable while creatine network offerings",
                        "type": "boolean"
                      },
                      {
                        "name": "value",
                        "description": "the capability value",
                        "type": "string"
                      },
                      {
                        "name": "name",
                        "description": "the capability name",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "name",
                    "description": "the service name",
                    "type": "string"
                  },
                  {
                    "name": "provider",
                    "description": "the service provider name",
                    "type": "list",
                    "response": [
                      {
                        "name": "id",
                        "description": "uuid of the network provider",
                        "type": "string"
                      },
                      {
                        "name": "destinationphysicalnetworkid",
                        "description": "the destination physical network",
                        "type": "string"
                      },
                      {
                        "name": "name",
                        "description": "the provider name",
                        "type": "string"
                      },
                      {
                        "name": "physicalnetworkid",
                        "description": "the physical network this belongs to",
                        "type": "string"
                      },
                      {
                        "name": "servicelist",
                        "description": "services for this provider",
                        "type": "list"
                      },
                      {
                        "name": "canenableindividualservice",
                        "description": "true if individual services can be enabled/disabled",
                        "type": "boolean"
                      },
                      {
                        "name": "state",
                        "description": "state of the network provider",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "id",
                "description": "the id of the network",
                "type": "string"
              },
              {
                "name": "acltype",
                "description": "acl type - access type to the network",
                "type": "string"
              },
              {
                "name": "ispersistent",
                "description": "list networks that are persistent",
                "type": "boolean"
              },
              {
                "name": "name",
                "description": "the name of the network",
                "type": "string"
              },
              {
                "name": "related",
                "description": "related to what other network configuration",
                "type": "string"
              },
              {
                "name": "networkdomain",
                "description": "the network domain",
                "type": "string"
              },
              {
                "name": "vlan",
                "description": "The vlan of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "canusefordeploy",
                "description": "list networks available for vm deployment",
                "type": "boolean"
              },
              {
                "name": "vpcid",
                "description": "VPC the network belongs to",
                "type": "string"
              },
              {
                "name": "specifyipranges",
                "description": "true if network supports specifying ip ranges, false otherwise",
                "type": "boolean"
              },
              {
                "name": "displaytext",
                "description": "the displaytext of the network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if network is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "netmask",
                "description": "the network's netmask",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain id of the network owner",
                "type": "string"
              },
              {
                "name": "networkcidr",
                "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the network",
                "type": "string"
              },
              {
                "name": "displaynetwork",
                "description": "an optional field, whether to the display the network to the end user or not.",
                "type": "boolean"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with network",
                "type": "list",
                "response": [
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "aclid",
                "description": "ACL Id associated with the VPC network",
                "type": "string"
              },
              {
                "name": "restartrequired",
                "description": "true network requires restart",
                "type": "boolean"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the network",
                "type": "string"
              },
              {
                "name": "reservediprange",
                "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
                "type": "string"
              },
              {
                "name": "broadcastdomaintype",
                "description": "Broadcast domain type of the network",
                "type": "string"
              },
              {
                "name": "networkofferingdisplaytext",
                "description": "display text of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "dns2",
                "description": "the second DNS for the network",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the address",
                "type": "string"
              },
              {
                "name": "issystem",
                "description": "true if network is system, false otherwise",
                "type": "boolean"
              }
            ]
          },
          {
            "name": "vpcofferingid",
            "description": "vpc offering id the VPC is created from",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the VPC",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the VPC. Can be Inactive/Enabled",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the VPC",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the VPC",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the VPC.",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the VPC",
            "type": "string"
          },
          {
            "name": "cidr",
            "description": "the cidr the VPC",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the project",
            "type": "list",
            "response": [
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "restartrequired",
            "description": "true VPC requires restart",
            "type": "boolean"
          },
          {
            "name": "account",
            "description": "the owner of the VPC",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the VPC belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "assignVirtualMachine",
        "description": "Assign a VM from one account to another under the same domain. This API is available for Basic zones with security groups and Advance zones with guest networks. The VM is restricted to move between accounts under same domain.",
        "since": "3.0.0",
        "isasync": false,
        "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "virtualmachineid",
            "description": "id of the VM to be moved",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,assignVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "securitygroupids",
            "description": "list of security group ids to be applied on the virtual machine. In case no security groups are provided the VM is part of the default security group.",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "account name of the new VM owner.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "networkids",
            "description": "list of new network ids in which the moved VM will participate. In case no network ids are provided the VM will be part of the default network for that zone. In case there is no network yet created for the new account the default network will be created.",
            "type": "list",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "domainid",
            "description": "domain id of the new VM owner.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren"
          }
        ],
        "response": [
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              }
            ]
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          }
        ]
      },
      {
        "name": "listConditions",
        "description": "List Conditions for the specific user",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "policyid",
            "description": "the ID of the policy",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createAutoScalePolicy"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the Condition.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listConditions"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "counterid",
            "description": "Counter-id of the condition.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createCounter"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the Condition",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of counter",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner of the Condition.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner.",
            "type": "string"
          },
          {
            "name": "relationaloperator",
            "description": "Relational Operator to be used with threshold.",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the Condition",
            "type": "string"
          },
          {
            "name": "threshold",
            "description": "Threshold Value for the counter.",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the domain id of the Condition owner",
            "type": "string"
          },
          {
            "name": "counter",
            "description": "Details of the Counter.",
            "type": "list"
          },
          {
            "name": "projectid",
            "description": "the project id of the Condition.",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateVirtualMachine",
        "description": "Updates properties of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect. UpdateVirtualMachine does not first check whether the VM is stopped. Therefore, stop the VM manually before issuing this call.",
        "isasync": false,
        "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,destroyVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,destroyVirtualMachine,updateVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled for the virtual machine, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "displayvm",
            "description": "an optional field, whether to the display the vm to the end user or not.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "userdata",
            "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 2KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 32K of data after base64 encoding.",
            "type": "string",
            "length": 32768,
            "required": false
          },
          {
            "name": "group",
            "description": "group of the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if VM contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type that best represents this VM.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "displayname",
            "description": "user generated name",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          }
        ]
      },
      {
        "name": "createPrivateGateway",
        "description": "Creates a private gateway",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "sourcenatsupported",
            "description": "source NAT supported value. Default value false. If 'true' source NAT is enabled on the private gateway 'false': sourcenat is not supported",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "aclid",
            "description": "the ID of the network ACL",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "vpcid",
            "description": "the VPC network belongs to",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "restartVPC"
          },
          {
            "name": "netmask",
            "description": "the netmask of the Private gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "vlan",
            "description": "the Vlan for the private gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "gateway",
            "description": "the gateway of the Private gateway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the Private gateaway",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID the network belongs to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPhysicalNetworks"
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "State of the gateway, can be Creating, Ready, Deleting",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the private gateway",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "ACL Id set for private gateway",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the private gateaway belongs to",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the private gateway",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway",
            "type": "string"
          },
          {
            "name": "sourcenatsupported",
            "description": "Souce Nat enable status",
            "type": "boolean"
          },
          {
            "name": "project",
            "description": "the project name of the private gateway",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network id",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the private gateway",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the private gateway",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the private gateway's ip address",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the private gateway",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the private gateway belongs to",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan of the private gateway",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the private gateway's netmask",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the private gateway",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteLBStickinessPolicy",
        "description": "Deletes a LB stickiness policy.",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the LB stickiness policy",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createLBStickinessPolicy"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listResourceLimits",
        "description": "Lists resource limits.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "resourcetype",
            "description": "Type of resource to update. Values are 0, 1, 2, 3, and 4.0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses an account can own. 2 - Volume. Number of disk volumes an account can own.3 - Snapshot. Number of snapshots an account can own.4 - Template. Number of templates an account can register/create.5 - Project. Number of projects an account can own.6 - Network. Number of networks an account can own.7 - VPC. Number of VPC an account can own.8 - CPU. Number of CPU an account can allocate for his resources.9 - Memory. Amount of RAM an account can allocate for his resources.10 - Primary Storage. Amount of Primary storage an account can allocate for his resoruces.11 - Secondary Storage. Amount of Secondary storage an account can allocate for his resources.",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "createProject"
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Lists resource limits by ID.",
            "type": "long",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "project",
            "description": "the project name of the resource limit",
            "type": "string"
          },
          {
            "name": "max",
            "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
            "type": "long"
          },
          {
            "name": "resourcetype",
            "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the resource limit",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the resource limit",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the resource limit",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the resource limit",
            "type": "string"
          }
        ]
      },
      {
        "name": "listServiceOfferings",
        "description": "Lists all available service offerings.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the service offering",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "issystem",
            "description": "is this a system vm offering",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of the service offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "ID of the service offering",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listServiceOfferings"
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine. Pass this in if you want to see the available service offering that a virtual machine can be changed to.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,destroyVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type. Possible types are \"consoleproxy\", \"secondarystoragevm\" or \"domainrouter\".",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the service offering",
            "type": "long"
          },
          {
            "name": "issystem",
            "description": "is this a system vm offering",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain id of the service offering",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the clock rate CPU speed in Mhz",
            "type": "int"
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed.",
            "type": "integer"
          },
          {
            "name": "limitcpuuse",
            "description": "restrict the CPU usage to committed service offering",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date this service offering was created",
            "type": "date"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the service offering.",
            "type": "string"
          },
          {
            "name": "defaultuse",
            "description": "is this a  default system vm offering",
            "type": "boolean"
          },
          {
            "name": "memory",
            "description": "the memory in MB",
            "type": "int"
          },
          {
            "name": "id",
            "description": "the id of the service offering",
            "type": "string"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the service offering",
            "type": "long"
          },
          {
            "name": "isvolatile",
            "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
            "type": "boolean"
          },
          {
            "name": "cpunumber",
            "description": "the number of CPU",
            "type": "int"
          },
          {
            "name": "tags",
            "description": "the tags for the service offering",
            "type": "string"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the service offering",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "Domain name for the offering",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "is this a the systemvm type for system vm offering",
            "type": "string"
          },
          {
            "name": "offerha",
            "description": "the ha support in the service offering",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the service offering",
            "type": "string"
          },
          {
            "name": "serviceofferingdetails",
            "description": "additional key/value details tied with this service offering",
            "type": "map"
          },
          {
            "name": "storagetype",
            "description": "the storage type for this service offering",
            "type": "string"
          },
          {
            "name": "hosttags",
            "description": "the host tag for the service offering",
            "type": "string"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the service offering",
            "type": "long"
          },
          {
            "name": "deploymentplanner",
            "description": "deployment strategy used to deploy VM.",
            "type": "string"
          }
        ]
      },
      {
        "name": "addUcsManager",
        "description": "Adds a Ucs manager",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "password",
            "description": "the password of UCS",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "username",
            "description": "the username of UCS",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "the Zone id for the ucs manager",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "url",
            "description": "the name of UCS url",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "name",
            "description": "the name of UCS manager",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "zoneid",
            "description": "the zone ID of ucs manager",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of ucs manager",
            "type": "string"
          },
          {
            "name": "url",
            "description": "the url of ucs manager",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the ucs manager",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVMSnapshot",
        "description": "Deletes a vmsnapshot.",
        "since": "4.2.0",
        "isasync": true,
        "params": [
          {
            "name": "vmsnapshotid",
            "description": "The ID of the VM snapshot",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteAutoScaleVmProfile",
        "description": "Deletes a autoscale vm profile.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the autoscale profile",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listAutoScaleVmProfiles"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "deleteStoragePool",
        "description": "Deletes a storage pool.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "Storage pool id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "findStoragePoolsForMigration"
          },
          {
            "name": "forced",
            "description": "Force destroy storage pool (force expunge volumes in Destroyed state as a part of pool removal)",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteSnapshot",
        "description": "Deletes a snapshot of a disk volume.",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "The ID of the snapshot",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "createSnapshot"
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "createProject",
        "description": "Creates a project",
        "since": "3.0.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "displaytext",
            "description": "display text of the project",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "domainid",
            "description": "domain ID of the account owning a project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "name",
            "description": "name of the project",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "account",
            "description": "account who will be Admin for the project",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this project",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this project",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this project",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by project",
            "type": "long"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the project can own",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by project",
            "type": "long"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this project",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by project",
            "type": "long"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this project",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this project",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this project",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the project",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this project",
            "type": "long"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this project",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this project",
            "type": "integer"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the project can own",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this project",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this project",
            "type": "long"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the project can own",
            "type": "string"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this project",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the project can own",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the project",
            "type": "string"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this project",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the domain name where the project belongs to",
            "type": "string"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this project",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this project can acquire",
            "type": "string"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by project",
            "type": "long"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the project can own",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this project",
            "type": "integer"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this project",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the project",
            "type": "string"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by project",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the project",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this project",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the project's owner",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id the project belongs to",
            "type": "string"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this project to acquire",
            "type": "string"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this project",
            "type": "long"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this project to acquire",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "list",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "createLoadBalancerRule",
        "description": "Creates a load balancer rule",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "description",
            "description": "the description of the load balancer rule",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "algorithm",
            "description": "load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "publicipid",
            "description": "public ip address id from where the network traffic will be load balanced from",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "openfirewall",
            "description": "if true, firewall rule for source/end pubic port is automatically created; if false - firewall rule has to be created explicitely. If not specified 1) defaulted to false when LB rule is being created for VPC guest network 2) in all other cases defaulted to true",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "The guest network this rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetwork"
          },
          {
            "name": "account",
            "description": "the account associated with the load balancer. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the load balancer",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "zoneid",
            "description": "zone where the load balancer is going to be created. This parameter is required when LB service provider is ElasticLoadBalancerVm",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "publicport",
            "description": "the public port from where the network traffic will be load balanced from",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of the load balancer rule",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "privateport",
            "description": "the private port of the private ip address/virtual machine where the network traffic will be load balanced to",
            "type": "integer",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "tags",
            "description": "the list of resource tags associated with load balancer",
            "type": "list",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "id",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the load balancer",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the private port",
            "type": "string"
          },
          {
            "name": "publicport",
            "description": "the public port",
            "type": "string"
          },
          {
            "name": "algorithm",
            "description": "the load balancer algorithm (source, roundrobin, leastconn)",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the id of the guest network the lb rule belongs to",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the load balancer",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the load balancer",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public ip address",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the load balancer rule",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the rule belongs to",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the load balancer rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain of the load balancer rule",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "the public ip address id",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the load balancer",
            "type": "string"
          }
        ]
      },
      {
        "name": "createAutoScalePolicy",
        "description": "Creates an autoscale policy for a provision or deprovision action, the action is taken when the all the conditions evaluates to true for the specified duration. The policy is in effect once it is attached to a autscale vm group.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "duration",
            "description": "the duration for which the conditions have to be true before action is taken",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "conditionids",
            "description": "the list of IDs of the conditions that are being evaluated on every interval",
            "type": "list",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "action",
            "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "quiettime",
            "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "duration",
            "description": "the duration for which the conditions have to be true before action is taken",
            "type": "integer"
          },
          {
            "name": "domain",
            "description": "the domain name of the autoscale policy",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the autoscale policy",
            "type": "string"
          },
          {
            "name": "conditions",
            "description": "the list of IDs of the conditions that are being evaluated on every interval",
            "type": "list"
          },
          {
            "name": "action",
            "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the autoscale policy",
            "type": "string"
          },
          {
            "name": "quiettime",
            "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
            "type": "integer"
          },
          {
            "name": "projectid",
            "description": "the project id autoscale policy",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale policy ID",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the autoscale policy",
            "type": "string"
          }
        ]
      },
      {
        "name": "restoreVirtualMachine",
        "description": "Restore a VM to original template/ISO or new template/ISO",
        "since": "3.0.0",
        "isasync": true,
        "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine",
        "params": [
          {
            "name": "templateid",
            "description": "an optional template Id to restore vm from the new template. This can be an ISO id in case of restore vm deployed using ISO",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateIso,copyIso,listIsos"
          },
          {
            "name": "virtualmachineid",
            "description": "Virtual Machine ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,restoreVirtualMachine,destroyVirtualMachine,stopVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              }
            ]
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "listEventTypes",
        "description": "List Event Types",
        "isasync": false,
        "related": "",
        "params": [

        ],
        "response": [
          {
            "name": "name",
            "description": "Event Type",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteAffinityGroup",
        "description": "Deletes affinity group",
        "isasync": true,
        "params": [
          {
            "name": "domainid",
            "description": "the domain ID of account owning the affinity group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          },
          {
            "name": "name",
            "description": "The name of the affinity group. Mutually exclusive with id parameter",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "the account of the affinity group. Must be specified with domain ID",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "The ID of the affinity group. Mutually exclusive with name parameter",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "createNetworkOffering",
        "description": "Creates a network offering.",
        "since": "3.0.0",
        "isasync": false,
        "related": "updateNetworkOffering",
        "params": [
          {
            "name": "specifyipranges",
            "description": "true if network offering supports specifying ip ranges; defaulted to false if not specified",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the network offering. Supported type in current release is GUEST only",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "conservemode",
            "description": "true if the network offering is IP conserve mode enabled",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ispersistent",
            "description": "true if network offering supports persistent networks; defaulted to false if not specified",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "guestiptype",
            "description": "guest type of the network offering: Shared or Isolated",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "details",
            "description": "Network offering details in key/value pairs. Supported keys are internallbprovider/publiclbprovider with service provider as a value",
            "type": "map",
            "length": 255,
            "required": false,
            "since": "4.2.0"
          },
          {
            "name": "servicecapabilitylist",
            "description": "desired service capabilities as part of network offering",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "serviceproviderlist",
            "description": "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "supportedservices",
            "description": "services supported by the network offering",
            "type": "list",
            "length": 255,
            "required": true
          },
          {
            "name": "name",
            "description": "the name of the network offering",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "egressdefaultpolicy",
            "description": "true if default guest network egress policy is allow; false if default egress policy is deny",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "maxconnections",
            "description": "maximum number of concurrent connections supported by the network offering",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering ID used by virtual router provider",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "displaytext",
            "description": "the display text of the network offering",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "tags",
            "description": "the tags for the network offering.",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "specifyvlan",
            "description": "true if network offering supports vlans",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "availability",
            "description": "the availability of network offering. Default value is Optional",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "availability",
            "description": "availability of the network offering",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if network offering is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "specifyvlan",
            "description": "true if network offering supports vlans, false otherwise",
            "type": "boolean"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with network offering",
            "type": "map"
          },
          {
            "name": "ispersistent",
            "description": "true if network offering supports persistent networks, false otherwise",
            "type": "boolean"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              }
            ]
          },
          {
            "name": "maxconnections",
            "description": "maximum number of concurrents connections to be handled by lb",
            "type": "integer"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering used by virtual router provider",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
            "type": "string"
          },
          {
            "name": "egressdefaultpolicy",
            "description": "true if network offering supports persistent networks, false otherwise",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the id of the network offering",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the network offering",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this network offering was created",
            "type": "date"
          },
          {
            "name": "specifyipranges",
            "description": "true if network offering supports specifying ip ranges, false otherwise",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the network offering.",
            "type": "string"
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed.",
            "type": "integer"
          },
          {
            "name": "forvpc",
            "description": "true if network offering can be used by VPC networks only",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the tags for the network offering",
            "type": "string"
          },
          {
            "name": "guestiptype",
            "description": "guest type of the network offering, can be Shared or Isolated",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
            "type": "string"
          },
          {
            "name": "conservemode",
            "description": "true if network offering is ip conserve mode enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "copyIso",
        "description": "Copies an iso from one zone to another.",
        "isasync": true,
        "related": "updateIso,listIsos",
        "params": [
          {
            "name": "id",
            "description": "Template ID.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateIso,copyIso,listIsos"
          },
          {
            "name": "sourcezoneid",
            "description": "ID of the zone the template is currently hosted on.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "destzoneid",
            "description": "ID of the zone the template is being copied to.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          }
        ]
      },
      {
        "name": "dedicatePublicIpRange",
        "description": "Dedicates a Public IP range to an account",
        "isasync": false,
        "related": "listVlanIpRanges",
        "params": [
          {
            "name": "projectid",
            "description": "project who will own the VLAN",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "account who will own the VLAN",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "the id of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listVlanIpRanges,dedicatePublicIpRange"
          },
          {
            "name": "domainid",
            "description": "domain ID of the account owning a VLAN",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listDomainChildren"
          }
        ],
        "response": [
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the VLAN IP range",
            "type": "boolean"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vlan range",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vlan range",
            "type": "string"
          },
          {
            "name": "endipv6",
            "description": "the end ipv6 of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the VLAN IP range",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of vlan range",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name for the VLAN IP range",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "startipv6",
            "description": "the start ipv6 of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the start ip of the VLAN IP range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listDomainChildren",
        "description": "Lists all children domains belonging to a specified domain",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "list children domains by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "to return the entire tree, use the value \"true\". To return the first level children, use the value \"false\".",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list children domain by parent domain ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listDomainChildren"
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the domain",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the domain",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "parentdomainname",
            "description": "the domain name of the parent domain",
            "type": "string"
          },
          {
            "name": "haschild",
            "description": "whether the domain has one or more sub-domains",
            "type": "boolean"
          },
          {
            "name": "level",
            "description": "the level of the domain",
            "type": "integer"
          },
          {
            "name": "parentdomainid",
            "description": "the domain ID of the parent domain",
            "type": "string"
          },
          {
            "name": "path",
            "description": "the path of the domain",
            "type": "string"
          }
        ]
      },
      {
        "name": "uploadVolume",
        "description": "Uploads a data disk.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "checksum",
            "description": "the MD5 checksum value of this volume",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "format",
            "description": "the format for the volume. Possible values include QCOW2, OVA, and VHD.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone the volume is to be hosted on",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "domainid",
            "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "projectid",
            "description": "Upload volume for the project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "url",
            "description": "the URL of where the volume is hosted. Possible URL include http:// and https://",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "imagestoreuuid",
            "description": "Image store uuid",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "an optional accountName. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the volume",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "diskofferingname",
            "description": "name of the disk offering",
            "type": "string"
          },
          {
            "name": "attached",
            "description": "the date the volume was attached to a VM instance",
            "type": "date"
          },
          {
            "name": "miniops",
            "description": "min iops of the disk volume",
            "type": "long"
          },
          {
            "name": "vmname",
            "description": "name of the virtual machine",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "id of the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the disk volume",
            "type": "string"
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk volume",
            "type": "long"
          },
          {
            "name": "storagetype",
            "description": "shared or local storage",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date the disk volume was created",
            "type": "date"
          },
          {
            "name": "vmstate",
            "description": "state of the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "serviceofferingname",
            "description": "name of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk volume",
            "type": "long"
          },
          {
            "name": "snapshotid",
            "description": "ID of the snapshot from which this volume was created",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "destroyed",
            "description": "the boolean state of whether the volume is destroyed or not",
            "type": "boolean"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "name of the availability zone",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain associated with the disk volume",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the volume is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "deviceid",
            "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
            "type": "long"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk volume",
            "type": "long"
          },
          {
            "name": "status",
            "description": "the status of the volume",
            "type": "string"
          },
          {
            "name": "displayvolume",
            "description": "an optional field whether to the display the volume to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskofferingdisplaytext",
            "description": "the display text of the disk offering",
            "type": "string"
          },
          {
            "name": "storage",
            "description": "name of the primary storage hosting the disk volume",
            "type": "string"
          },
          {
            "name": "diskofferingid",
            "description": "ID of the disk offering",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "serviceofferingdisplaytext",
            "description": "the display text of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "size",
            "description": "size of the disk volume",
            "type": "long"
          },
          {
            "name": "type",
            "description": "type of the disk volume (ROOT or DATADISK)",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with volume",
            "type": "set",
            "response": [
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "zoneid",
            "description": "ID of the availability zone",
            "type": "string"
          },
          {
            "name": "vmdisplayname",
            "description": "display name of the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "ID of the service offering for root disk",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the disk volume",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "Hypervisor the volume belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "listAutoScaleVmProfiles",
        "description": "Lists autoscale vm profiles.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the autoscale vm profile",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAutoScaleVmProfiles"
          },
          {
            "name": "templateid",
            "description": "the templateid of the autoscale vm profile",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateIso,listIsos"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "otherdeployparams",
            "description": "the otherdeployparameters of the autoscale vm profile",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
          },
          {
            "name": "otherdeployparams",
            "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
            "type": "string"
          },
          {
          },
          {
            "name": "zoneid",
            "description": "the availability zone to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "destroyvmgraceperiod",
            "description": "the time allowed for existing connections to get closed before a vm is destroyed",
            "type": "integer"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm profile ID",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the service offering to be used while deploying a virtual machine",
            "type": "string"
          },
          {
            "name": "autoscaleuserid",
            "description": "the ID of the user used to launch and destroy the VMs",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          }
        ]
      },
      {
        "name": "createLBStickinessPolicy",
        "description": "Creates a Load Balancer stickiness policy ",
        "since": "3.0.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "methodname",
            "description": "name of the LB Stickiness policy method, possible values can be obtained from ListNetworks API ",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "lbruleid",
            "description": "the ID of the load balancer rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIpForwardingRules"
          },
          {
            "name": "param",
            "description": "param list. Example: param[0].name=cookiename&param[0].value=LBCookie ",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "description",
            "description": "the description of the LB Stickiness policy",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of the LB Stickiness policy",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "lbruleid",
            "description": "the LB rule ID",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "stickinesspolicy",
            "description": "the list of stickinesspolicies",
            "type": "list",
            "response": [
              {
                "name": "methodname",
                "description": "the method name of the Stickiness policy",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the Stickiness policy",
                "type": "string"
              },
              {
                "name": "params",
                "description": "the params of the policy",
                "type": "map"
              },
              {
                "name": "state",
                "description": "the state of the policy",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the Stickiness policy",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the LB Stickiness policy ID",
                "type": "string"
              }
            ]
          },
          {
            "name": "domain",
            "description": "the domain of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the policy",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the id of the zone the Stickiness policy belongs to",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the Stickiness policy",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the Stickiness policy",
            "type": "string"
          }
        ]
      },
      {
        "name": "stopVirtualMachine",
        "description": "Stops a virtual machine.",
        "isasync": true,
        "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,destroyVirtualMachine",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,destroyVirtualMachine,stopVirtualMachine"
          },
          {
            "name": "forced",
            "description": "Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend).  The caller knows the VM is stopped.",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              }
            ]
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              }
            ]
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          }
        ]
      },
      {
        "name": "migrateVirtualMachineWithVolume",
        "description": "Attempts Migration of a VM with its volumes to a different host",
        "isasync": true,
        "related": "revertToVMSnapshot,listVirtualMachines,destroyVirtualMachine",
        "params": [
          {
            "name": "migrateto",
            "description": "Map of pool to which each volume should be migrated (volume/pool pair)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,migrateVirtualMachineWithVolume,destroyVirtualMachine"
          },
          {
            "name": "hostid",
            "description": "Destination Host ID to migrate VM to.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts"
          }
        ],
        "response": [
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "createCounter",
        "description": "Adds metric counter",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "Name of the counter.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "source",
            "description": "Source of the counter.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "value",
            "description": "Value of the counter e.g. oid in case of snmp.",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the id of the Counter",
            "type": "string"
          },
          {
            "name": "source",
            "description": "Source of the counter.",
            "type": "string"
          },
          {
            "name": "name",
            "description": "Name of the counter.",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of counter",
            "type": "string"
          },
          {
            "name": "value",
            "description": "Value in case of snmp or other specific counters.",
            "type": "string"
          }
        ]
      },
      {
        "name": "listAccounts",
        "description": "Lists accounts and provides detailed account information for listed accounts",
        "isasync": false,
        "related": "markDefaultZoneForAccount",
        "params": [
          {
            "name": "accounttype",
            "description": "list accounts by account type. Valid account types are 1 (admin), 2 (domain-admin), and 0 (user).",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "name",
            "description": "list account by account name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list accounts by state. Valid states are enabled, disabled, and locked.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "iscleanuprequired",
            "description": "list accounts by cleanuprequred attribute (values are true or false)",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list account by account ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listAccounts,markDefaultZoneForAccount"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              },
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              }
            ]
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          }
        ]
      },
      {
        "name": "createSnapshot",
        "description": "Creates an instant snapshot of a volume.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "domainid",
            "description": "The domain ID of the snapshot. If used with the account parameter, specifies a domain for the account associated with the disk volume.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "policyid",
            "description": "policy id of the snapshot, if this is null, then use MANUAL_POLICY.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "The account of the snapshot. The account parameter must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "volumeid",
            "description": "The ID of the disk volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "domainid",
            "description": "the domain ID of the snapshot's account",
            "type": "string"
          },
          {
            "name": "volumename",
            "description": "name of the disk volume",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the snapshot",
            "type": "string"
          },
          {
            "name": "created",
            "description": "  the date the snapshot was created",
            "type": "date"
          },
          {
            "name": "volumetype",
            "description": "type of the disk volume",
            "type": "string"
          },
          {
            "name": "snapshottype",
            "description": "the type of the snapshot",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the snapshot",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the snapshot",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the snapshot's account",
            "type": "string"
          },
          {
            "name": "volumeid",
            "description": "ID of the disk volume",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with snapshot",
            "type": "list",
            "response": [
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "projectid",
            "description": "the project id of the snapshot",
            "type": "string"
          },
          {
            "name": "intervaltype",
            "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "id of the availability zone",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
            "type": "state"
          },
          {
            "name": "account",
            "description": "the account associated with the snapshot",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateIso",
        "description": "Updates an ISO file.",
        "isasync": false,
        "related": "listIsos",
        "params": [
          {
            "name": "format",
            "description": "the format for the image",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the image",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type that best represents the OS of this image.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "name",
            "description": "the name of the image file",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "sortkey",
            "description": "sort key of the template, integer",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrouting",
            "description": "true if the template type is routing i.e., if template is used to deploy router",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "bootable",
            "description": "true if image is bootable, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the image file",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateIso,listIsos"
          },
          {
            "name": "passwordenabled",
            "description": "true if the image supports the password reset feature; default is false",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "listPortableIpRanges",
        "description": "list portable IP ranges",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "regionid",
            "description": "Id of a Region",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Id of the portable ip range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPortableIpRanges"
          }
        ],
        "response": [
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "string"
          },
          {
            "name": "portableipaddress",
            "description": "List of portable IP and association with zone/network/vpc details that are part of GSLB rule",
            "type": "list",
            "response": [
              {
                "name": "regionid",
                "description": "Region Id in which global load balancer is created",
                "type": "integer"
              },
              {
                "name": "domainid",
                "description": "the domain ID the portable IP address is associated with",
                "type": "string"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network this belongs to",
                "type": "string"
              },
              {
                "name": "vpcid",
                "description": "VPC the ip belongs to",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "public IP address",
                "type": "string"
              },
              {
                "name": "allocated",
                "description": "date the portal IP address was acquired",
                "type": "date"
              },
              {
                "name": "state",
                "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the Network where ip belongs to",
                "type": "string"
              },
              {
                "name": "accountid",
                "description": "the account ID the portable IP address is associated with",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the ID of the zone the public IP address belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "regionid",
            "description": "Region Id in which portable ip range is provisioned",
            "type": "integer"
          },
          {
            "name": "startip",
            "description": "the start ip of the portable IP range",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "portable IP range ID",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the portable IP range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listIpForwardingRules",
        "description": "List the ip forwarding rules",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "ipaddressid",
            "description": "list the rule belonging to this public ip address",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Lists rule with the specified ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIpForwardingRules"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "Lists all rules applied to the specified Vm.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,listVirtualMachines,destroyVirtualMachine"
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "virtualmachinename",
            "description": "the VM name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "publicendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the port forwarding rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "virtualmachinedisplayname",
            "description": "the VM display name for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "privateport",
            "description": "the starting port of port forwarding rule's private port range",
            "type": "string"
          },
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              }
            ]
          },
          {
            "name": "publicport",
            "description": "the starting port of port forwarding rule's public port range",
            "type": "string"
          },
          {
            "name": "vmguestip",
            "description": "the vm ip address for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "virtualmachineid",
            "description": "the VM ID for the port forwarding rule",
            "type": "string"
          },
          {
            "name": "privateendport",
            "description": "the ending port of port forwarding rule's private port range",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateNetwork",
        "description": "Updates a network",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "changecidr",
            "description": "Force update even if cidr type is different",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the new name for the network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkofferingid",
            "description": "network offering ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetworkOffering"
          },
          {
            "name": "displaynetwork",
            "description": "an optional field, whether to the display the network to the end user or not.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "guestvmcidr",
            "description": "CIDR for Guest VMs,Cloudstack allocates IPs to Guest VMs only from this CIDR",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the new display text for the network",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the network",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetwork"
          },
          {
            "name": "networkdomain",
            "description": "network domain",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "type",
            "description": "the type of the network",
            "type": "string"
          },
          {
            "name": "networkofferingid",
            "description": "network offering id the network is created from",
            "type": "string"
          },
          {
            "name": "ispersistent",
            "description": "list networks that are persistent",
            "type": "boolean"
          },
          {
            "name": "subdomainaccess",
            "description": "true if users from subdomains can access the domain level network",
            "type": "boolean"
          },
          {
            "name": "isdefault",
            "description": "true if network is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the network",
            "type": "string"
          },
          {
            "name": "networkofferingname",
            "description": "name of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the network owner",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the network's gateway",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "broadcasturi",
            "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "broadcastdomaintype",
            "description": "Broadcast domain type of the network",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the network",
            "type": "string"
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "specifyipranges",
            "description": "true if network supports specifying ip ranges, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network id",
            "type": "string"
          },
          {
            "name": "reservediprange",
            "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "The vlan of the network. This parameter is visible to ROOT admins only",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the network",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the network owner",
            "type": "string"
          },
          {
            "name": "canusefordeploy",
            "description": "list networks available for vm deployment",
            "type": "boolean"
          },
          {
            "name": "networkofferingavailability",
            "description": "availability of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the network belongs to",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of services",
            "type": "list",
            "response": [
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  }
                ]
              }
            ]
          },
          {
            "name": "restartrequired",
            "description": "true network requires restart",
            "type": "boolean"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the network",
            "type": "string"
          },
          {
            "name": "networkcidr",
            "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
            "type": "string"
          },
          {
            "name": "issystem",
            "description": "true if network is system, false otherwise",
            "type": "boolean"
          },
          {
            "name": "vpcid",
            "description": "VPC the network belongs to",
            "type": "string"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "the displaytext of the network",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "traffictype",
            "description": "the traffic type of the network",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the network",
            "type": "string"
          },
          {
            "name": "displaynetwork",
            "description": "an optional field, whether to the display the network to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "netmask",
            "description": "the network's netmask",
            "type": "string"
          },
          {
            "name": "aclid",
            "description": "ACL Id associated with the VPC network",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner of the network",
            "type": "string"
          },
          {
            "name": "networkofferingdisplaytext",
            "description": "display text of the network offering the network is created from",
            "type": "string"
          },
          {
            "name": "related",
            "description": "related to what other network configuration",
            "type": "string"
          },
          {
            "name": "acltype",
            "description": "acl type - access type to the network",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with network",
            "type": "list",
            "response": [
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "cidr",
            "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
            "type": "string"
          }
        ]
      },
      {
        "name": "destroyVirtualMachine",
        "description": "Destroys a virtual machine. Once destroyed, only the administrator can recover it.",
        "isasync": true,
        "related": "revertToVMSnapshot,listVirtualMachines",
        "params": [
          {
            "name": "id",
            "description": "The ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "revertToVMSnapshot,listVirtualMachines,destroyVirtualMachine"
          }
        ],
        "response": [
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              }
            ]
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              }
            ]
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          }
        ]
      },
      {
        "name": "dedicateHost",
        "description": "Dedicates a host.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "hostid",
            "description": "the ID of the host to update",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listHosts"
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "account",
            "description": "the name of the account which needs dedication. Must be used with domainId.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "hostname",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the dedicated resource",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the Account ID of the host",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the host",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host",
            "type": "string"
          }
        ]
      },
      {
        "name": "addRegion",
        "description": "Adds a Region",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "Name of the region",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "id",
            "description": "Id of the Region",
            "type": "integer",
            "length": 255,
            "required": true
          },
          {
            "name": "endpoint",
            "description": "Region service endpoint",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the ID of the region",
            "type": "integer"
          },
          {
            "name": "endpoint",
            "description": "the end point of the region",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the region",
            "type": "string"
          }
        ]
      },
      {
        "name": "createDiskOffering",
        "description": "Creates a disk offering.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "name of the disk offering",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "bytesreadrate",
            "description": "bytes read rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "customizediops",
            "description": "whether disk offering iops is custom or not",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "iopsreadrate",
            "description": "io requests read rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "alternate display text of the disk offering",
            "type": "string",
            "length": 4096,
            "required": true
          },
          {
            "name": "displayoffering",
            "description": "an optional field, whether to display the offering to the end user or not.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "disksize",
            "description": "size of the disk offering in GB",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "iopswriterate",
            "description": "io requests write rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "tags for the disk offering",
            "type": "string",
            "length": 4096,
            "required": false
          },
          {
            "name": "maxiops",
            "description": "max iops of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "miniops",
            "description": "min iops of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "customized",
            "description": "whether disk offering size is custom or not",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "byteswriterate",
            "description": "bytes write rate of the disk offering",
            "type": "long",
            "length": 255,
            "required": false
          },
          {
            "name": "storagetype",
            "description": "the storage type of the disk offering. Values are local and shared.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the ID of the containing domain, null for public offerings",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "domain",
            "description": "the domain name this disk offering belongs to. Ignore this information as it is not currently applicable.",
            "type": "string"
          },
          {
            "name": "disksize",
            "description": "the size of the disk offering in GB",
            "type": "long"
          },
          {
            "name": "created",
            "description": "the date this disk offering was created",
            "type": "date"
          },
          {
            "name": "diskBytesWriteRate",
            "description": "bytes write rate of the disk offering",
            "type": "long"
          },
          {
            "name": "diskIopsWriteRate",
            "description": "io requests write rate of the disk offering",
            "type": "long"
          },
          {
            "name": "id",
            "description": "unique ID of the disk offering",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the disk offering",
            "type": "string"
          },
          {
            "name": "iscustomized",
            "description": "true if disk offering uses custom size, false otherwise",
            "type": "boolean"
          },
          {
            "name": "diskIopsReadRate",
            "description": "io requests read rate of the disk offering",
            "type": "long"
          },
          {
            "name": "maxiops",
            "description": "the max iops of the disk offering",
            "type": "long"
          },
          {
            "name": "iscustomizediops",
            "description": "true if disk offering uses custom iops, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain ID this disk offering belongs to. Ignore this information as it is not currently applicable.",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the tags for the disk offering",
            "type": "string"
          },
          {
            "name": "miniops",
            "description": "the min iops of the disk offering",
            "type": "long"
          },
          {
            "name": "displayoffering",
            "description": "whether to display the offering to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "diskBytesReadRate",
            "description": "bytes read rate of the disk offering",
            "type": "long"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the disk offering.",
            "type": "string"
          },
          {
            "name": "storagetype",
            "description": "the storage type for this disk offering",
            "type": "string"
          }
        ]
      },
      {
        "name": "getCloudIdentifier",
        "description": "Retrieves a cloud identifier.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "userid",
            "description": "the user ID for the cloud identifier",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listUsers,lockUser"
          }
        ],
        "response": [
          {
            "name": "signature",
            "description": "the signed response for the cloud identifier",
            "type": "string"
          },
          {
            "name": "cloudidentifier",
            "description": "the cloud identifier",
            "type": "string"
          },
          {
            "name": "userid",
            "description": "the user ID for the cloud identifier",
            "type": "string"
          }
        ]
      },
      {
        "name": "listInternalLoadBalancerVMs",
        "description": "List internal LB VMs.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the Internal LB VM",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "forvpc",
            "description": "if true is passed for this parameter, list only VPC Internal LB VMs",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the Internal LB VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "podid",
            "description": "the Pod ID of the Internal LB VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "hostid",
            "description": "the host ID of the Internal LB VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the Internal LB VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "revertToVMSnapshot,listVirtualMachines"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "List Internal LB VMs by VPC",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "restartVPC"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "the state of the Internal LB VM",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "list by network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "scriptsversion",
            "description": "the version of scripts",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the router",
            "type": "string"
          },
          {
            "name": "guestipaddress",
            "description": "the guest IP address for the router",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID associated with the router",
            "type": "string"
          },
          {
            "name": "guestnetmask",
            "description": "the guest netmask for the router",
            "type": "string"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with the router",
            "type": "set",
            "response": [
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "guestmacaddress",
            "description": "the guest MAC address for the router",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the router",
            "type": "state"
          },
          {
            "name": "project",
            "description": "the project name of the address",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the router",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the router",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicnetworkid",
            "description": "the ID of the corresponding public network",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the router",
            "type": "string"
          },
          {
            "name": "linklocalnetworkid",
            "description": "the ID of the corresponding link local network",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the router",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the router",
            "type": "string"
          },
          {
            "name": "redundantstate",
            "description": "the state of redundant virtual router",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the router",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the router",
            "type": "string"
          },
          {
            "name": "guestnetworkid",
            "description": "the ID of the corresponding guest network",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the router",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the router",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the router",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain associated with the router",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the id of the router",
            "type": "string"
          },
          {
            "name": "vpcid",
            "description": "VPC the router belongs to",
            "type": "string"
          },
          {
            "name": "isredundantrouter",
            "description": "if this router is an redundant virtual router",
            "type": "boolean"
          },
          {
            "name": "ip6dns1",
            "description": "the first IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "role",
            "description": "role of the domain router",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the router",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the router",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the router",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the router",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the router",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the router",
            "type": "string"
          },
          {
            "name": "templateversion",
            "description": "the version of template",
            "type": "string"
          },
          {
            "name": "ip6dns2",
            "description": "the second IPv6 DNS for the router",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the ipaddress",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the router was created",
            "type": "date"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the router",
            "type": "string"
          }
        ]
      },
      {
        "name": "createFirewallRule",
        "description": "Creates a firewall rule for a given ip address",
        "isasync": true,
        "related": "listEgressFirewallRules",
        "params": [
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "type",
            "description": "type of firewallrule: system/user",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "endport",
            "description": "the ending port of firewall rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddressid",
            "description": "the IP address id of the port forwarding rule",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "startport",
            "description": "the starting port of firewall rule",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "protocol",
            "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "protocol",
            "description": "the protocol of the firewall rule",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "id",
            "description": "the ID of the firewall rule",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the firewall rule",
            "type": "string"
          },
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the firewall rule",
            "type": "string"
          },
          {
            "name": "endport",
            "description": "the ending port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of the firewall rule",
            "type": "string"
          },
          {
            "name": "startport",
            "description": "the starting port of firewall rule's port range",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateResourceCount",
        "description": "Recalculate and update resource count for an account or domain.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "account",
            "description": "Update resource count for a specified account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "If account parameter specified then updates resource counts for a specified account in this domain else update resource counts for all accounts & child domains in specified domain.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "projectid",
            "description": "Update resource limits for project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "resourcetype",
            "description": "Type of resource to update. If specifies valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 and 11. If not specified will update all resource counts0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create.3 - Snapshot. Number of snapshots a user can create.4 - Template. Number of templates that a user can register/create.5 - Project. Number of projects that a user can create.6 - Network. Number of guest network a user can create.7 - VPC. Number of VPC a user can create.8 - CPU. Total number of CPU cores a user can use.9 - Memory. Total Memory (in MB) a user can use.10 - PrimaryStorage. Total primary storage space (in GiB) a user can use.11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use.",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "resourcetype",
            "description": "resource type. Values include 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name for which resource count's are updated",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID for which resource count's are updated",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id for which resource count's are updated",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account for which resource count's are updated",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name for which resource count's are updated",
            "type": "string"
          },
          {
            "name": "resourcecount",
            "description": "resource count",
            "type": "long"
          }
        ]
      },
      {
        "name": "addNetworkServiceProvider",
        "description": "Adds a network serviceProvider to a physical network",
        "since": "3.0.0",
        "isasync": true,
        "related": "updateNetworkServiceProvider",
        "params": [
          {
            "name": "destinationphysicalnetworkid",
            "description": "the destination Physical Network ID to bridge to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "name",
            "description": "the name for the physical network service provider",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID to add the provider to",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "servicelist",
            "description": "the list of services to be enabled for this physical network service provider",
            "type": "list",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "state of the network provider",
            "type": "string"
          },
          {
            "name": "destinationphysicalnetworkid",
            "description": "the destination physical network",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "canenableindividualservice",
            "description": "true if individual services can be enabled/disabled",
            "type": "boolean"
          },
          {
            "name": "servicelist",
            "description": "services for this provider",
            "type": "list"
          },
          {
            "name": "name",
            "description": "the provider name",
            "type": "string"
          },
          {
            "name": "id",
            "description": "uuid of the network provider",
            "type": "string"
          }
        ]
      },
      {
        "name": "rebootSystemVm",
        "description": "Reboots a system VM.",
        "isasync": true,
        "related": "scaleSystemVm",
        "params": [
          {
            "name": "id",
            "description": "The ID of the system virtual machine",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "rebootSystemVm,scaleSystemVm"
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          }
        ]
      },
      {
        "name": "revertToVMSnapshot",
        "description": "Revert VM from a vmsnapshot.",
        "since": "4.2.0",
        "isasync": true,
        "related": "listVirtualMachines",
        "params": [
          {
            "name": "vmsnapshotid",
            "description": "The ID of the vm snapshot",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              }
            ]
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              }
            ]
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          }
        ]
      },
      {
        "name": "markDefaultZoneForAccount",
        "description": "Marks a default zone for this account",
        "since": "4.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "zoneid",
            "description": "The Zone ID with which the account is to be marked.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "domainid",
            "description": "Marks the account that belongs to the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "account",
            "description": "Name of the account that is to be marked.",
            "type": "string",
            "length": 255,
            "required": true,
            "related": "markDefaultZoneForAccount"
          }
        ],
        "response": [
          {
            "name": "user",
            "description": "the list of users associated with account",
            "type": "list",
            "response": [
              {
                "name": "id",
                "description": "the user ID",
                "type": "string"
              },
              {
                "name": "accounttype",
                "description": "the account type of the user",
                "type": "short"
              },
              {
                "name": "account",
                "description": "the account name of the user",
                "type": "string"
              },
              {
                "name": "username",
                "description": "the user name",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if user is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "accountid",
                "description": "the account ID of the user",
                "type": "string"
              },
              {
                "name": "created",
                "description": "the date and time the user account was created",
                "type": "date"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the user",
                "type": "string"
              },
              {
                "name": "state",
                "description": "the user state",
                "type": "string"
              },
              {
                "name": "apikey",
                "description": "the api key of the user",
                "type": "string"
              },
              {
                "name": "lastname",
                "description": "the user lastname",
                "type": "string"
              },
              {
                "name": "secretkey",
                "description": "the secret key of the user",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the user",
                "type": "string"
              },
              {
                "name": "firstname",
                "description": "the user firstname",
                "type": "string"
              },
              {
                "name": "iscallerchilddomain",
                "description": "the boolean value representing if the updating target is in caller's child domain",
                "type": "boolean"
              },
              {
                "name": "email",
                "description": "the user email address",
                "type": "string"
              },
              {
                "name": "timezone",
                "description": "the timezone user was created in",
                "type": "string"
              }
            ]
          },
          {
            "name": "vmrunning",
            "description": "the total number of virtual machines running for this account",
            "type": "integer"
          },
          {
            "name": "iptotal",
            "description": "the total number of public ip addresses allocated for this account",
            "type": "long"
          },
          {
            "name": "volumetotal",
            "description": "the total volume being used by this account",
            "type": "long"
          },
          {
            "name": "volumelimit",
            "description": "the total volume which can be used by this account",
            "type": "string"
          },
          {
            "name": "iplimit",
            "description": "the total number of public ip addresses this account can acquire",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the account",
            "type": "string"
          },
          {
            "name": "volumeavailable",
            "description": "the total volume available for this account",
            "type": "string"
          },
          {
            "name": "networklimit",
            "description": "the total number of networks the account can own",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "id of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "defaultzoneid",
            "description": "the default zone of the account",
            "type": "string"
          },
          {
            "name": "vmtotal",
            "description": "the total number of virtual machines deployed by this account",
            "type": "long"
          },
          {
            "name": "snapshotlimit",
            "description": "the total number of snapshots which can be stored by this account",
            "type": "string"
          },
          {
            "name": "cpulimit",
            "description": "the total number of cpu cores the account can own",
            "type": "string"
          },
          {
            "name": "projecttotal",
            "description": "the total number of projects being administrated by this account",
            "type": "long"
          },
          {
            "name": "receivedbytes",
            "description": "the total number of network traffic bytes received",
            "type": "long"
          },
          {
            "name": "memoryavailable",
            "description": "the total memory (in MB) available to be created for this account",
            "type": "string"
          },
          {
            "name": "templateavailable",
            "description": "the total number of templates available to be created by this account",
            "type": "string"
          },
          {
            "name": "vmavailable",
            "description": "the total number of virtual machines available for this account to acquire",
            "type": "string"
          },
          {
            "name": "primarystoragetotal",
            "description": "the total primary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "templatetotal",
            "description": "the total number of templates which have been created by this account",
            "type": "long"
          },
          {
            "name": "secondarystoragelimit",
            "description": "the total secondary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "templatelimit",
            "description": "the total number of templates which can be created by this account",
            "type": "string"
          },
          {
            "name": "ipavailable",
            "description": "the total number of public ip addresses available for this account to acquire",
            "type": "string"
          },
          {
            "name": "snapshotavailable",
            "description": "the total number of snapshots available for this account",
            "type": "string"
          },
          {
            "name": "networkavailable",
            "description": "the total number of networks available to be created for this account",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "account type (admin, domain-admin, user)",
            "type": "short"
          },
          {
            "name": "iscleanuprequired",
            "description": "true if the account requires cleanup",
            "type": "boolean"
          },
          {
            "name": "secondarystoragetotal",
            "description": "the total secondary storage space (in GiB) owned by account",
            "type": "long"
          },
          {
            "name": "networktotal",
            "description": "the total number of networks owned by account",
            "type": "long"
          },
          {
            "name": "networkdomain",
            "description": "the network domain",
            "type": "string"
          },
          {
            "name": "vmstopped",
            "description": "the total number of virtual machines stopped for this account",
            "type": "integer"
          },
          {
            "name": "projectavailable",
            "description": "the total number of projects available for administration by this account",
            "type": "string"
          },
          {
            "name": "vpcavailable",
            "description": "the total number of vpcs available to be created for this account",
            "type": "string"
          },
          {
            "name": "secondarystorageavailable",
            "description": "the total secondary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if account is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "vmlimit",
            "description": "the total number of virtual machines that can be deployed by this account",
            "type": "string"
          },
          {
            "name": "cputotal",
            "description": "the total number of cpu cores owned by account",
            "type": "long"
          },
          {
            "name": "vpclimit",
            "description": "the total number of vpcs the account can own",
            "type": "string"
          },
          {
            "name": "sentbytes",
            "description": "the total number of network traffic bytes sent",
            "type": "long"
          },
          {
            "name": "primarystoragelimit",
            "description": "the total primary storage space (in GiB) the account can own",
            "type": "string"
          },
          {
            "name": "primarystorageavailable",
            "description": "the total primary storage space (in GiB) available to be used for this account",
            "type": "string"
          },
          {
            "name": "cpuavailable",
            "description": "the total number of cpu cores available to be created for this account",
            "type": "string"
          },
          {
            "name": "snapshottotal",
            "description": "the total number of snapshots stored by this account",
            "type": "long"
          },
          {
            "name": "memorylimit",
            "description": "the total memory (in MB) the account can own",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the total memory (in MB) owned by account",
            "type": "long"
          },
          {
            "name": "domain",
            "description": "name of the Domain the account belongs too",
            "type": "string"
          },
          {
            "name": "projectlimit",
            "description": "the total number of projects the account can own",
            "type": "string"
          },
          {
            "name": "vpctotal",
            "description": "the total number of vpcs owned by account",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the id of the account",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the account",
            "type": "string"
          },
          {
            "name": "accountdetails",
            "description": "details for the account",
            "type": "map"
          }
        ]
      },
      {
        "name": "lockUser",
        "description": "Locks a user account",
        "isasync": false,
        "related": "listUsers",
        "params": [
          {
            "name": "id",
            "description": "Locks user by user ID.",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listUsers,lockUser"
          }
        ],
        "response": [
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          },
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          }
        ]
      },
      {
        "name": "listVirtualMachines",
        "description": "List the virtual machines owned by the account.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "zoneid",
            "description": "the availability zone ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "state",
            "description": "state of the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "name of the virtual machine",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isoid",
            "description": "list vms by iso",
            "type": "uuid",
            "length": 255,
            "required": false
          },
          {
            "name": "groupid",
            "description": "the group ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "details",
            "description": "comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "forvirtualnetwork",
            "description": "list by network type; true if need to list vms using Virtual Network, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the pod ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "hypervisor",
            "description": "the target hypervisor for the template",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "list vms by vpc",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "restartVPC"
          },
          {
            "name": "storageid",
            "description": "the storage ID where vm's volumes belong to",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "findStoragePoolsForMigration"
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "affinitygroupid",
            "description": "list vms by affinity group",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVirtualMachines"
          },
          {
            "name": "networkid",
            "description": "list by network id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "hostid",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts"
          },
          {
            "name": "templateid",
            "description": "list vms by template",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIsos"
          }
        ],
        "response": [
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the vm",
            "type": "long"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          },
          {
            "name": "hostid",
            "description": "the ID of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "templatedisplaytext",
            "description": " an alternate display text of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "rootdeviceid",
            "description": "device ID of the root volume",
            "type": "long"
          },
          {
            "name": "memory",
            "description": "the memory allocated for the virtual machine",
            "type": "integer"
          },
          {
            "name": "password",
            "description": "the password (if exists) of the virtual machine",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with vm",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "instancename",
            "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
            "type": "string"
          },
          {
            "name": "securitygroup",
            "description": "list of security groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "account",
                "description": "the account owning the security group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the security group",
                "type": "string"
              },
              {
                "name": "egressrule",
                "description": "the list of egress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "project",
                "description": "the project name of the group",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id of the group",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with the rule",
                "type": "set",
                "response": [
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "domain",
                "description": "the domain name of the security group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the security group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the security group",
                "type": "string"
              },
              {
                "name": "ingressrule",
                "description": "the list of ingress rules associated with the security group",
                "type": "set",
                "response": [
                  {
                    "name": "protocol",
                    "description": "the protocol of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "endport",
                    "description": "the ending IP of the security group rule ",
                    "type": "integer"
                  },
                  {
                    "name": "startport",
                    "description": "the starting IP of the security group rule",
                    "type": "integer"
                  },
                  {
                    "name": "ruleid",
                    "description": "the id of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "securitygroupname",
                    "description": "security group name",
                    "type": "string"
                  },
                  {
                    "name": "cidr",
                    "description": "the CIDR notation for the base IP address of the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "account owning the security group rule",
                    "type": "string"
                  },
                  {
                    "name": "icmptype",
                    "description": "the type of the ICMP message response",
                    "type": "integer"
                  },
                  {
                    "name": "icmpcode",
                    "description": "the code for the ICMP message response",
                    "type": "integer"
                  }
                ]
              },
              {
                "name": "id",
                "description": "the ID of the security group",
                "type": "string"
              }
            ]
          },
          {
            "name": "displayvm",
            "description": "an optional field whether to the display the vm to the end user or not.",
            "type": "boolean"
          },
          {
            "name": "zoneid",
            "description": "the ID of the availablility zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date when this virtual machine was created",
            "type": "date"
          },
          {
            "name": "templateid",
            "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
            "type": "string"
          },
          {
            "name": "cpunumber",
            "description": "the number of cpu this virtual machine is running with",
            "type": "integer"
          },
          {
            "name": "serviceofferingname",
            "description": "the name of the service offering of the virtual machine",
            "type": "string"
          },
          {
            "name": "keypair",
            "description": "ssh key-pair",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "displayname",
            "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the service offering",
            "type": "boolean"
          },
          {
            "name": "nic",
            "description": "the list of nics associated with vm",
            "type": "set",
            "response": [
              {
                "name": "networkname",
                "description": "the name of the corresponding network",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the nic",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "ip6address",
                "description": "the IPv6 address of network",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if nic is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "isolationuri",
                "description": "the isolation uri of the nic",
                "type": "string"
              },
              {
                "name": "secondaryip",
                "description": "the Secondary ipv4 addr of nic",
                "type": "list"
              },
              {
                "name": "macaddress",
                "description": "true if nic is default, false otherwise",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "the broadcast uri of the nic",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the nic",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the netmask of the nic",
                "type": "string"
              },
              {
                "name": "networkid",
                "description": "the ID of the corresponding network",
                "type": "string"
              },
              {
                "name": "ipaddress",
                "description": "the ip address of the nic",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the gateway of the nic",
                "type": "string"
              },
              {
                "name": "type",
                "description": "the type of the nic",
                "type": "string"
              }
            ]
          },
          {
            "name": "name",
            "description": "the name of the virtual machine",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the password rest feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "diskiowrite",
            "description": "the write (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "templatename",
            "description": "the name of the template for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskkbswrite",
            "description": "the write (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "isoname",
            "description": "the name of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "isoid",
            "description": "the ID of the ISO attached to the virtual machine",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account associated with the virtual machine",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the name of the domain in which the virtual machine exists",
            "type": "string"
          },
          {
            "name": "rootdevicetype",
            "description": "device type of the root volume",
            "type": "string"
          },
          {
            "name": "groupid",
            "description": "the group ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the availability zone for the virtual machine",
            "type": "string"
          },
          {
            "name": "diskioread",
            "description": "the read (io) of disk on the vm",
            "type": "long"
          },
          {
            "name": "group",
            "description": "the group name of the virtual machine",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
            "type": "boolean"
          },
          {
            "name": "publicipid",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the name of the host for the virtual machine",
            "type": "string"
          },
          {
            "name": "servicestate",
            "description": "State of the Service from LB rule",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the virtual machine",
            "type": "string"
          },
          {
            "name": "haenable",
            "description": "true if high-availability is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuspeed",
            "description": "the speed of each cpu",
            "type": "integer"
          },
          {
            "name": "diskkbsread",
            "description": "the read (bytes) of disk on the vm",
            "type": "long"
          },
          {
            "name": "guestosid",
            "description": "Os type ID of the virtual machine",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "public IP address id associated with vm via Static nat rule",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vm",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the vm's CPU currently used",
            "type": "string"
          },
          {
            "name": "affinitygroup",
            "description": "list of affinity groups associated with the virtual machine",
            "type": "set",
            "response": [
              {
                "name": "type",
                "description": "the type of the affinity group",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the domain ID of the affinity group",
                "type": "string"
              },
              {
                "name": "description",
                "description": "the description of the affinity group",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the name of the affinity group",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain name of the affinity group",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account owning the affinity group",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the ID of the affinity group",
                "type": "string"
              },
              {
                "name": "virtualmachineIds",
                "description": "virtual machine Ids associated with this affinity group ",
                "type": "list"
              }
            ]
          },
          {
            "name": "isodisplaytext",
            "description": "an alternate display text of the ISO attached to the virtual machine",
            "type": "string"
          }
        ]
      },
      {
        "name": "restartVPC",
        "description": "Restarts a VPC",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "the id of the VPC",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "restartVPC"
          }
        ],
        "response": [
          {
            "name": "restartrequired",
            "description": "true VPC requires restart",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain id of the VPC owner",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the vpc",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the VPC",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone the VPC belongs to",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this VPC was created",
            "type": "date"
          },
          {
            "name": "name",
            "description": "the name of the VPC",
            "type": "string"
          },
          {
            "name": "network",
            "description": "the list of networks belongign to the VPC",
            "type": "list",
            "response": [
              {
                "name": "ispersistent",
                "description": "list networks that are persistent",
                "type": "boolean"
              },
              {
                "name": "networkdomain",
                "description": "the network domain",
                "type": "string"
              },
              {
                "name": "isdefault",
                "description": "true if network is default, false otherwise",
                "type": "boolean"
              },
              {
                "name": "reservediprange",
                "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
                "type": "string"
              },
              {
                "name": "networkcidr",
                "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
                "type": "string"
              },
              {
                "name": "traffictype",
                "description": "the traffic type of the network",
                "type": "string"
              },
              {
                "name": "id",
                "description": "the id of the network",
                "type": "string"
              },
              {
                "name": "issystem",
                "description": "true if network is system, false otherwise",
                "type": "boolean"
              },
              {
                "name": "projectid",
                "description": "the project id of the ipaddress",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "zone id of the network",
                "type": "string"
              },
              {
                "name": "state",
                "description": "state of the network",
                "type": "string"
              },
              {
                "name": "networkofferingname",
                "description": "name of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "canusefordeploy",
                "description": "list networks available for vm deployment",
                "type": "boolean"
              },
              {
                "name": "domain",
                "description": "the domain name of the network owner",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the owner of the network",
                "type": "string"
              },
              {
                "name": "displaynetwork",
                "description": "an optional field, whether to the display the network to the end user or not.",
                "type": "boolean"
              },
              {
                "name": "domainid",
                "description": "the domain id of the network owner",
                "type": "string"
              },
              {
                "name": "netmask",
                "description": "the network's netmask",
                "type": "string"
              },
              {
                "name": "broadcastdomaintype",
                "description": "Broadcast domain type of the network",
                "type": "string"
              },
              {
                "name": "tags",
                "description": "the list of resource tags associated with network",
                "type": "list",
                "response": [
                  {
                    "name": "projectid",
                    "description": "the project id the tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "resourceid",
                    "description": "id of the resource",
                    "type": "string"
                  },
                  {
                    "name": "resourcetype",
                    "description": "resource type",
                    "type": "string"
                  },
                  {
                    "name": "domain",
                    "description": "the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "domainid",
                    "description": "the ID of the domain associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "account",
                    "description": "the account associated with the tag",
                    "type": "string"
                  },
                  {
                    "name": "project",
                    "description": "the project name where tag belongs to",
                    "type": "string"
                  },
                  {
                    "name": "value",
                    "description": "tag value",
                    "type": "string"
                  },
                  {
                    "name": "key",
                    "description": "tag key name",
                    "type": "string"
                  },
                  {
                    "name": "customer",
                    "description": "customer associated with the tag",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "service",
                "description": "the list of services",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the service name",
                    "type": "string"
                  },
                  {
                    "name": "provider",
                    "description": "the service provider name",
                    "type": "list",
                    "response": [
                      {
                        "name": "name",
                        "description": "the provider name",
                        "type": "string"
                      },
                      {
                        "name": "servicelist",
                        "description": "services for this provider",
                        "type": "list"
                      },
                      {
                        "name": "id",
                        "description": "uuid of the network provider",
                        "type": "string"
                      },
                      {
                        "name": "physicalnetworkid",
                        "description": "the physical network this belongs to",
                        "type": "string"
                      },
                      {
                        "name": "destinationphysicalnetworkid",
                        "description": "the destination physical network",
                        "type": "string"
                      },
                      {
                        "name": "canenableindividualservice",
                        "description": "true if individual services can be enabled/disabled",
                        "type": "boolean"
                      },
                      {
                        "name": "state",
                        "description": "state of the network provider",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "capability",
                    "description": "the list of capabilities",
                    "type": "list",
                    "response": [
                      {
                        "name": "canchooseservicecapability",
                        "description": "can this service capability value can be choosable while creatine network offerings",
                        "type": "boolean"
                      },
                      {
                        "name": "name",
                        "description": "the capability name",
                        "type": "string"
                      },
                      {
                        "name": "value",
                        "description": "the capability value",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "name",
                "description": "the name of the network",
                "type": "string"
              },
              {
                "name": "acltype",
                "description": "acl type - access type to the network",
                "type": "string"
              },
              {
                "name": "restartrequired",
                "description": "true network requires restart",
                "type": "boolean"
              },
              {
                "name": "type",
                "description": "the type of the network",
                "type": "string"
              },
              {
                "name": "dns1",
                "description": "the first DNS for the network",
                "type": "string"
              },
              {
                "name": "aclid",
                "description": "ACL Id associated with the VPC network",
                "type": "string"
              },
              {
                "name": "vpcid",
                "description": "VPC the network belongs to",
                "type": "string"
              },
              {
                "name": "broadcasturi",
                "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "networkofferingavailability",
                "description": "availability of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "subdomainaccess",
                "description": "true if users from subdomains can access the domain level network",
                "type": "boolean"
              },
              {
                "name": "vlan",
                "description": "The vlan of the network. This parameter is visible to ROOT admins only",
                "type": "string"
              },
              {
                "name": "ip6gateway",
                "description": "the gateway of IPv6 network",
                "type": "string"
              },
              {
                "name": "networkofferingid",
                "description": "network offering id the network is created from",
                "type": "string"
              },
              {
                "name": "networkofferingdisplaytext",
                "description": "display text of the network offering the network is created from",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the name of the zone the network belongs to",
                "type": "string"
              },
              {
                "name": "cidr",
                "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
                "type": "string"
              },
              {
                "name": "ip6cidr",
                "description": "the cidr of IPv6 network",
                "type": "string"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network id",
                "type": "string"
              },
              {
                "name": "gateway",
                "description": "the network's gateway",
                "type": "string"
              },
              {
                "name": "displaytext",
                "description": "the displaytext of the network",
                "type": "string"
              },
              {
                "name": "dns2",
                "description": "the second DNS for the network",
                "type": "string"
              },
              {
                "name": "specifyipranges",
                "description": "true if network supports specifying ip ranges, false otherwise",
                "type": "boolean"
              },
              {
                "name": "project",
                "description": "the project name of the address",
                "type": "string"
              },
              {
                "name": "related",
                "description": "related to what other network configuration",
                "type": "string"
              }
            ]
          },
          {
            "name": "id",
            "description": "the id of the VPC",
            "type": "string"
          },
          {
            "name": "vpcofferingid",
            "description": "vpc offering id the VPC is created from",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "cidr",
            "description": "the cidr the VPC",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the VPC. Can be Inactive/Enabled",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the owner of the VPC",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the VPC",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the VPC.",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with the project",
            "type": "list",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              }
            ]
          },
          {
            "name": "networkdomain",
            "description": "the network domain of the VPC",
            "type": "string"
          }
        ]
      },
      {
        "name": "replaceNetworkACLList",
        "description": "Replaces ACL associated with a Network or private gateway",
        "isasync": true,
        "params": [
          {
            "name": "networkid",
            "description": "the ID of the network",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "gatewayid",
            "description": "the ID of the private gateway",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "aclid",
            "description": "the ID of the network ACL",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listEgressFirewallRules",
        "description": "Lists all egress firewall rules for network id.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "ipaddressid",
            "description": "the id of IP address of the firwall services",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "Lists rule with the specified ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "id",
            "description": "Lists rule with the specified ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "the id network network for the egress firwall services",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "tags",
            "description": "the list of resource tags associated with the rule",
            "type": "list",
            "response": [
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              },
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ipaddressid",
            "description": "the public ip address id for the firewall rule",
            "type": "string"
          },
          {
            "name": "icmpcode",
            "description": "error code for this icmp message",
            "type": "integer"
          },
          {
            "name": "endport",
            "description": "the ending port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "protocol",
            "description": "the protocol of the firewall rule",
            "type": "string"
          },
          {
            "name": "icmptype",
            "description": "type of the icmp message being sent",
            "type": "integer"
          },
          {
            "name": "ipaddress",
            "description": "the public ip address for the firewall rule",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "the cidr list to forward traffic from",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the rule",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of the firewall rule",
            "type": "string"
          },
          {
            "name": "startport",
            "description": "the starting port of firewall rule's port range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the firewall rule",
            "type": "string"
          }
        ]
      },
      {
        "name": "scaleSystemVm",
        "description": "Scale the service offering for a system vm (console proxy or secondary storage). The system vm must be in a \"Stopped\" state for this command to take effect.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "serviceofferingid",
            "description": "the service offering ID to apply to the system vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "id",
            "description": "The ID of the system vm",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "scaleSystemVm"
          }
        ],
        "response": [
          {
            "name": "linklocalip",
            "description": "the link local IP address for the system vm",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the system VM",
            "type": "string"
          },
          {
            "name": "templateid",
            "description": "the template ID for the system VM",
            "type": "string"
          },
          {
            "name": "hostname",
            "description": "the hostname for the system VM",
            "type": "string"
          },
          {
            "name": "hostid",
            "description": "the host ID for the system VM",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the system VM",
            "type": "string"
          },
          {
            "name": "privatenetmask",
            "description": "the private netmask for the system VM",
            "type": "string"
          },
          {
            "name": "activeviewersessions",
            "description": "the number of active console sessions for the console proxy system vm",
            "type": "integer"
          },
          {
            "name": "privatemacaddress",
            "description": "the private MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "dns1",
            "description": "the first DNS for the system VM",
            "type": "string"
          },
          {
            "name": "systemvmtype",
            "description": "the system VM type",
            "type": "string"
          },
          {
            "name": "privateip",
            "description": "the private IP address for the system VM",
            "type": "string"
          },
          {
            "name": "networkdomain",
            "description": "the network domain for the system VM",
            "type": "string"
          },
          {
            "name": "dns2",
            "description": "the second DNS for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalnetmask",
            "description": "the link local netmask for the system vm",
            "type": "string"
          },
          {
            "name": "publicmacaddress",
            "description": "the public MAC address for the system VM",
            "type": "string"
          },
          {
            "name": "jobid",
            "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "string"
          },
          {
            "name": "publicnetmask",
            "description": "the public netmask for the system VM",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway for the system VM",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the system VM",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the system VM",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name for the system VM",
            "type": "string"
          },
          {
            "name": "linklocalmacaddress",
            "description": "the link local MAC address for the system vm",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address for the system VM",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the system VM",
            "type": "string"
          },
          {
            "name": "jobstatus",
            "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
            "type": "integer"
          },
          {
            "name": "created",
            "description": "the date and time the system VM was created",
            "type": "date"
          }
        ]
      },
      {
        "name": "updateAutoScaleVmGroup",
        "description": "Updates an existing autoscale vm group.",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "scaledownpolicyids",
            "description": "list of scaledown autoscale policies",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "id",
            "description": "the ID of the autoscale group",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateAutoScaleVmGroup"
          },
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "scaleuppolicyids",
            "description": "list of scaleup autoscale policies",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "lbruleid",
            "description": "the load balancer rule ID",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the vm profile",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the vm profile",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the autoscale vm group ID",
            "type": "string"
          },
          {
            "name": "minmembers",
            "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
            "type": "int"
          },
          {
            "name": "account",
            "description": "the account owning the instance group",
            "type": "string"
          },
          {
            "name": "maxmembers",
            "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
            "type": "int"
          },
          {
            "name": "projectid",
            "description": "the project id vm profile",
            "type": "string"
          },
          {
            "name": "scaleuppolicies",
            "description": "list of scaleup autoscale policies",
            "type": "list"
          },
          {
            "name": "vmprofileid",
            "description": "the autoscale profile that contains information about the vms in the vm group.",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vm profile",
            "type": "string"
          },
          {
            "name": "scaledownpolicies",
            "description": "list of scaledown autoscale policies",
            "type": "list"
          },
          {
            "name": "interval",
            "description": "the frequency at which the conditions have to be evaluated",
            "type": "int"
          },
          {
            "name": "state",
            "description": "the current state of the AutoScale Vm Group",
            "type": "string"
          }
        ]
      },
      {
        "name": "listHosts",
        "description": "Lists hosts.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "type",
            "description": "the host type",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "hahost",
            "description": "if true, list only hosts dedicated to HA",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "virtualmachineid",
            "description": "lists hosts in the same cluster as this VM and flag hosts with enough CPU/RAm to host this VM",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "clusterid",
            "description": "lists hosts existing in particular cluster",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "id",
            "description": "the id of the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listHosts"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "resourcestate",
            "description": "list hosts by resource state. Resource state represents current state determined by admin of host, valule can be one of [Enabled, Disabled, Unmanaged, PrepareForMaintenance, ErrorInMaintenance, Maintenance, Error]",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "details",
            "description": "comma separated list of host details requested, value can be a list of [ min, all, capacity, events, stats]",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "podid",
            "description": "the Pod ID for the host",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "cpuspeed",
            "description": "the CPU speed of the host",
            "type": "long"
          },
          {
            "name": "resourcestate",
            "description": "the resource state of the host",
            "type": "string"
          },
          {
            "name": "hahost",
            "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
            "type": "boolean"
          },
          {
            "name": "cpuallocated",
            "description": "the amount of the host's CPU currently allocated",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the host",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the host hypervisor",
            "type": "hypervisortype"
          },
          {
            "name": "version",
            "description": "the host version",
            "type": "string"
          },
          {
            "name": "hasenoughcapacity",
            "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
            "type": "boolean"
          },
          {
            "name": "islocalstorageactive",
            "description": "true if local storage is active, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hosttags",
            "description": "comma-separated list of tags for the host",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the cluster name of the host",
            "type": "string"
          },
          {
            "name": "memoryallocated",
            "description": "the amount of the host's memory currently allocated",
            "type": "long"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "state",
            "description": "the state of the host",
            "type": "status"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "cpunumber",
            "description": "the CPU number of the host",
            "type": "integer"
          },
          {
            "name": "managementserverid",
            "description": "the management server ID of the host",
            "type": "long"
          },
          {
            "name": "capabilities",
            "description": "capabilities of the host",
            "type": "string"
          },
          {
            "name": "oscategoryname",
            "description": "the OS category name of the host",
            "type": "string"
          },
          {
            "name": "memorytotal",
            "description": "the memory total of the host",
            "type": "long"
          },
          {
            "name": "clustertype",
            "description": "the cluster type of the cluster that host belongs to",
            "type": "string"
          },
          {
            "name": "disconnected",
            "description": "true if the host is disconnected. False otherwise.",
            "type": "date"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the host",
            "type": "long"
          },
          {
            "name": "podname",
            "description": "the Pod name of the host",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the host",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the host",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the host",
            "type": "string"
          },
          {
            "name": "oscategoryid",
            "description": "the OS category ID of the host",
            "type": "string"
          },
          {
            "name": "networkkbsread",
            "description": "the incoming network traffic on the host",
            "type": "long"
          },
          {
            "name": "name",
            "description": "the name of the host",
            "type": "string"
          },
          {
            "name": "cpuwithoverprovisioning",
            "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
            "type": "string"
          },
          {
            "name": "events",
            "description": "events available for the host",
            "type": "string"
          },
          {
            "name": "lastpinged",
            "description": "the date and time the host was last pinged",
            "type": "date"
          },
          {
            "name": "type",
            "description": "the host type",
            "type": "type"
          },
          {
            "name": "averageload",
            "description": "the cpu average load on the host",
            "type": "long"
          },
          {
            "name": "hypervisorversion",
            "description": "the hypervisor version",
            "type": "string"
          },
          {
            "name": "clusterid",
            "description": "the cluster ID of the host",
            "type": "string"
          },
          {
            "name": "cpuused",
            "description": "the amount of the host's CPU currently used",
            "type": "string"
          },
          {
            "name": "suitableformigration",
            "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the host",
            "type": "string"
          },
          {
            "name": "memoryused",
            "description": "the amount of the host's memory currently used",
            "type": "long"
          },
          {
            "name": "networkkbswrite",
            "description": "the outgoing network traffic on the host",
            "type": "long"
          }
        ]
      },
      {
        "name": "updateTemplatePermissions",
        "description": "Updates a template visibility permissions. A public template is visible to all accounts within the same domain. A private template is visible only to the owner of the template. A priviledged template is a private template with account permissions added. Only accounts specified under the template permissions are visible to them.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the template ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "listIsos"
          },
          {
            "name": "isfeatured",
            "description": "true for featured template/iso, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectids",
            "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
            "type": "list",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "op",
            "description": "permission operator (add, remove, reset)",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isextractable",
            "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "ispublic",
            "description": "true for public template/iso, false for private templates/isos",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "accounts",
            "description": "a comma delimited list of accounts. If specified, \"op\" parameter has to be passed in.",
            "type": "list",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listVlanIpRanges",
        "description": "Lists all VLAN IP ranges.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN. Default is an \"untagged\" VLAN.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "networkid",
            "description": "network id of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "the domain ID with which the VLAN IP range is associated.  If used with the account parameter, returns all VLAN IP ranges for that account in the specified domain.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "podid",
            "description": "the Pod ID of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "forvirtualnetwork",
            "description": "true if VLAN is of Virtual type, false if Direct",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "the account with which the VLAN IP range is associated. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVlanIpRanges"
          },
          {
            "name": "physicalnetworkid",
            "description": "physical network id of the VLAN IP range",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPhysicalNetworks"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "project who will own the VLAN",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "projectid",
            "description": "the project id of the vlan range",
            "type": "string"
          },
          {
            "name": "ip6cidr",
            "description": "the cidr of IPv6 network",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "endipv6",
            "description": "the end ipv6 of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "ip6gateway",
            "description": "the gateway of IPv6 network",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name for the VLAN IP range",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID for the VLAN IP range",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vlan range",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network id of vlan range",
            "type": "string"
          },
          {
            "name": "startipv6",
            "description": "the start ipv6 of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "description",
            "description": "the description of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "forvirtualnetwork",
            "description": "the virtual network for the VLAN IP range",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the VLAN IP range",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the start ip of the VLAN IP range",
            "type": "string"
          }
        ]
      },
      {
        "name": "listPhysicalNetworks",
        "description": "Lists physical networks",
        "since": "3.0.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "name",
            "description": "search by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "the Zone ID for the physical network",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list physical network by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listPhysicalNetworks"
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "state of the physical network",
            "type": "string"
          },
          {
            "name": "isolationmethods",
            "description": "isolation methods",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "zone id of the physical network",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the physical network owner",
            "type": "string"
          },
          {
            "name": "name",
            "description": "name of the physical network",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the uuid of the physical network",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "comma separated tag",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the vlan of the physical network",
            "type": "string"
          },
          {
            "name": "broadcastdomainrange",
            "description": "Broadcast domain range of the physical network",
            "type": "string"
          },
          {
            "name": "networkspeed",
            "description": "the speed of the physical network",
            "type": "string"
          }
        ]
      },
      {
        "name": "listStorageNetworkIpRange",
        "description": "List a storage network IP range.",
        "since": "3.0.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "optional parameter. Storaget network IP range uuid, if specicied, using it to search the range.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listStorageNetworkIpRange"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "zoneid",
            "description": "optional parameter. Zone uuid, if specicied and both pod uuid and range uuid are absent, using it to search the range.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "podid",
            "description": "optional parameter. Pod uuid, if specicied and range uuid is absent, using it to search the range.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updatePod"
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "netmask",
            "description": "the netmask of the storage network IP range",
            "type": "string"
          },
          {
            "name": "vlan",
            "description": "the ID or VID of the VLAN.",
            "type": "integer"
          },
          {
            "name": "zoneid",
            "description": "the Zone uuid of the storage network IP range",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the start ip of the storage network IP range",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod uuid for the storage network IP range",
            "type": "string"
          },
          {
            "name": "networkid",
            "description": "the network uuid of storage network IP range",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the end ip of the storage network IP range",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the storage network IP range",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the uuid of storage network IP range.",
            "type": "string"
          }
        ]
      },
      {
        "name": "listVpnConnections",
        "description": "Lists site to site vpn connection gateways",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "id of the vpn connection",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVpnConnections"
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "vpcid",
            "description": "id of vpc",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "account",
            "description": "the owner",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the owner",
            "type": "string"
          },
          {
            "name": "esppolicy",
            "description": "ESP policy of the customer gateway",
            "type": "string"
          },
          {
            "name": "cidrlist",
            "description": "guest cidr list of the customer gateway",
            "type": "string"
          },
          {
            "name": "publicip",
            "description": "the public IP address",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "public ip address id of the customer gateway",
            "type": "string"
          },
          {
            "name": "ipsecpsk",
            "description": "IPsec Preshared-Key of the customer gateway",
            "type": "string"
          },
          {
            "name": "esplifetime",
            "description": "Lifetime of ESP SA of customer gateway",
            "type": "long"
          },
          {
            "name": "removed",
            "description": "the date and time the host was removed",
            "type": "date"
          },
          {
            "name": "created",
            "description": "the date and time the host was created",
            "type": "date"
          },
          {
            "name": "ikelifetime",
            "description": "Lifetime of IKE SA of customer gateway",
            "type": "long"
          },
          {
            "name": "dpd",
            "description": "if DPD is enabled for customer gateway",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain id of the owner",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "s2scustomergatewayid",
            "description": "the customer gateway ID",
            "type": "string"
          },
          {
            "name": "state",
            "description": "State of vpn connection",
            "type": "string"
          },
          {
            "name": "s2svpngatewayid",
            "description": "the vpn gateway ID",
            "type": "string"
          },
          {
            "name": "ikepolicy",
            "description": "IKE policy of the customer gateway",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteHost",
        "description": "Deletes a host.",
        "isasync": false,
        "params": [
          {
            "name": "forcedestroylocalstorage",
            "description": "Force destroy local storage on this host. All VMs created on this local storage will be destroyed",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the host ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "forced",
            "description": "Force delete the host. All HA enabled vms running on the host will be put to HA; HA disabled ones will be stopped",
            "type": "boolean",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listVPCOfferings",
        "description": "Lists VPC offerings",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "list VPC offerings by display text",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list VPC offerings by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVPCOfferings"
          },
          {
            "name": "name",
            "description": "list VPC offerings by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isdefault",
            "description": "true if need to list only default VPC offerings. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "supportedservices",
            "description": "list VPC offerings supporting certain services",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "list VPC offerings by state",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "state",
            "description": "state of the vpc offering. Can be Disabled/Enabled",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the vpc offering",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  },
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  }
                ]
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              }
            ]
          },
          {
            "name": "created",
            "description": "the date this vpc offering was created",
            "type": "date"
          },
          {
            "name": "id",
            "description": "the id of the vpc offering",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the vpc offering.",
            "type": "string"
          },
          {
            "name": "isdefault",
            "description": "true if vpc offering is default, false otherwise",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "updateNetworkOffering",
        "description": "Updates a network offering.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "sortkey",
            "description": "sort key of the network offering, integer",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "displaytext",
            "description": "the display text of the network offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the id of the network offering",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "updateNetworkOffering"
          },
          {
            "name": "state",
            "description": "update state for the network offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the network offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "availability",
            "description": "the availability of network offering. Default value is Required for Guest Virtual network offering; Optional for Guest Direct network offering",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "maxconnections",
            "description": "maximum number of concurrent connections supported by the network offering",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "guestiptype",
            "description": "guest type of the network offering, can be Shared or Isolated",
            "type": "string"
          },
          {
            "name": "displaytext",
            "description": "an alternate display text of the network offering.",
            "type": "string"
          },
          {
            "name": "availability",
            "description": "availability of the network offering",
            "type": "string"
          },
          {
            "name": "conservemode",
            "description": "true if network offering is ip conserve mode enabled",
            "type": "boolean"
          },
          {
            "name": "tags",
            "description": "the tags for the network offering",
            "type": "string"
          },
          {
            "name": "forvpc",
            "description": "true if network offering can be used by VPC networks only",
            "type": "boolean"
          },
          {
            "name": "created",
            "description": "the date this network offering was created",
            "type": "date"
          },
          {
            "name": "networkrate",
            "description": "data transfer rate in megabits per second allowed.",
            "type": "integer"
          },
          {
            "name": "isdefault",
            "description": "true if network offering is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "traffictype",
            "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
            "type": "string"
          },
          {
            "name": "specifyvlan",
            "description": "true if network offering supports vlans, false otherwise",
            "type": "boolean"
          },
          {
            "name": "ispersistent",
            "description": "true if network offering supports persistent networks, false otherwise",
            "type": "boolean"
          },
          {
            "name": "egressdefaultpolicy",
            "description": "true if network offering supports persistent networks, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the name of the network offering",
            "type": "string"
          },
          {
            "name": "maxconnections",
            "description": "maximum number of concurrents connections to be handled by lb",
            "type": "integer"
          },
          {
            "name": "specifyipranges",
            "description": "true if network offering supports specifying ip ranges, false otherwise",
            "type": "boolean"
          },
          {
            "name": "serviceofferingid",
            "description": "the ID of the service offering used by virtual router provider",
            "type": "string"
          },
          {
            "name": "service",
            "description": "the list of supported services",
            "type": "list",
            "response": [
              {
                "name": "capability",
                "description": "the list of capabilities",
                "type": "list",
                "response": [
                  {
                    "name": "name",
                    "description": "the capability name",
                    "type": "string"
                  },
                  {
                    "name": "canchooseservicecapability",
                    "description": "can this service capability value can be choosable while creatine network offerings",
                    "type": "boolean"
                  },
                  {
                    "name": "value",
                    "description": "the capability value",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "name",
                "description": "the service name",
                "type": "string"
              },
              {
                "name": "provider",
                "description": "the service provider name",
                "type": "list",
                "response": [
                  {
                    "name": "canenableindividualservice",
                    "description": "true if individual services can be enabled/disabled",
                    "type": "boolean"
                  },
                  {
                    "name": "servicelist",
                    "description": "services for this provider",
                    "type": "list"
                  },
                  {
                    "name": "name",
                    "description": "the provider name",
                    "type": "string"
                  },
                  {
                    "name": "physicalnetworkid",
                    "description": "the physical network this belongs to",
                    "type": "string"
                  },
                  {
                    "name": "id",
                    "description": "uuid of the network provider",
                    "type": "string"
                  },
                  {
                    "name": "destinationphysicalnetworkid",
                    "description": "the destination physical network",
                    "type": "string"
                  },
                  {
                    "name": "state",
                    "description": "state of the network provider",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "state",
            "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
            "type": "string"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with network offering",
            "type": "map"
          },
          {
            "name": "id",
            "description": "the id of the network offering",
            "type": "string"
          }
        ]
      },
      {
        "name": "deletePhysicalNetwork",
        "description": "Deletes a Physical Network.",
        "since": "3.0.0",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the Physical network",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteInstanceGroup",
        "description": "Deletes a vm group",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the ID of the instance group",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "addBaremetalDhcp",
        "description": "adds a baremetal dhcp server",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "url",
            "description": "URL of the external dhcp appliance.",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "physicalnetworkid",
            "description": "the Physical Network ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "podid",
            "description": "Pod Id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updatePod"
          },
          {
            "name": "password",
            "description": "Credentials to reach external dhcp device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "username",
            "description": "Credentials to reach external dhcp device",
            "type": "string",
            "length": 255,
            "required": true
          },
          {
            "name": "dhcpservertype",
            "description": "Type of dhcp device",
            "type": "string",
            "length": 255,
            "required": true
          }
        ],
        "response": [
          {
            "name": "provider",
            "description": "name of the provider",
            "type": "string"
          },
          {
            "name": "dhcpservertype",
            "description": "name of the provider",
            "type": "string"
          },
          {
            "name": "id",
            "description": "device id of ",
            "type": "string"
          },
          {
            "name": "physicalnetworkid",
            "description": "the physical network to which this external dhcp device belongs to",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteVPCOffering",
        "description": "Deletes VPC offering",
        "isasync": true,
        "params": [
          {
            "name": "id",
            "description": "the ID of the VPC offering",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          },
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "listVpnUsers",
        "description": "Lists vpn users",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "username",
            "description": "the username of the vpn user.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "The uuid of the Vpn user",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listVpnUsers"
          }
        ],
        "response": [
          {
            "name": "username",
            "description": "the username of the vpn user",
            "type": "string"
          },
          {
            "name": "projectid",
            "description": "the project id of the vpn",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the vpn",
            "type": "string"
          },
          {
            "name": "domainid",
            "description": "the domain id of the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account of the remote access vpn",
            "type": "string"
          },
          {
            "name": "id",
            "description": "the vpn userID",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the Vpn User",
            "type": "string"
          }
        ]
      },
      {
        "name": "updatePod",
        "description": "Updates a Pod.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "endip",
            "description": "the ending IP address for the Pod",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the Pod",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updatePod"
          },
          {
            "name": "startip",
            "description": "the starting IP address for the Pod",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "gateway",
            "description": "the gateway for the Pod",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "netmask",
            "description": "the netmask of the Pod",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "the name of the Pod",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "allocationstate",
            "description": "Allocation state of this cluster for allocation of new resources",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "allocationstate",
            "description": "the allocation state of the Pod",
            "type": "string"
          },
          {
            "name": "startip",
            "description": "the starting IP for the Pod",
            "type": "string"
          },
          {
            "name": "endip",
            "description": "the ending IP for the Pod",
            "type": "string"
          },
          {
            "name": "gateway",
            "description": "the gateway of the Pod",
            "type": "string"
          },
          {
            "name": "capacity",
            "description": "the capacity of the Pod",
            "type": "list",
            "response": [
              {
                "name": "percentused",
                "description": "the percentage of capacity currently in use",
                "type": "string"
              },
              {
                "name": "zonename",
                "description": "the Zone name",
                "type": "string"
              },
              {
                "name": "zoneid",
                "description": "the Zone ID",
                "type": "string"
              },
              {
                "name": "clusterid",
                "description": "the Cluster ID",
                "type": "string"
              },
              {
                "name": "podid",
                "description": "the Pod ID",
                "type": "string"
              },
              {
                "name": "capacityused",
                "description": "the capacity currently in use",
                "type": "long"
              },
              {
                "name": "type",
                "description": "the capacity type",
                "type": "short"
              },
              {
                "name": "clustername",
                "description": "the Cluster name",
                "type": "string"
              },
              {
                "name": "podname",
                "description": "the Pod name",
                "type": "string"
              },
              {
                "name": "capacitytotal",
                "description": "the total capacity available",
                "type": "long"
              }
            ]
          },
          {
            "name": "id",
            "description": "the ID of the Pod",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the Pod",
            "type": "string"
          },
          {
            "name": "netmask",
            "description": "the netmask of the Pod",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the Pod",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the Pod",
            "type": "string"
          }
        ]
      },
      {
        "name": "deleteCluster",
        "description": "Deletes a cluster.",
        "isasync": false,
        "params": [
          {
            "name": "id",
            "description": "the cluster ID",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          }
        ],
        "response": [
          {
            "name": "success",
            "description": "true if operation is executed successfully",
            "type": "boolean"
          },
          {
            "name": "displaytext",
            "description": "any text associated with the success or failure",
            "type": "string"
          }
        ]
      },
      {
        "name": "updateNetworkServiceProvider",
        "description": "Updates a network serviceProvider of a physical network",
        "since": "3.0.0",
        "isasync": true,
        "related": "",
        "params": [
          {
            "name": "id",
            "description": "network service provider id",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": "updateNetworkServiceProvider"
          },
          {
            "name": "servicelist",
            "description": "the list of services to be enabled for this physical network service provider",
            "type": "list",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "Enabled/Disabled/Shutdown the physical network service provider",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "physicalnetworkid",
            "description": "the physical network this belongs to",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the provider name",
            "type": "string"
          },
          {
            "name": "servicelist",
            "description": "services for this provider",
            "type": "list"
          },
          {
            "name": "id",
            "description": "uuid of the network provider",
            "type": "string"
          },
          {
            "name": "destinationphysicalnetworkid",
            "description": "the destination physical network",
            "type": "string"
          },
          {
            "name": "state",
            "description": "state of the network provider",
            "type": "string"
          },
          {
            "name": "canenableindividualservice",
            "description": "true if individual services can be enabled/disabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "findStoragePoolsForMigration",
        "description": "Lists storage pools available for migration of a volume.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "the ID of the volume",
            "type": "uuid",
            "length": 255,
            "required": true,
            "related": ""
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "suitableformigration",
            "description": "true if this pool is suitable to migrate a volume, false otherwise",
            "type": "boolean"
          },
          {
            "name": "path",
            "description": "the storage pool path",
            "type": "string"
          },
          {
            "name": "podname",
            "description": "the Pod name of the storage pool",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor type of the storage pool",
            "type": "string"
          },
          {
            "name": "podid",
            "description": "the Pod ID of the storage pool",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the Zone name of the storage pool",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the storage pool was created",
            "type": "date"
          },
          {
            "name": "type",
            "description": "the storage pool type",
            "type": "string"
          },
          {
            "name": "scope",
            "description": "the scope of the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeallocated",
            "description": "the host's currently allocated disk size",
            "type": "long"
          },
          {
            "name": "clusterid",
            "description": "the ID of the cluster for the storage pool",
            "type": "string"
          },
          {
            "name": "disksizeused",
            "description": "the host's currently used disk size",
            "type": "long"
          },
          {
            "name": "id",
            "description": "the ID of the storage pool",
            "type": "string"
          },
          {
            "name": "name",
            "description": "the name of the storage pool",
            "type": "string"
          },
          {
            "name": "ipaddress",
            "description": "the IP address of the storage pool",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the state of the storage pool",
            "type": "storagepoolstatus"
          },
          {
            "name": "disksizetotal",
            "description": "the total disk size of the storage pool",
            "type": "long"
          },
          {
            "name": "tags",
            "description": "the tags for the storage pool",
            "type": "string"
          },
          {
            "name": "capacityiops",
            "description": "IOPS CloudStack can provision from this storage pool",
            "type": "long"
          },
          {
            "name": "zoneid",
            "description": "the Zone ID of the storage pool",
            "type": "string"
          },
          {
            "name": "clustername",
            "description": "the name of the cluster for the storage pool",
            "type": "string"
          }
        ]
      },
      {
        "name": "listUsers",
        "description": "Lists user accounts",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "state",
            "description": "List users by state of the user account.",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "List user by ID.",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listUsers"
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "username",
            "description": "List user by the username",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "accounttype",
            "description": "List users by account type. Valid types include admin, domain-admin, read-only-admin, or user.",
            "type": "long",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "id",
            "description": "the user ID",
            "type": "string"
          },
          {
            "name": "secretkey",
            "description": "the secret key of the user",
            "type": "string"
          },
          {
            "name": "domain",
            "description": "the domain name of the user",
            "type": "string"
          },
          {
            "name": "state",
            "description": "the user state",
            "type": "string"
          },
          {
            "name": "accountid",
            "description": "the account ID of the user",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date and time the user account was created",
            "type": "date"
          },
          {
            "name": "isdefault",
            "description": "true if user is default, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domainid",
            "description": "the domain ID of the user",
            "type": "string"
          },
          {
            "name": "email",
            "description": "the user email address",
            "type": "string"
          },
          {
            "name": "timezone",
            "description": "the timezone user was created in",
            "type": "string"
          },
          {
            "name": "apikey",
            "description": "the api key of the user",
            "type": "string"
          },
          {
            "name": "accounttype",
            "description": "the account type of the user",
            "type": "short"
          },
          {
            "name": "username",
            "description": "the user name",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name of the user",
            "type": "string"
          },
          {
            "name": "lastname",
            "description": "the user lastname",
            "type": "string"
          },
          {
            "name": "iscallerchilddomain",
            "description": "the boolean value representing if the updating target is in caller's child domain",
            "type": "boolean"
          },
          {
            "name": "firstname",
            "description": "the user firstname",
            "type": "string"
          }
        ]
      },
      {
        "name": "listSupportedNetworkServices",
        "description": "Lists all network services provided by CloudStack or for the given Provider.",
        "since": "3.0.0",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "provider",
            "description": "network service provider name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "service",
            "description": "network service name to list providers and capabilities of",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "capability",
            "description": "the list of capabilities",
            "type": "list",
            "response": [
              {
                "name": "name",
                "description": "the capability name",
                "type": "string"
              },
              {
                "name": "canchooseservicecapability",
                "description": "can this service capability value can be choosable while creatine network offerings",
                "type": "boolean"
              },
              {
                "name": "value",
                "description": "the capability value",
                "type": "string"
              }
            ]
          },
          {
            "name": "provider",
            "description": "the service provider name",
            "type": "list",
            "response": [
              {
                "name": "destinationphysicalnetworkid",
                "description": "the destination physical network",
                "type": "string"
              },
              {
                "name": "name",
                "description": "the provider name",
                "type": "string"
              },
              {
                "name": "physicalnetworkid",
                "description": "the physical network this belongs to",
                "type": "string"
              },
              {
                "name": "canenableindividualservice",
                "description": "true if individual services can be enabled/disabled",
                "type": "boolean"
              },
              {
                "name": "id",
                "description": "uuid of the network provider",
                "type": "string"
              },
              {
                "name": "state",
                "description": "state of the network provider",
                "type": "string"
              },
              {
                "name": "servicelist",
                "description": "services for this provider",
                "type": "list"
              }
            ]
          },
          {
            "name": "name",
            "description": "the service name",
            "type": "string"
          }
        ]
      },
      {
        "name": "listIsos",
        "description": "Lists all available ISO files.",
        "isasync": false,
        "related": "",
        "params": [
          {
            "name": "ispublic",
            "description": "true if the ISO is publicly available to all users, false otherwise.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "pagesize",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "projectid",
            "description": "list objects by project",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor for which to restrict the search",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "name",
            "description": "list all isos by name",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "isofilter",
            "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "keyword",
            "description": "List by keyword",
            "type": "string",
            "length": 255,
            "required": false
          },
          {
            "name": "id",
            "description": "list ISO by id",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": "listIsos"
          },
          {
            "name": "isrecursive",
            "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "isready",
            "description": "true if this ISO is ready to be deployed",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "domainid",
            "description": "list only resources belonging to the domain specified",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone",
            "type": "uuid",
            "length": 255,
            "required": false,
            "related": ""
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "tags",
            "description": "List resources by tags (key/value pairs)",
            "type": "map",
            "length": 255,
            "required": false
          },
          {
            "name": "page",
            "description": "",
            "type": "integer",
            "length": 255,
            "required": false
          },
          {
            "name": "listall",
            "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
            "type": "boolean",
            "length": 255,
            "required": false
          },
          {
            "name": "account",
            "description": "list resources by account. Must be used with the domainId parameter.",
            "type": "string",
            "length": 255,
            "required": false
          }
        ],
        "response": [
          {
            "name": "sourcetemplateid",
            "description": "the template ID of the parent template if present",
            "type": "string"
          },
          {
            "name": "isready",
            "description": "true if the template is ready to be deployed from, false otherwise.",
            "type": "boolean"
          },
          {
            "name": "ostypeid",
            "description": "the ID of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "isextractable",
            "description": "true if the template is extractable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "details",
            "description": "additional key/value details tied with template",
            "type": "map"
          },
          {
            "name": "projectid",
            "description": "the project id of the template",
            "type": "string"
          },
          {
            "name": "passwordenabled",
            "description": "true if the reset password feature is enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "crossZones",
            "description": "true if the template is managed across all Zones, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hostname",
            "description": "the name of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "isfeatured",
            "description": "true if this template is a featured template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "name",
            "description": "the template name",
            "type": "string"
          },
          {
            "name": "zoneid",
            "description": "the ID of the zone for this template",
            "type": "string"
          },
          {
            "name": "zonename",
            "description": "the name of the zone for this template",
            "type": "string"
          },
          {
            "name": "checksum",
            "description": "checksum of the template",
            "type": "string"
          },
          {
            "name": "account",
            "description": "the account name to which the template belongs",
            "type": "string"
          },
          {
            "name": "removed",
            "description": "the date this template was removed",
            "type": "date"
          },
          {
            "name": "displaytext",
            "description": "the template display text",
            "type": "string"
          },
          {
            "name": "tags",
            "description": "the list of resource tags associated with tempate",
            "type": "set",
            "response": [
              {
                "name": "project",
                "description": "the project name where tag belongs to",
                "type": "string"
              },
              {
                "name": "domainid",
                "description": "the ID of the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "projectid",
                "description": "the project id the tag belongs to",
                "type": "string"
              },
              {
                "name": "account",
                "description": "the account associated with the tag",
                "type": "string"
              },
              {
                "name": "key",
                "description": "tag key name",
                "type": "string"
              },
              {
                "name": "customer",
                "description": "customer associated with the tag",
                "type": "string"
              },
              {
                "name": "resourceid",
                "description": "id of the resource",
                "type": "string"
              },
              {
                "name": "domain",
                "description": "the domain associated with the tag",
                "type": "string"
              },
              {
                "name": "value",
                "description": "tag value",
                "type": "string"
              },
              {
                "name": "resourcetype",
                "description": "resource type",
                "type": "string"
              }
            ]
          },
          {
            "name": "status",
            "description": "the status of the template",
            "type": "string"
          },
          {
            "name": "hypervisor",
            "description": "the hypervisor on which the template runs",
            "type": "string"
          },
          {
            "name": "ispublic",
            "description": "true if this template is a public template, false otherwise",
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "the template ID",
            "type": "string"
          },
          {
            "name": "isdynamicallyscalable",
            "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
            "type": "boolean"
          },
          {
            "name": "format",
            "description": "the format of the template.",
            "type": "imageformat"
          },
          {
            "name": "ostypename",
            "description": "the name of the OS type for this template.",
            "type": "string"
          },
          {
            "name": "bootable",
            "description": "true if the ISO is bootable, false otherwise",
            "type": "boolean"
          },
          {
            "name": "hostid",
            "description": "the ID of the secondary storage host for the template",
            "type": "string"
          },
          {
            "name": "templatetype",
            "description": "the type of the template",
            "type": "string"
          },
          {
            "name": "templatetag",
            "description": "the tag of this template",
            "type": "string"
          },
          {
            "name": "sshkeyenabled",
            "description": "true if template is sshkey enabled, false otherwise",
            "type": "boolean"
          },
          {
            "name": "domain",
            "description": "the name of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "size",
            "description": "the size of the template",
            "type": "long"
          },
          {
            "name": "accountid",
            "description": "the account id to which the template belongs",
            "type": "string"
          },
          {
            "name": "created",
            "description": "the date this template was created",
            "type": "date"
          },
          {
            "name": "domainid",
            "description": "the ID of the domain to which the template belongs",
            "type": "string"
          },
          {
            "name": "project",
            "description": "the project name of the template",
            "type": "string"
          }
        ]
      }
    ]
  }
}
